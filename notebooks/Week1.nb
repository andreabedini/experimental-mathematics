(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    196273,       4412]
NotebookOptionsPosition[    188492,       4143]
NotebookOutlinePosition[    189262,       4172]
CellTagsIndexPosition[    189175,       4167]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
MAST90053 EXPERIMENTAL MATHEMATICS\
\>", "Title",
 CellChangeTimes->{{3.603139086542759*^9, 3.603139128363902*^9}}],

Cell["\<\
LECTURER: DR ANDREA BEDINI
2014, SEMESTER 1, WEEK 1\
\>", "Subtitle",
 CellChangeTimes->{{3.603139086542759*^9, 3.603139135354157*^9}}],

Cell["Getting started", "Subtitle",
 CellChangeTimes->{{3.6031609503096952`*^9, 3.6031609611410427`*^9}}],

Cell["Difference between = and :=", "Subsubtitle",
 CellChangeTimes->{{3.6031609970371447`*^9, 3.603161019327589*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y", ",", "f"}], "]"}]], "Input",
 CellChangeTimes->{{3.603161020825162*^9, 3.603161080270132*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "=", "3"}], ";"}]], "Input",
 CellChangeTimes->{{3.603161020825162*^9, 3.603161080270132*^9}, 
   3.603161115837048*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  RowBox[{"x", "+", "y", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Evaluated", " ", "the", " ", "rhs", " ", "to", " ", "x"}], "+", 
     "3"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.603161020825162*^9, 3.60316104056168*^9}, {
  3.603161071952264*^9, 3.6031610720799227`*^9}, {3.603161116933812*^9, 
  3.603161117413652*^9}, {3.603161179399226*^9, 3.603161189850347*^9}}],

Cell[BoxData[
 RowBox[{"3", "+", "x"}]], "Output",
 CellChangeTimes->{{3.603161034795134*^9, 3.6031610486417418`*^9}, 
   3.603161083336727*^9, 3.6031611177401733`*^9, 3.603161569876371*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.603161045115448*^9, 3.603161046736998*^9}, {
  3.603161101910685*^9, 3.6031611021581993`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.60316104942577*^9, {3.6031610848927402`*^9, 3.6031611182734547`*^9}, 
   3.603161569927533*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"y", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"change", " ", "y"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "3", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"result", " ", 
    RowBox[{"doens", "'"}], "t", " ", "change"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.60316110442*^9, 3.6031611107580223`*^9}, {
  3.603161531021607*^9, 3.603161555712995*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.603161107813624*^9, 3.603161119139776*^9}, 
   3.603161569978006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellChangeTimes->{{3.603161041744855*^9, 3.603161042152946*^9}}],

Cell[CellGroupData[{

Cell["Global`f", "Print", "PrintUsage",
 CellChangeTimes->{3.603161570180872*^9},
 CellTags->"Info3603201170-9909653"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], "=", 
         RowBox[{"3", "+", "x"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`f],
  Editable->False]], "Print",
 CellChangeTimes->{3.603161570262372*^9},
 CellTags->"Info3603201170-9909653"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y", ",", "f"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "=", "3"}], ";"}]], "Input",
 CellChangeTimes->{{3.603161020825162*^9, 3.603161080270132*^9}, 
   3.603161115837048*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "+", "y", " ", 
   RowBox[{"(*", 
    RowBox[{"Leaves", " ", "the", " ", "rhs", " ", "unevaluated"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.603161020825162*^9, 3.60316104056168*^9}, {
  3.603161071952264*^9, 3.6031610720799227`*^9}, {3.603161116933812*^9, 
  3.603161172755599*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.603161045115448*^9, 3.603161046736998*^9}, {
  3.603161101910685*^9, 3.6031611021581993`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.60316104942577*^9, {3.6031610848927402`*^9, 3.6031611182734547`*^9}, 
   3.603161149268352*^9, 3.603161570695154*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"y", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"change", " ", "y"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "3", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"result", " ", "changes"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.60316110442*^9, 3.6031611107580223`*^9}, {
  3.603161552280184*^9, 3.6031615684865713`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.603161107813624*^9, 3.603161119139776*^9}, 
   3.603161150435884*^9, 3.603161570745627*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellChangeTimes->{{3.603161041744855*^9, 3.603161042152946*^9}}],

Cell[CellGroupData[{

Cell["Global`f", "Print", "PrintUsage",
 CellChangeTimes->{3.6031615710465384`*^9},
 CellTags->"Info3603201170-9909653"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], ":=", 
         RowBox[{"x", "+", "y"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`f],
  Editable->False]], "Print",
 CellChangeTimes->{3.603161571098276*^9},
 CellTags->"Info3603201170-9909653"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Many ways of applying a function\
\>", "Subsubtitle",
 CellChangeTimes->{{3.603161280584502*^9, 3.603161295461343*^9}, {
  3.603162380541192*^9, 3.603162381474477*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.603161255425947*^9, 3.603161256288233*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.603161251806719*^9, 3.603161260158107*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.6031612574188557`*^9, 3.603161571330359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "//", "f"}]], "Input",
 CellChangeTimes->{{3.603161264352507*^9, 3.6031612647357473`*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.603161265177458*^9, 3.603161571384336*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "@", "x"}]], "Input",
 CellChangeTimes->{{3.603161266237362*^9, 3.60316126710983*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.603161267457758*^9, 3.603161571514234*^9}]
}, Open  ]],

Cell["Also", "Text",
 CellChangeTimes->{{3.603162367746613*^9, 3.603162371250353*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "~", "f", "~", "y"}]], "Input",
 CellChangeTimes->{{3.603162372549279*^9, 3.603162388699821*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Output",
 CellChangeTimes->{3.603162376944169*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applying a function to a list", "Subsubtitle",
 CellChangeTimes->{{3.6031613056406527`*^9, 3.6031613145486317`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "/@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.60316131846939*^9, 3.6031613218659477`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.603161322478879*^9, 3.6031615716290092`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating an array of symbols", "Subsubtitle",
 CellChangeTimes->{{3.603161580067313*^9, 3.603161592800118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{"a", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.603161595594541*^9, 3.603161599692871*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], ",", 
   RowBox[{"a", "[", "2", "]"}], ",", 
   RowBox[{"a", "[", "3", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.60316160010362*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{"a", ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603161605196669*^9, 3.603161606716536*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "1"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "3"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "3"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"3", ",", "1"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"3", ",", "2"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"3", ",", "3"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.603161607225258*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 1.", "Subtitle",
 CellChangeTimes->{{3.603139079386022*^9, 3.6031390962124977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "0", "]"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{"1", ",", "200"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "0", "]"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], ",", "200"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"a", "[", "n", "]"}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"n", "-", "1"}], "]"}], "+", 
       RowBox[{"b", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}], ")"}], "/", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"b", "[", "n", "]"}], "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"n", "-", "1"}], "]"}], 
       RowBox[{"b", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "[", "100", "]"}], "//", "Timing"}]}], "Input",
 CellChangeTimes->{{3.603139167988645*^9, 3.603139178954194*^9}, {
  3.60316191870158*^9, 3.603161924958325*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.00299599999999999996522226375361697137`3.497141722307053", ",", 
   "1.198140234735592207439922492280323878227212663215651558263674952946405214\
143915670835885556489793389375907225097243762275928877539703528030765602169764\
967278387054304171887387735562906353209391152166069108866915656356280226866321\
566`200."}], "}"}]], "Output",
 CellChangeTimes->{{3.6031619254730053`*^9, 3.603161938953532*^9}}]
}, Open  ]],

Cell["\<\
We actually don' t need many terms because the convergence is very fast. The \
following shows that we have 200 digits of the limit in just 8 iterations.\
\>", "Text",
 CellChangeTimes->{{3.603162093423976*^9, 3.603162158397973*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"a", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6031619671232986`*^9, 3.603162028149198*^9}, {
  3.603162088923645*^9, 3.603162091996088*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"1.`200."},
     {"1.207106781186547524400844362104849039284835937688474036588339868995366\
239231053519425193767163820786367506923115456148512462418027925368606322060748\
549967915706611332963752796377899975250576391030285735054779985802985137267298\
431008`200."},
     {"1.198156948094634295559172166332662477288904015076145724803671046857416\
453728985339647987555850979230041772158945112680849263072194857608181553710805\
543992845388381422183654944325531159059733157602865903481745244826478848186154\
134056`200."},
     {"1.198140234793877209082878869076407463990458626742200561296030087469518\
728896565601717210752803162955998899924090832737693137188330893291028249034691\
731272196415268278584155942461111063530378013566720423054842466025201869918715\
250803`200."},
     {"1.198140234735592207440631328633104086361144741299704500085951232699492\
200430281485923723878758307884514490064616375322943823420626628250569833624265\
809291025295305798475353222583975308411780260687080854225793429232432753386955\
246288`200."},
     {"1.198140234735592207439922492280323878227212768055001839666470062363043\
964940059448057805782629775577051054125071191205556465847522485621882152284219\
515832784010969005858675803072645822736463141195061851514626183656332032373186\
853464`200."},
     {"1.198140234735592207439922492280323878227212663215651558263674952946405\
214143915670835887849896076054662225872959380119403065985917084209303664909865\
663162436335548001920572678063164461492884295941289743364181621342030013444461\
803192`200."},
     {"1.198140234735592207439922492280323878227212663215651558263674952946405\
214143915670835885556489793389375907225097243762275928877539703528030765602169\
764967278387054304171887388833037188762507285043342683683495589970176018455220\
886083`200."},
     {"1.198140234735592207439922492280323878227212663215651558263674952946405\
214143915670835885556489793389375907225097243762275928877539703528030765602169\
764967278387054304171887387735562906353209391152166069108866915656356280226866\
321566`200."},
     {"1.198140234735592207439922492280323878227212663215651558263674952946405\
214143915670835885556489793389375907225097243762275928877539703528030765602169\
764967278387054304171887387735562906353209391152166069108866915656356280226866\
321566`200."},
     {"1.198140234735592207439922492280323878227212663215651558263674952946405\
214143915670835885556489793389375907225097243762275928877539703528030765602169\
764967278387054304171887387735562906353209391152166069108866915656356280226866\
321566`200."}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.603161968547957*^9, 3.603162028473387*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"i1", "=", 
  RowBox[{"a", "[", "10", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"i2", "=", 
  RowBox[{"b", "[", "10", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6031393164348593`*^9, 3.603139331505341*^9}, {
  3.6031394486095533`*^9, 3.6031394521949883`*^9}, {3.603162164441215*^9, 
  3.603162165366946*^9}}],

Cell[BoxData["1.\
198140234735592207439922492280323878227212663215651558263674952946405214143915\
670835885556489793389375907225097243762275928877539703528030765602169764967278\
387054304171887387735562906353209391152166069108866915656356280226866321566`\
200."], "Output",
 CellChangeTimes->{{3.603139319945548*^9, 3.603139331840125*^9}, 
   3.603139460175658*^9, 3.603143992445383*^9, 3.603144553088359*^9, 
   3.603161571779108*^9, 3.603161629731535*^9, 3.6031621657160053`*^9}],

Cell[BoxData["1.\
198140234735592207439922492280323878227212663215651558263674952946405214143915\
670835885556489793389375907225097243762275928877539703528030765602169764967278\
387054304171887387735562906353209391152166069108866915656356280226866321566`\
200."], "Output",
 CellChangeTimes->{{3.603139319945548*^9, 3.603139331840125*^9}, 
   3.603139460175658*^9, 3.603143992445383*^9, 3.603144553088359*^9, 
   3.603161571779108*^9, 3.603161629731535*^9, 3.603162165719667*^9}]
}, Open  ]],

Cell["\<\
Version without the trick is exponentally slower\
\>", "Text",
 CellChangeTimes->{{3.603161853367136*^9, 3.603161862585423*^9}, {
  3.603161906012649*^9, 3.603161910554283*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "0", "]"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{"1", ",", "200"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "0", "]"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], ",", "200"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"n", "-", "1"}], "]"}], "+", 
      RowBox[{"b", "[", 
       RowBox[{"n", "-", "1"}], "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "n_", "]"}], ":=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"n", "-", "1"}], "]"}], 
      RowBox[{"b", "[", 
       RowBox[{"n", "-", "1"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "[", "15", "]"}], "//", "Timing"}]}], "Input",
 CellChangeTimes->{{3.603161695086035*^9, 3.603161745908642*^9}, {
  3.603161849097219*^9, 3.60316190129366*^9}, {3.603162176386582*^9, 
  3.603162195521386*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.29195300000000001805489091566414572299`5.485912855537769", ",", 
   "1.198140234735592207439922492280323878227212663215651558263674952946405214\
143915670835885556489793389375907225097243762275928877539703528030765602169764\
967278387054304171887387735562906353209391152166069108866915656356280226866321\
566`200."}], "}"}]], "Output",
 CellChangeTimes->{{3.6031618650272093`*^9, 3.6031619019416637`*^9}, {
  3.603162176894313*^9, 3.603162196310367*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 2.", "Subtitle",
 CellChangeTimes->{{3.603139360608959*^9, 3.6031393654891357`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"i3", "=", 
  RowBox[{
   FractionBox["2", "\[Pi]"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["t", "4"]}]]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "100"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "200"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Precision", "[", "i3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"1", "/", "i3"}]}], "Input",
 CellChangeTimes->{{3.603139377920697*^9, 3.603139380584297*^9}, {
  3.603139412581827*^9, 3.603139458794648*^9}}],

Cell[BoxData["0.\
834626841674073186281429732799046808993993013490347002449827370103681992709526\
411869691160351275324129067850352412010086724785303652758815013659466440006560\
537129622522907816661202150095459049727905317494711863687318167890772346065`\
200."], "Output",
 CellChangeTimes->{{3.603139383800116*^9, 3.603139425167334*^9}, 
   3.603139460662918*^9, 3.6031439928941517`*^9, 3.603144553522912*^9, 
   3.603161572397397*^9, 3.6031622155348253`*^9}],

Cell[BoxData["200.`"], "Output",
 CellChangeTimes->{{3.603139383800116*^9, 3.603139425167334*^9}, 
   3.603139460662918*^9, 3.6031439928941517`*^9, 3.603144553522912*^9, 
   3.603161572397397*^9, 3.603162215538431*^9}],

Cell[BoxData["1.\
198140234735592207439922492280323878227212663215651558263674952946405214143915\
670835885556489793389375907225097243762275928882856917918049471858318502176539\
207970811257091329763009948748823765107855475485299025646359707256041621915`\
200."], "Output",
 CellChangeTimes->{{3.603139383800116*^9, 3.603139425167334*^9}, 
   3.603139460662918*^9, 3.6031439928941517`*^9, 3.603144553522912*^9, 
   3.603161572397397*^9, 3.603162215541284*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"i2", " ", "i3"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.6031394640400457`*^9, 3.603139467900701*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  "4.4378898528452463794977355138030374548702742521642567146182149798048143000\
54422919806003630658076616925596`74.34614652330113*^-126"}]], "Output",
 CellChangeTimes->{3.60313946823409*^9, 3.60314399294582*^9, 
  3.603144553567958*^9, 3.603161572444669*^9, 3.603162216395957*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 3.", "Subtitle",
 CellChangeTimes->{{3.603139517678309*^9, 3.603139521305168*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"L", "[", "0", "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"L", "[", 
     RowBox[{"n", "-", "1"}], "]"}], "+", "n"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"L", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603139532632143*^9, 3.603139554766501*^9}, {
  3.603139675163498*^9, 3.603139676071073*^9}, {3.60313975073526*^9, 
  3.6031397508604918`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "4", ",", "7", ",", "11", ",", "16", ",", "22", ",", "29", ",", 
   "37", ",", "46", ",", "56", ",", "67", ",", "79", ",", "92", ",", "106", 
   ",", "121", ",", "137", ",", "154", ",", "172", ",", "191", ",", "211"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.603139529925761*^9, 3.6031395550484877`*^9}, {
   3.603139655191903*^9, 3.603139676495037*^9}, 3.603139751147111*^9, 
   3.60313981657475*^9, 3.603143993024601*^9, 3.603144553645699*^9, 
   3.60316157252385*^9, 3.6031622303919897`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"n", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], "/", "2"}]}], "+", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.603139544230371*^9, 3.603139569686111*^9}, {
  3.603139682113962*^9, 3.603139682296343*^9}, {3.6031397429915648`*^9, 
  3.603139747996879*^9}, {3.603139807683042*^9, 3.6031398122897043`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "4", ",", "7", ",", "11", ",", "16", ",", "22", ",", "29", ",", 
   "37", ",", "46", ",", "56", ",", "67", ",", "79", ",", "92", ",", "106", 
   ",", "121", ",", "137", ",", "154", ",", "172", ",", "191", ",", "211"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.603139555643852*^9, 3.6031395704072447`*^9}, {
   3.6031396557603416`*^9, 3.603139682832007*^9}, {3.603139743936206*^9, 
   3.6031397741513243`*^9}, {3.6031398082967*^9, 3.60313981712499*^9}, 
   3.603143993080119*^9, 3.603144553701453*^9, 3.6031615725802803`*^9, 
   3.60316223139285*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Check on the On-Line Encyclopedia of Integer Sequences\>\"", ",", 
   "\"\<https://oeis.org/A000124\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6031622356894093`*^9, 3.603162240095586*^9}, {
  3.603162277417519*^9, 3.6031623290076103`*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{
    False->"\<\"Check on the On-Line Encyclopedia of Integer Sequences\"\>", 
    True->
    StyleBox["\<\"Check on the On-Line Encyclopedia of Integer Sequences\"\>",
      "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["https://oeis.org/A000124"], None},
   ButtonNote->"https://oeis.org/A000124"],
  Annotation[#, "https://oeis.org/A000124", "Hyperlink"]& ]], "Output",
 CellChangeTimes->{{3.603162298270712*^9, 3.603162330105935*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 4.", "Subtitle",
 CellChangeTimes->{{3.603142814062232*^9, 3.603142815471456*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"n", ",", "m"}], "]"}], "~", "Mod", "~", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", 
       RowBox[{"2", "^", "8"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", 
       RowBox[{"2", "^", "8"}]}], "}"}]}], "]"}], "//", "Image"}], "//", 
  "ColorNegate"}]], "Input",
 CellChangeTimes->{{3.603162767700226*^9, 3.603162773937077*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt1lGuY7mtBdDbmUlGkjlkCAHynalnCPkIiKpSl6G2eY9pnb028LCgx2aR
urKN/P1f//nnv//29fX1xx///79f899/kCTJNNdM70OSJN9n5dGZJEne112m
9yNJktdZebVOkiTPdc2zdZIkea6VV88kSfJcu5nenyRJvm5lqp8kSc655t39
JElyzsqj89X9JElyzl2u7idJknNWpuokSXLONe+ukyTJOStTZ5IkOed0pu9P
kmSyldT5JEkmuyZtPkmSyVYene8+nyTJZHe5+3ySJJOtvFo/fT5JksmuebZ+
+nySJJOtvHo+fT5Jksl2c/p8kiSTraT2kySZ7Jq0fpIkk608Ot+9nyTJZHe5
ez9JkslWUuskSSa7Jq1OkmSyldQzSZLJpmf670+S5KSV6T3cnyTJ97tmeh/3
J0nyfVYene/uet/1TJLknd1lej/3J0nyOiuv1k93d79dnSTJk13zbP10d/fb
1UmSPNnKq+fT3d1vdyZJ8mS7md7f/UmSfN3KVP+03f27/SRJTrrm3f3Tdvfv
9pMkOWnl0fnq/mm7+3f7SZKcdJer+6ft7t/tJ0ly0spUfdqr77erkyQ56Zp3
16ft7t+tkyQ5aWXqPO133+fZM0mSk07H/UmSnLNifuZ8kmS2a8zPmk+SzLby
6Gz+veeTJLPdxfx7zydJZlt5tW7+2fNJktmuebZu/tnzSZLZVl49m3/2fJJk
tt2Yf/Z8kmS2Ff2Z/STJbNfoz+onSWZbeXTWf+9+kmS2u+i/dz9JMtuKemad
JJntGvWsOkky24pz5pkkma1kZ/rzR5KctTK9B2esTO9BkpxxzfQ+fK9rpvch
Sb7XyqMz723F+5NkprtM78dr3WV6P5LktVZerfNsK96fJDNd82ydZ7vG+5Nk
lpVXzzzbivcnyUy7md6fPbuZ3p8k2bMy1c9ZK96fJDNd8+5+zrrG+5NklpVH
56v7OWvF+5Nkprtc3c9Zd/H+JHlvK1N1zlrx/iSZ6Zp31znrGu9PkllWps6c
teL9STLT6UzfP93pTN+fJNOtpM5Pt5I6nyTTXZM2P901afNJMt3Ko/Pd56db
8f4kmekud5+f7i53n0+S6VZerZ8+P92K9yfJTNc8Wz99frprvD9JZll59Xz6
/HQr3p8kM+3m9PnpdnP6fJJMt5Lan24ltZ8k012T1p/umrR+kky38uh89/50
K6e+X7efJNPd5e796e5y936STLeSWk+3klonyXTXpNXTXZNWJ8l0K6nndCup
Z5JMNz3Tf/9p0zP99yfJaSvTe7j/jJXpPdyfJGdcM72P+7/XNdP7uD9JvtfK
o/PdXe+7nu/uet/1fHfX+65nkry7u0zv5/7Xusv0fu5PktdaebV+urv77eqn
u7vfrn66u/vt6iR5umuerZ/u7n67+unu7rern+7ufrs6SZ5u5dXz6e7utzuf
7u5+u/Pp7u63O5Pk6XYzvb/79+xmen/3J8melan+abv7d/un7e7f7Z+2u3+3
nySnXfPu/mm7+3f7p+3u3+2ftrt/t58kp608Ol/dP213/27/tN39u/3Tdvfv
9pPktLtc3T9td/9u/7Td/bv903b37/aT5LSVqfq0V99vV5/26vvt6tNefb9d
nSSnXfPu+rTd/bv1abv7d+vTdvfv1kly2srUedrvvs+z52m/+z7Pnqf97vs8
eybJaafj/rNOx/1JctaK+eabnzefJNeYb775OfNJsvLobL755t93PknuYr75
5t93PklWXq2bb775584nyTXP1s033/xz55Nk5dWz+eabf+58kuzGfPPNP3c+
SVb069ef10+Sa/Tr15/TT5KVR2f9+vXft58kd9GvX/99+0myoq6unlcnyTXq
6uo5dZKsODs7551JUkRyM/37Q3LeyvQeJH3/Sc79DlSm9yHp+0/y/b8Dj84k
72vF95/MdZfp/Uj6/pO8/nfg1TrJc634/pO5rnm2TvJc1/j+k3lWXj2TPNeK
7z+ZazfT+5P0/SfZ/x2Y6ifp+09y/neg8u5+kr7/JOd/Bx6dr+4n6ftPcv53
4FGu7ifp+09y/ndgqk7S95/k/O9A5d11kr7/JOd/B6bOJH3/Sc7/Dkxl+v5k
stOZvj/JH0mdTyZbSZ1P8s9Jm08muyZtPskfeXS++3wy2YrvP5nrLnefTya7
y93nk/yRV+unzyeTrfj+k7muebZ++nwy2TW+/2SelVfPp88nk634/pO5dnP6
fDLZbk6fT/JHUvvJZCup/ST/nLR+Mtk1af0kf+TR+e79ZLKVU7+/3X6S+9y9
n0x2l7v3k/yR1DqZbCW1TvLPSauTya5Jq5P8kdQzmWwl9UxSpv/+5KTpmf77
k59gZXoP9yd9/t2fnPseVKb3cX/S59/9yfd/Dx6d7+563/VM3tlK6ud/ve96
JhPcZXo/9yd9/t2fvP578Gr9dHf329XJk62kfv5399vVyTu45tn66e7ut6uT
J7sm7fO/u9+uTt7Byqvn093db3cmT7aS+vnf3W93Ju9gN9P7uz/p8+/+ZP97
MNU/bXf/bj85aSX189/dv9tPfoJr3t0/bXf/bj856Zq0z393/24/+QlWHp2v
7p+2u3+3n5y0kvr57+7f7Sc/wV2u7p+2u3+3n5x0l7t//rv7d/vJT7AyVZ/2
6vvt6uSkldTP/9X329XJT3DNu+vTdvfv1slJ16R9/rv7d+vkJ1iZOk/73fd5
9kxOWkn9/H/3fZ49k5/gdNyf9Pl3f3L+e2B+5nxmWzE/cz75u5ifNZ/ZrjE/
az75cx6dzb/3fGZbSf38p88n/0rMv/d8ZruL+feeT/6cV+vmnz2f2VZSP//p
88nf5dm6+WfPZ7Zr0j7/6fPJn/Pq2fyz5zPbSurnP30++R0x/+z5zLYb88+e
T/4c/Zn9zLaiP7Of/F30Z/Uz2zX6s/rJn/PorP/e/cy2curnV3+vn/wr0X/v
fma7i/5795M/Rz2zzmwr6pl18ndRz6oz2zXqWXXy5zhnnpltxTnzTIpMf/44
q2Rn+vPHz7AyvQdnrEzvwRkr03twxsr0Hpx1zfQ+fK9rpvfhe10zvQ/f65rp
fThj5dGZ97bi/TOteP9MK94/212m9+O17jK9H691l+n9eK27TO/H91h5tc6z
rXj/TCveP9OK9892zbN1nu0a75/lGu+f5Rrvn2nl1TPPtuL9M614/0wr3j/b
bqb3Z89upvdnz26m92fPbqb35/dYmernrBXvn2nF+2da8f7Zrnl3P2dd4/2z
XOP9s1zj/TOtPDpf3c9ZK94/04r3z7Ti/bPd5ep+zrqL97+3u3j/e7uL98+w
MlXnrBXvn2nF+2da8f7Zrnl3nbOu8f5ZrvH+Wa7x/plWps6cteL9M614/0wr
3j/b6UzfP93pTN8/3elM3z/d6Uzfn1+/JHV+upXU+elWUuenW0mdz6/fJm1+
umvS5qe7Jm1+umvS5vPrlzw6331+uhXvn2nF+2da8f7Z7nL3+enucvf56e5y
9/np7nL3+fz6Ja/WT5+fbsX7Z1rx/plWvH+2a56tnz4/3TXeP8s13j/LNd4/
08qr59Pnp1vx/plWvH+mFe+fbTenz0+3m9Pnp9vN6fPT7eb0+fz6Jan96VZS
+9OtpPanW0nt59dvk9af7pq0/nTXpPWnuyatn1+/5NH57v3pVk59v25/upVT
36/bn27l1Pfr9vPrL+Xu/enucvf+dHe5e3+6u9y9n1+/JLWebiW1nm4ltZ5u
JbXOr98mrZ7umrR6umvS6umuSavz65ekntOtpJ7TraSe062knvklX/N//2nT
M/33nzY903//adMz/ff/FCvTe7j/jJXpPdx/xsr0Hu4/Y2V6D/efdc30Pu7/
XtdM7+P+73XN9D7u/17XTO/j/jNWHp3v7nrf9Xx31/uu57u73nc93931vuv5
7q73Xc93d73ver67633Xc4q7TO/n/te6y/R+7n+tu0zv5/7Xusv0fu7/Hnf3
3dVPd3e/Xf10d/fb1U93d79d/XR399vVT3d3v139dHf329VPd3e/Xf0urnm2
frq7++3qp7u7365+urv77eqnu7vfrn66u/vt6qe7u9+ufrq7++3qd3G937Pn
093db3c+3d39dufT3d1vdz7d3f1259Pd3W93Pt3d/Xbn093db3e+i91M7+/+
PbuZ3t/9e3Yzvb/79+xmen/3/x679+n2T9vdv9s/bXf/bv+03f27/dN29+/2
T9vdv9s/bXf/bv+03f27/Z/imnf3T9vdv9s/bXf/bv+03f27/dN29+/2T9vd
v9s/bXf/bv+03f27/Z/iuv+z9+n2T9vdv9s/bXf/bv+03f27/dN29+/2T9vd
v9s/bXf/bv+03f27/Z/iLlf3T9vdv9s/bXf/bv+03f27/dN29+/2T9vdv9s/
bXf/bv+03f27/Z/ibt+r69Nefb9dfdqr77erT3v1/Xb1aa++364+7dX329Wn
vfp+u/q0V99vV/8U17y7Pm13/2592u7+3fq03f279Wm7+3fr03b379an7e7f
rU/b3b9b/xTX/d59nva77/Psedrvvs+z52m/+z7Pnqf97vs8e572u+/z7Hna
777Ps+dpv/s+z54/xem4/6zTcf9Zp+P+s07H/T/D6X3MN99888033/z5Pab2
Md98880333zz3z9/3ePR2XzzzTfffPPNv9/8de6jmG+++eabb77595u/7vFq
3XzzzTfffPPNP2/+OufRvF3dfPPNN998880/b/4659Wz+eabb7755pt/3vz1
33015ptvvvnmm2/+efPXPfTr169fv379Of3rv/Pqv6dfv379+vXrP69//Xce
nfXr169fv3799+tf+x5Fv379+vXr13+//vXfUVdXV1dXV8+pr//do/9eXV1d
XV1d/X719b9zdnZ2dnZ2zjmv/38RERHJye5/H5Akyfv69fU/v3MZDw==
    "], {{0, 257}, {
    257, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{257, 257},
  PlotRange->{{0, 257}, {0, 257}}]], "Output",
 CellChangeTimes->{
  3.603142819695607*^9, 3.6031439932626753`*^9, 3.603144553875022*^9, 
   3.603161572758997*^9, {3.603162769974868*^9, 3.6031627745725317`*^9}}]
}, Open  ]],

Cell["PS: There are many other ways.", "Text",
 CellChangeTimes->{{3.60316245421*^9, 3.603162459350623*^9}, {
  3.603162775320346*^9, 3.603162775894299*^9}, {3.603162852786458*^9, 
  3.603162866641513*^9}, {3.60316526013863*^9, 3.6031652604697437`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 5.", "Subtitle",
 CellChangeTimes->{{3.603142875481785*^9, 3.603142878870606*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"x_", ",", "y_", ",", "0"}], "]"}], "=", "x"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"x_", ",", "y_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"x", ",", "y", ",", "n"}], "]"}], "=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"x", ",", "y", ",", 
          RowBox[{"n", "-", "1"}]}], "]"}], "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", 
        RowBox[{"a", "[", 
         RowBox[{"x", ",", "y", ",", "n"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2", ",", ".1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2", ",", ".1"}], "}"}]}], "]"}], ",", "2"}],
    "]"}], "//", "ListPointPlot3D"}]}], "Input",
 CellChangeTimes->{{3.6031428736228743`*^9, 3.603142886933425*^9}, {
  3.603162914365025*^9, 3.603162917771187*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {Hue[0.67, 0.6, 0.6], Point3DBox[CompressedData["
1:eJx0nXd8VcXWhg+h9yIgYkWxYC8INthREbFee8VrL9fer72LXK9d7F0RrIgK
Kl50AOsBRUQUj/rJETEoBEwIHA4hhC9n73nWzrz8kj/Yv7xMZk1Zzy5T1vQ5
45Kjzi7LZDJDemcyzTP2MyW8dinn93Pin3p36aB2c1+6tJPpX39V+qlzhW2G
3z9tRQfTd4t/VrsGseF/2pv+5BOln1VucCmbQe1MTy5Fl1zbit2Ci1PPbW16
bPar5S7OflorsVvj9ZZit9rn00LsVnm7qZ7kX+ni6g5qbvrjcT5/+XqVSTkr
fDs0M33XuDy/+3ZL9eSS93ZTPck/50bHf5Axfec4n+/c8NhwRtJnXb/4P1L9
gVif5JJmTvVM+GP680n6SNMnejbS/PdIyhNpeZL0uUjL7+sbaX37J+0TXSbt
c17SnpG259NJ+0cPSPvPSvorGiz9lVyqvN20f70/ROoPSXlqok/Ef2Ym/ub1
1N+SchaiH8U/k0vR20392ft/pP6f2F3t65Xyktiti1YKX4nd+uhy4dFf/e9d
yuGW/4dfdK6/Xdd93IG/dTAdrpPf25sO10l27UyH64ZMGnJqI3aL3v9bi92C
i5Mf2Mp0uE64aSl2a/y1hditdsPifJqL3Spvt0zyr/TlbGY6XCd/10zKWeGv
GdPhOrnPrI1Cu3nfnvVRmH/Oxd24TarDdfzfT6yR9Flf31SH69jsijqxm8kk
dlMdrguSHq41f7h+UsoD1/2k/L6+kdYXrrV94PpcaU+41vaH67ekv+Ba+xeu
1R/gur/4D1z3F3+D64PEP+Fa/Rmu1f/hWnmB68ROe7FbH80XHuEafuETrnn+
htzWG7/oXCuP/GCTOxe3NR2u71xc+o82psN1Uo/WYrfon3ctxW7B22lhOlyX
rB75QXOxW+P1MrFb7fNpJnarvN2M5F/p80t1uE5ut2ujsJwV/n1gjelw7X+P
Qrt5326rozD/nPUzOlwnz8FaSZ/17z+pDteJnVqxm8kkdleZDtfNJD1ca/5w
/bKUB661/HCt9YVr/Bcdrn+U9oTrDtL+cN1f+guutX/hWv0BrieJ/8D1JPE3
uJ4p/gnX6s9wrf5Pe40QXmiXJcIXXJ8nPMI1/IbP18wU3p/Rw/tBO9PJD37R
ucbNsElr0+E6+buWYrfo329biN2CvzY3PeFuuYure2SZ2K1xR8V6M7Fbbc/T
0G6VL+faKMy/0nOzxnS43if287ooLGeFaxv722rT4Xpt/LMqCu3mvd1Vkn/O
51c0Ha5/iP18paTP+veNVIfrxP5KsZvJJHZTHa53k/RwrfnD9VwpD1xr+eFa
6wvX3H/Q4bqdtCdcD5b2h+snpb/gWvsXrtUf4Fr9B66PEn+D63PFP+Fa/Rmu
1f/helPhBa5HCF9w3Ux4hGv4hTe45v0fHa55fwj5rLPnLzp2KD861xtKrw/X
tRC7Rcf3UWi34HrEhstMh2vex0K7NVa/0G6129a/H4Z2q3x56qIw/0r/HK81
Ha7pn7CcFe5c78/ocH1K3NArxW7e2y1I/jn3afICbTpcJ+28QtJnze/Q4Tr5
XlsudjOZxG6qw/WDkh6uNX+43l3KA9dafrjW+sL1P6V94Po8aU+4flraH66L
0l9wrf0L1+oPcN1M/If6NxN/g+ue4p9wrf6M36j/w/VM4QWudxe+4Hq88Ijf
h9/vReM6ubQ1Ha75XkAPx81amg7X3K/Qw3Gz5qaH1zKxy7hZxnS4viO+j62N
Qrs1/v1hjelwndyXVkehPcbNaqMw/0oXf75cVzQdrnneheWscLHZxStMh+vk
u3K52GXcbLnkn/PjADWmw3XyfbFM0mf9+0mqw3Vc/O7LxC4/qQ7XPSQ9XGv+
cD1JygPXWn5f30jrC9fzpX3gulLaE643k/aH6xukv3z/2vsAOlyrP8D1CPEf
uB4h/haOm6X+6a8+XVl5aHdVpP4fjpulvITjZilf4bhZyqPvWP9723L48foU
xp/D9+B6Gb8qGNd8/6LDNe/P6HDN8ze0WzR+Q7sFd3J8g2BcpSDjZmui0G6N
11dHod1qP568KgrtVnneV0r+lX78qmA6XHv7UVjOCj+uVWM6XN8X99cysZv3
dqsl/5wf76oyHa6T36skfda/5/9tOlwn972/xW4mk7RnqsO1podrzR+utTxw
XZDyw7XWF67vl/aB6yelPeH6a2l/uN5W+guutX/hWv0hHDdL/SccN1sj5Sz4
9421YrcYqT/Dtfo/9nifD+3W2fd7aLdexuusf8vhN3yvzUxh/gg9+bt6G39G
h2vGr9Dhmu9f9PB9oZnYLdrzN7RbMH7Rubbx31+h3Rr/nbsqCu1W2/dmaLfK
210h+Ve6+tifa0yH6xfjF5dlUs4Kd0l8/6w2Ha7P9v4f2s378v8t+efcY/F1
ielwfU38PKqU9Fn3Ruy3i02H613iv1ssdjOZxG6qw7Wmh2vNH66vlfLA9RNS
frjW+sL1OdI+cH2ptCdcj5b2h+vEznLt30j7F67VH+C6nfgPXLcTf4NreA/t
FiP1Z7hW/4fro4QXuJ4kfME14/PSv+XwCw8h1y1Nh+vk9xamh1yXmQ7X4fhD
jdPvgNBu0d6fQ7sFe/6iUw/4De3W+PHqlVFot9q+T0O7Vd5ujeRf6f9/melw
Hd8OX6qSclb49+2lpsO1z0/s5n05F0v+Of/c/8t0uE6+C/6U9Fn/3F9oOlwn
vy8Uu5lMYjfVw3Ez1bOR5g/X10t54PopKT9ca33h+mtpH7ieL+0J1y9L+8N1
M+kvuNb+hWv1B7huL/4D1x3E3+B6QPz7arFbjNSfQ65T/w+5TnmB6w+Fr5Dr
FspvOfzi93DNfH04jlxv87/hvBHv4c1MT+zwHp4xHa7D8Ypq45rvndBuwd6f
0eGa+21ot0bGl6qN62T8qkbsVtn7cJh/pV/vUWU6XPM8CstZ4e0ujsL3g99d
Ms75l9jN+/IslPxzfv7rD9PhOmnnBZI+6xJ/TnW4Tr4Hfxe7mUxiN9XhWtPD
teYP1zOlPHC9VMoP11pfuN5M2geud5f2DMfN0vaH6+2kv+Ba+xeu1R/C9/DU
f+B6d/E3uD5V/BOu1Z/hWv0/fA9PeQnfw1O+wvfw5spvebjepsq4Ti6pDtfM
76OH42YZ0+Ga+QX0cDy8znS4Tq61UWi3YN+/6HDN+1Vot8aev6HdauM3tGtX
yb/Sf+dWmh7Ocy2ScjJ/vdD0cF3KH2KXcbMFkn/OjzfONx2uk/b/TdJn/bx2
3nS4Tu5LebHLT6rDtaaHa80fri+T8sD1g1L+0F5aX7j+RNonnL9O2xOuy6X9
w/HwSu3fSK4yblYt5WHcLPWfcNxshZSz4MelV4pdxs1qxe6qSP0frjcTXsJx
s5SvcNysrDy0S7oW5eF7Z2YK6yfR4Zr1V+jhepCM6XDN/C86XDN/FNot2vhz
aLdg41focB1+/1Ya10l+y8RutT1/Q7tVxm+Yf6VbFD93/jIdrpPv0IVSzgr/
dwtMh+v34xvcfLGb93bzkn/Of3fPMx2up8e//yLps97Oz6bDdXL/+UnsZjJJ
vXKmw7Wmh2vNH66/lvLAdXspP1xrfeH6A2kfuOb9BB2u+0v7w/VS6S941v6F
a/UHuFb/Cee5lks5C/49oSB2i5H6M1yr/8M18++h3TpbbxParbf1ddK/5fAb
ro9kXUqZ6XCd/Hcz0+Ga9VfocM36DZn3tfqFdos2fxTatfHvSMajbfwqtFtj
37+h3Wp7fw7tVtnzN8y/0vhF55qMXy2Qcla49eIb33zT4bouvv/ME7t5n88v
kn/OPer5QIfrE+KOmSvps25K7Ljfmw7XyX1gjtjNZBK7qQ7Xmh6uNX+4PlnK
E46b5bS+kdYXruulfeC6u7QnXN8g7R+uN1uo/Rtp/8K1+gNcjxb/gevR4m/h
erPlYrcYqT/Lugexu9rW24R262x9XWi33ubTpX/L4Re/hGvW26PDNd/L6HDN
+kl0uGb9FTpcs34jtFu0+d/QbkHmjyqMa8afQ7s1Nn4V2q2279/QbpW9P4f5
V9rzF532g9+wnBV+Pm6e6XC9i3/ehXaZ55or+ee83Tmmw3UyXzZb0mf9c3+W
6XCd8PKN2GWeK9Xheq2kh+uC5A/XD0h54PobKT9ca33hur+0D1z/U9oTrntK
+8P1N9JfcK39G46bLZby1ES/i//A7eXib3D9tPgnXKs/w7P6P1y3F17gOid8
hetIM8pvOfzif3DN/iP05O/qbf+CrHu29c/ocM36SXS4Zv1VaLdo6zdCuwWb
/w3Hl5fb/FFo18azxW61jV+Fdqvs+1fGr+39GR2uef6G5awwftG5tk4cS+zm
/fjAd5J/zr+HzDIdrr9MCibps/75njUdrl+LOfpC7GYySXlSHa5fl/Rw/bjk
D9dfSXng+mUpP1xrfeG6nbQPXMM7Olw38/mhw/WH0l9wrf0L1+oPcD1T/Aeu
zxV/g+sHxT/hWv0ZrtX/4Zr1+aHdOn+/qhO79dFnwiNch/sH88Z1xj/f0eGa
/Tjo4b6P1aYnfK229c/o4bhZIQrtMm62PArtFmS8Ky/z13+L3RqbPwrtVtv4
c2iX8YYFkn+lff+ih+/hv0g5K+z5i05748+hXa6zJP+c/y6YbjpcT40L9Jmk
z/pxtmmmw3XyPTJF7PKT6nA9WtLD9YOSP1x/LuWB6/2k/P4aaX3heoS0D1yP
l/aE65ul/cNxs7z2r4zXmT9E6g9w3UH8B647ir+F42bVYpdxs+Vid1Wk/h+O
m60Su3V+3GC12K2PFgiPvmPLkwvv5znjmv2z4T6Eets/iK77UdDh+hz/voEO
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
M+Na1ptFTaw3M65lvVkUjpvZehvjOrna+hzjWtabGdey3sy4lvVmUThutlDs
rrPezLiW9WZROG72i5RznfVmURPrzYzr5DpL8l9nvZlxLevNjGtZb2Zcy3oz
GV9JdbiW9WbGtaw3M65lvZn5l6w3k2ta3ybWm0VNrDeLmlhvFjWx3sy41v5t
Yr1ZFI6bpf7TxHqzqIn1ZsZ1cl0udtdZbxaF42arxO46682iJtabGdfJpVl5
GO81M4XzF8I4Nen68HA9QRrnGB2uk+xqTYdr4k+GdouO+HWh3YIj/hU6XPN+
Htoljkul2K127N8P7VY59v+G+Vc69g+iwzX7j8Jysn7/Z9PhmvXPod28w5/D
/DnvY5bp4TqgryR91jH/iw7XzB9J/2YYf0aH6/GSHq6fkfzheraUB67HSvnx
O61vOB6etg9cD5D2hOsyuS/A9WTpL7jW/oVr9Qe4/kb8B67PE3+D64fEP+Fa
/Rmu1f/hmvms0G6dr1+d2K3399W12r/l8Es7wjX7QdDhmngO4f7YOkf8dvSE
r9WOeFBhHDripBaj0G7REX8ytEu8txrT4Zr4V6HdGkf8nNButSP+Rmi3yrF/
P8y/0tanocM1+wfDclY49h+hh+v6fxa7ecfzKMyf9YNzTIdr1l+F6bOO9Rvo
cM38r/RvhvkjdLhuLunhepXkD9cPS3ngeraUH661vvjjAGmfcJ4rbU+47iXt
H643W6D9G2n/wrX6A1wvEP+B6yvE3+D6GfFPuFZ/hmv1f7juILzA9U/Cl+7n
kv61/Vzh+SiZKZx/hJ74bbr/OowLWefYH4oO1+wnRYdr4j+HdouO+bvQLnFP
l5sO1+yHDe3WOOJfhXaJo7NE7FY54m+E+bPffaHpcM3+37CcFY79g+hwzf6j
0G7e8T4Z5p9zrH9Gh2vWT4bps471V3Z+leea+SDp3wzzv+H36qRI08P1F5I/
XJ8h5dHvXqlvpPWF6zJpH/y0l7Rn+B6etn+43myh9m+k/QvX6g9wPUb8B67H
iL/B9SzxT7hWf4Zr9X+4Lhde4LqT8AXXZcIjXMNvGM+RcwGamw7XxGdAD8fN
MqbDNePn4XkMqxzx20O7RUf859BuwRE/Fh2uk79bHoV2axzx60K71Y74V6Hd
Kkf8nDD/Skf8DXS4hvewnIybLTAdrtk/GNrNO74Hw/xzjv0L6HDN+ucwPes6
fzYdrpnPlf7NsH4DHa41PVzvKfnD9RwpDzx3k/LDtdYXridL+8A1z1/08L6S
tn+4LuUv7d9I+xeu1R/gukz8B66bi7/B9Q7in3Ct/gzX6v9wzXrv0C7nAqR8
hecCNFN+y8P45FXGdXKx+GbGtcQ3i5qIbybjZhavScbNLL6TjJtZPCgZN7P4
Uca1xDczriW+mXEt8axk3KxK8l8nvplxLfHNjGuJb2ZcS3wzGTdbIPmvE9/M
uJb4Zsa1xB8zriVemYybpTpca3q41vybiG9mXEt8MxnXSevbRHwz41rimxnX
Et9Mxs0qtX/XuTYR38y4lvhmxrXEN5Nxs5ViZ534ZjJuVid214lvZlxLfDPj
WuKbybiZxR01riUeqXEt8UijMK6CxUuUeS6Lr2hcSzxG41riNxrXEo9U4nNb
fEiJF2vxJGU8vEbsrhOP1LiWeKQyz7VEyrlOPFLjWuKRGtcSn9O4lnikMm62
QNKvE4/UuJb4osa1xCM1rjU9XGv+TcQjNa4lHqlxrfVtIh6pcS3xSOV9PG3/
JuKRGh/av+F4eI2UZ514pMa1xCM1riUeqXGt/gzX6v9NxCM1riUeqXEt8UiN
a/gN47VlpnD+LzpcJ7+n6eGa8wfR4Zp4yOhwzflHod2i4/yU0G56HgI6XBO/
PbRb44j/HNpN44eHdqsc9+cw/zR+ODpcE/8qLGeFI34Oehj3olLs5h3zKWH+
OZt/R4dr9g+G6bOO9VHocM16SOnfDOuf0eFa08O15g/XN0p54PoZKT9ca33h
+htpH7heIO0J12Ok/eG6TPoLrrV/Q55WSHmY50r9R+OHh+VM44eLP0fqz3Ct
/o9/Hy28aPzw0G697691+C2HX8odct3K9JDrNH3IdXPTd0vK6Ti/QM9tI95a
aBeu10ahXbheY3rI9eootFvjaP/QLuPhK6PQLlyvkPwrHfEnNS4d43VhOSsc
8a/Q4Zr4OaHdvGM+NMyf+AFLTIdr9v/qPj/WN6LDNeuZpX8z7F8I1zNOijQ9
XGv+cH2TlAeun5Xyw7XWN5y3SdsHrq+Q9gy5TtsfrptLf4Vcr1B/iNQfQq5T
/wnnr1dLOQvRQPHPkOu1YndVpP4fcp3yEnKd8hVyvQ6/5fBL+eA6+a5pbTpc
cx4Qejh/3cJ0uOa8IXS45vzB0G7RcX5ZaLfgOP8IHa7hPbRb47h/hnarHe9L
od0qx/dRmH+lI34sOlxrv8I18evQ4Zr4V6Fd5rmqJf+cI/4GOlyzXjFMn3Xs
/0WHa/YjSP9m2H+EDteaHq6bS/5wreWB61VSfrjW+sL1Q9I+cP2MtGc4/p22
P1zvIP0F19q/cK3+ANfqP/T3QPG3cD/XWrFbjNSf4Vr9P1xvlvISxjdL+YLr
g4VHuIZfygHXycXO05RxszR9E+dpGtfJ+I+dD2hcy3mCMm5WJnbXOU9Txs3s
fEMZN7PzEGXczM5PlHEzO2/RuJbzNI1rOU/TuJbzNI1rOU9Txs2WS/7rnKdp
XMt5msa1nHdpXMt5mjJulupwLedpGteafxPnaRrXWn5f30jrC9dynqZxLedp
GtdynqZxLedpyjhWrfqDnqcp42ap/zRxnqZxLOdpiv2y8tDuOudpGtdynqaM
m6V8heNm6/Drf2/L+bnGtZx/bVwn7WDn7co8l53Pa1zL+dcyHt5C7K5z/rVx
LedfyzxXM7G7zvnXxrWcd2xcy/nIxrWcf21cS32Mazn/2riW86+NazkP2riW
86MlXs4KSb/O+ddpfAW/H1D6V8+/Nq7l/Ot19jOhN3H+tXGt5ff11fOvjWs5
/1rWX6Tt2cT51zIeXqv9q+dfG9fqD3At519b/eX8a+Nazr82rtWfw/Hw1P/h
Ws6/lnmu1mJ3nfOvjWv4JV+4Tvyhvelwnfx3mh6uk/tYG9PhOhkHbm06XFP+
0G7Rcb8K7RbsfR4drvl+D+3WyHhdej4S442h3SrH/EKYP+czrDEdrllvE5az
whH/GT1cl1IbhXbzjvXAYf7EpUvv43BN/Kswfdaxv8/u+57r5PeVYjeT4XmH
Ho6bqZ6NNH+4zkl5wn0JRa1vpPUN16XUyvtoha2/Cud3/7L1G+jh/PYasVsV
af/CtfoDXB8t/gPXR4u/he/FzdWfI/XnkNeWYpd5rtZity66S/gK16Wsw285
/PL3cJ089zuYDtdJfml6uF4Svy+1NT3ha7Xxjg7X3H9Cu0XH+0Zot2Df7+hw
HY7X1RnXjB+Gdtmn2UzsVjnmB8P8WW+W6nDN+rqwnBWO+O3ocE3859Bu3rGe
P8w/Z+MD6HBN/LowfdaxPxc9XEdaK3YzGeJvoIfrSGtFz0aav8VVkPLAtZYf
rrW+cM36Z3S4/knaE647SfvD9e7SX3Ct/RvOI6X+ANfqP3D9ofgbXPP9K/4c
qT/Dtfo/XN4lvIT7PtqK3Xo/vrEOv+XwSzq4Tu7PnUyH6+Q7KE0P1/CODtfN
/P0EHa55fwjtFh3fC6HdgozX1cu4WUuxy/x1C7Fb7ZjvC+1WOeb3w/wrbX0d
OlzzPhaWk3MYMqbDNfHbQ7t5x36cMP+cY/8dehiPc42kzzr216PDNfGvpH8z
xM9Bh+tVkh6uNX+4fkbKA9dafrjW+sL159I+4Xt42p7hvo+0/eF6vPQXXGv/
wrX6A1zvLv4Tzl+n/gbXB4t/wrX6M1yr/8M1z9/Qbp3xG9plP9c6/JbDL7/D
dXLpYnrit4ybpenDcbMOpsP1/f59AD0cN2sndhk3a2t6Ypdxs9amw/U0P54f
2q3xekvT4Zr5+tAu42apDteDgvGNjJ2DdL9ffxuWk3gpzUyH60uD8xdsX6yN
D4T5s58rjVMF1+yXD9NnHfEx0OFa4tdxzcjvFu9K08O15g/XWh641vL7+kZa
X7i+TNoHrrU9bf27tD9cD5b+Si6Mm6X9C9fqD3D9ifgPXH8i/haOm6X+mVwY
x0r9ORw3S/0/HDdLeQnHzVK+wnGzdfj1V+N3Snjtazpcr97r0pkje25uOlx3
+njnJ7Y9YTPT4XrmBkf+tOEdG5sO15+sv9XRLV/qLXY91216id2Cq9h47J/D
xvUwHa63vumeSRc8uJ7YrXEzlmY/2e/NrmK32g2v3792yerOYheuO0r+le6e
VlU9h51m7T8Frj/84N6G/2kj5axwC6PR8z7exPp9Clz3GHZEXa8rzH+8Xc91
l+aSf86t6XXF3G7LzJ+nwHWXLxos92wm6bOucsqeWxx8fXpfhus/4vLo/dp+
TIdrTQ/Xmj9ca3ngWsvv6xtpfeG6l7QPXGt7wvVH0v62Ll76K7nAddq/cK3+
YOutxH/gup/4G1z/Jf6ZXDzXjfwZrtX/4fob4QWuOwtfcL1GePRX/3tfex7z
/8++/uaPp163uelci9POeu200ZuZDtfJdOXGpsN1PN+xsLfpti7l17K2d2/d
S+wW3fBfhja/5vUeYrfgPty6c/uJF69nOlzPKF0u7Cp2a5L1pft3FrvVrq7U
Dt06iN0qd/RRWz//n/K2kn+lO+iZW7aa9nkr04Pn9XMtpJwVyfzaZ2Wm2zld
n76948W7NRO7eTeq0OrUx79aG4X559yhd3T8x1sT1pgenAOwQZ2kzybvIStr
TYfrCT1Wz1h6UK2Me2Yye5w75F+XdEl1uH5P0sO15g/XT0l54PowKb+vb6T1
hWttH7i+S9ozeF43an+4PlT6C661f+Fa/SGYv27kP8E6kUb+Btcfi3/Ctfqz
rUsR/4dr5QWutxe+4HqV8AjX8BvGAW+4/7174opJvfuYzt/F59yN26Q8XBde
5/o1VGvMtRuaDtcN3lN154O9TIfr+P2hqofYLbrYrxruh6Hdgo8/1tV0uH7l
tiMPeqZLZ7Fb42b/mm//8KvtxW51Ml82uo3YrXKzHyzduVtK/pXJ/O/o5qbD
9UOvlgw3k3JWuONPfttVfrzWxh3kfMIotJt3i1v07zpgeG0U5p+Oh6PD9SEn
jtjjhz8Kkj7rCgeX/mOF6cH8df8VYjeTGVc7/KLP6tP1gnC9vqSHa80frg+X
8uh4uNQ30vrquFk4XlMRnSTtCdePSPvD9frSX3Ct/QvX6g9w/b34D1y/If4G
11eIf8K1+jNcq//D9VDhBa63Fb7g+nzhEa7hFw7huqG3Prto8qamw3U8zH/C
RqaT3zVPv7jFpCEbmM5180l1dy2/vqfpcB1zWlxP7Bbdue8uumLixK5i159/
Pbyz6XC9z+e/TLxjcnuxW+P6/73HAQfe1kbsVif5jWkpdqvc7l/vffi3fZpL
/pVJvNOl6XgBXLda9fy577arl/0tFW7HbV9db9antabD9bzS+EazdL0OXN88
zN248QcrojD/XDI+MD9dZw/X7zQ0T4/rl0n6rBs36uyRZ96Y7reB67PiYlWJ
3Uzm57m3XjF0QqrD9bmSHq41f7ieIOWBay0/XGt9g3UpjdoHrneW9oTrDtL+
cP2W9Bdca/8G+3Ua+YONm4n/wHW5+FswHt7IP+Fa/Rmu1f/huq/wAtfXCV9w
/T/hEa7hF97gevRDezU7rOE9H93eI/7dYGDf3qYH95VD1zc9qMcL3U3n+v6Y
a7/ot1c3sVt08fdL1y5it+Be+qFEagfT4ToJ19FG7KbjZqHdanfyikk/3d2x
uditcosfeafDZW9kJP9KV1+4Kv/0LmtsHL+JdSnGdczFiHS9LFxfNbF04073
vcD1Ngtuf/br6dWSf871P7bk0em+VriOx2/vWiLp0/Xh6HBdW3pPG7VI7GYy
O++/0eL5A1Idruskva4PR4frw6Q8cL27lB+utb5wfbW0D1z/S9oTrp+T9rd9
HyvD/oJr7V+4Vn+A68/Ef+D6M/E3uB4j/gnX6s/4jfp/MD/fiJdgHq8RX3D9
rPAI1/ALV3Ad/ztyQ9PhuntD62fP7GU6XO9Suq/e08N0uI7v82u6mY79Yc2v
ad93fBfTg2t5R7Hb8B7+xn9/Pu8BW9dqXA/Z8qqyJ4e1Ers17r54/KS52K12
zS65tcVn3+j4ux8328zWDRrXO/6v4cNp93Q9HFyvKr3Gzrb1jcb1xqUP179t
XaVx/crow8vXu1X3mTMevkTyz7kJDa9RP01P48jA9c1bTRsx9viFkj7r+uxb
feZXz/xhOlwvu+/oK/s+tkDs+p/yVIfrFZIerjV/uL5dygPX70n5fX0jrS9c
vybtA9ebSnvCdb20v8XVkP7y/Rtp/8K1+gNc3y/+A9fDxN/g+krxT39N7DXy
Z7hW/4fr8cKLrYMQvuC6l/BIz8b/NvALP16fUkr+ybQNTIfru5Y3vMH9r6fp
4Xt9d9PhOn5u3t3VdLhuN+ipY597vZPYbah3mw2f/eekdmK34AoLTn/hh/6t
TYfreH14jxZit8Yd6dcLhXar3fZznqzY+Is1UWi3yp0bDwSk61bh+vy2DS98
360wHa5f9PuJwnJWJP+f+9t0uF60uDSgvFjs5l2Hhxs+FP+zUPLPuVOPKQ30
LDAdruNwidF8SZ/1cUfT+K1wffz673+b+ec8sZvJDL5t/heP/+9X0+Fa08O1
5h/Eqy6fL+lz0ZlSfl/fSOsL10ulfeD6aWlPuH5Z2h+uL5H+gmvtX7hWf9D1
ZuhwfZf4G1zXin/CtfozXKv/w/WnwgtclwlfcH238AjX8AsncD20dD/ZuZfp
yd/VJ/68fw/T4XrpSfsN/vOFbqbD9R3ZY6a+MqSL6cH89WEdxG7R3bbToWPa
jWgjdr3/9mtpOtf5pebcqUzs1riFw3Zc22fjtVFotzqJI3pzrawvr3Kztzt7
g/nXpPvE4DqOJ1y7zHS4ntTp6d1eXP63xEWtcNeNe++Mm3OLJO7D7+7wkp88
WCF2865s4T3bLOn4u+Sfc2tiftN4ynD9Vvz+9oukz7pHS+9je6Zx1eH6ong8
Z67YzWT2/bFq+cG5H0yHa00P149J/nD9rpQHruN1O+V5rW+k9YXro6R94PpG
aU+4nibtH+z7aNRfcK39C9fqD3D9l/gPXP8h/hbsM2vkn3Ct/hzMXzfyf7ge
IbzAdZXwBddjhEe4hl94gOvScMjqGT1Nh+tLg+/9GuO6rO3dm555cVfT4brZ
5Jbduv+jk+m6LiW0W3QzShOiz7QSu4VkHP6c5qZTjyv6Prb2gfsyYrfGtY4n
ztN1pXAdz8tMWin7Q6rcmfGNKY3LkOTv93M9mcZXguuHS59r/10cheWscH02
XX7hcR+lcVHh+n0fvyu0m3dDYr5+lfztfHvT7XyuPvddddlT30v6rBu3ZenD
dbbpdt5HqcO2+Fb3w2Tix/Wjs0wP4oc3Sg/Xb0n+dt6IlCfcf53T+kZaX7ie
JO0D11tIe1r8P2l/uL5R+guutX/hWv0BrtuK/8D11eJvcH2++Cdcqz/rupTQ
7uqoTHiB61bCV7AupRGPcA2/+D1c7/fmv3697KEepsP1IYta9O/6QzfTg/H7
07uYntjx8c3+2cF0uJ528mb7Vl/RRuwW3balhii2ELsF1/P8w2ru+93iwBjX
c0qtc3y6TpT6xfV9IN3HxfWCXy+7+76zLL6NcR3fJz9N4yXBdbz8YZjF2zGu
k3Fyi+cTjpudk8Yrh+vS9M4+g+aJ3bwbVRre6JiT/HPuiAue/PfTm88xHa4T
O7MkfdYl+5dnmA7XFzQ029FXfil2M5lrdyjdgb4wHa4vlPRwPUryD/dfz5L0
ueh4KT9ca33huo20TzBu1qg94fodaX+4niL9Bdfav3Ct/gDX6j9w/Yv4G1z3
Fv+Ea/VnuFb/h+s+wkuwLr4RX3B9mPAI1/CLf8N1/O8t3U2H6/g2/2NX0+H6
y3gBVifT4frT+3f59w5vtzMdrvs9/5/xv/3VynS4ji8PNBe7BdduaGnAIl33
CdfHlb4H69N9WXD9Z+6N2uEXWRw547rkPh9dnsY/kmsU5l/pPvtl4h03dLH4
eMb1PaXhpbUWf8+4ntP2vM0v/CA9RwSuLz41foMQu37c7JY5kn/OnZuJB3RM
N65j/UtJn3V/nr9d4bH/+8R0O5f7+4UN/zNF7PKT6jbPJenhepHkD9cXSnng
+nIpv69vpPWF68ulfeB6rrQnXD8s7Q/XM6S/pF/VHyL1B7heJP4D18PF3+C6
o/hncvXjZo38Ga7V/+H6C+EFrmcIX3D9h/DoOzb5vYFf/JgO38avl0OH68El
YOq6mB6sTxne0XS4jr9foramw/UtpQWpj7cUu0V30neTf+9+SpnYLbhn9tl+
zpOt+N6pNK5vK41jtKyNQrs+rsLLK2S/ZbXrct2A1wfPTeMSml/E8/hLJP9K
d/CY0h1loelwHc8Lj5lvOlwnHP+fnMf5u2uX3+GB56/5Qezm3Z+l77g1syT/
nBtcfeZXpxySnusJ1xPiF6Bpkj7r9o7f6yabDtd/xu9j74ndTOa1eF3KBNPh
+i9JD9eDJX+4nizlgesDpfxwrfWF607SPnA9QNoTrv8l7Q/XR0p/wbP2L1yr
PwRxFRr5D1yPFH+D69Hin3Ct/gzX6v9wnYxLpLwE81yN+ILrcuERruEXf4Xr
nvGAWjfT4ToeJizvYjpc13b+6/23mncwHa5vv6GhRVu2KZd5X4urENotunhc
9KRmYpdx5TW2nyqpx3I37aL+t7x/WhrHBK7Hu8pn99k+jUcWvC+PSOMFw/UR
8YLRRZJ/pdsofi/6w3SuLTd89p/9ZqTndcF119M/+W67P9Lz+eD6Nn9+TWi3
get4XvUryT/nrvbn1qHDdafSsuKHJkv6rGtZWqex6F3TLa5CfH1T7GYyW8bz
16+ZDtejJD1ct5H84XojKQ9c3yLlN66lvnB9p7QPXPeQ9rR1KdL+cL259Bdc
a/8G61Ia+QNcvyP+A9dfir/B9UDxT7hWf4Zr9X8bNxNe4LpO+ILrD4VHuIZf
/BKur2nfd5ubuqc6XCd/1dl0uH7jzR9PvXpeO9PhevyOF7/UrK6V6QHXdzcX
u0W3QWm7wK0ZsVtw95W+795K4xfA9Q9Vyw8+sdXKKLRb40rTfUOKy6LQbrXf
J740Cu1WufqzVy44/bc/Jf9KP96Vnr9F+/3S8Hgpvv1rFJazwg2KPwDmmg7X
00vZHfqt2M27/i9OGFic9qXkn/Pnf00xHa4fjTfAvCfps67D07s15PSG6XB9
T/xd/KLYZZ7rWdPh+gFJD9fdJX+4flHKA9etYitTtb6R1heuZ0r7wPV+0p5w
XSHtH57P9bv2b6T9C9fqD3C9vfgPXP8s/gbXo8Q/4Vr9OeC6kf/D9bvCC1yP
E77guqXwCNfwi//B9VENd+G9bu1qevJ39X7/QqdyWffs4123NR2uYx43bWU6
XI8ce/z0XT8tE7tF90W/vR6a8dzaKLRbcNPigYBaOU96ecJL5YootMu44LIo
tFvtnim55x5LotBulSstO1pz9kLJv+F9c4uDr7/9kvlyPv1f/nn6i5Szwi0v
LVO66nvTuQ79svWgp479RuzmXcPXVJ9Nl38m+efci/EL60emw3VtzPvbkj7r
yzPadLi+oTReNPpRsZvJ3BQPlDxgOlzfIenh+ibJH64Tft+R9LnoHSk/XGt9
4fowaR+4Lkp7wvUt0v62T1P6C661f+Fa/QGuy8R/4Pob8Te4/lL8E67Vn+Fa
/R+uHxReNK5CaLc+GiA8wjX84mdwHf/bJtXhOv58P66j6XB9YWlYZYu2pid8
rXYzSwM3F7Q0Ha6Pqut1xdzNy8SuHze7JY07ANfJ+EYaFwyuW576+KE9OqyI
Qrs17tHS/Mveafx9uB67fekF1M4/DcfNyisk/0r3r3h8+DfT4frC0jjPtz9J
OStcTEvnOaYbB4d/++Dw+q/ELtdPJf+c26y0TvjnSabD9coHbmr4Mhsn6bPu
vs6lD8XnTIfre+P5oP+KXX5uMR2un5b0cP205A/XnR4My2PndUv5/TXS+sL1
YGkfuJ4h7QnXV0v7w/XF0l++fyPtX7hWf4Drx8V/4Lqd+Btc7yH+mVz9uFkj
f4Zr9X+4/lZ4geuLhS+4dsKj79jk9wZ+8SevT4nX4YztYjpcx+sSx3YwXeOb
ocN1/N+/tDDd1sOW7jMvNRO7RffQjJuHuWf4TskZ1w2d2+BYabxOuI7Hi05J
427DNXH7Q7vV7uqyJ9ts+OuiKLRb5f67pvSi9ofkX+kmnnFzbtCk9FxquH7E
+29Yzork/aTzd6bD9UaldZinzBC7eRcvyxo/TfLPuf97uuvLH01933S4Loun
PV+X9FlfnidMt3N84na+VezyfX2+6RY/XNLbOT6SP1yvL+WB60opP1xrfeF6
c2kfuH5I2jNcH562P1z/T/oLrrV/4Vr9Aa5fFv+xfR/ib7YuRfwTrtWf4Vr9
P4hn1ogXuB4pfMF1UXiEa/jFb+D6pw1vOH3XU1IdrvOlhRp9OpSH58rUuXif
S4c2psN1aXXRx5e2MD1Y575/M7FbdCNL6+Jq0nhecB0vw++RxtuF62saniLH
/5yehwHXu5b2HeyWnmsF10lcuEVRaLfKxdv+piyQ/BnPTs+Vh+sNSwsdPv5R
ylnhLh9a2mE823S43j+OkzNd7OZdsp5qquSfc/+O3zPfM53rUaXx1Y1flfRZ
d5t/f0aH67vi67ViN5O5Jn4PP8J0uH5R0sP1A5I/XJ8r5YHrEVJ+uNb6wvXB
0j5wfbW0J1xvKe0P1wOlv+Ba+xeu1R/gur/4D1zfIP4G16vFP+Fa/dm4Fv+H
6/uEF7jeT/iyeS7hEa7hF/+A6zNKYPRLdbiO//yT9qbD9bDLV3X+6/3Wpu+W
lNN9tPMT2/basoXpcE18sNBuMZlHuyGNxwfXb/q47uhw3evIhhrcmp5nk9it
cYOvPeGV3b/+OwrtVifnCzydni8L1/G6l6MXSP6VbpdSdu/OMx2uL79sw475
HX6UclYk8+ZLvjUdrh/1fIR28+7MhsfLtSdMlfxzLrmRTTSdfhsZf6C+Iumz
7sFSvIJDHzEdrt+N87lK7PK83tZ0uP5a0sP1c5I/XD8t5YHrmVJ+uNb6wvXT
0j5wvVjaE66vl/aH672lv+Ba+xeu1R/gel/xH7jeSPwNrt8R/4Rr9We4Vv+H
6ynCC1wfLHzB9UDhEa7hFz+A64v73/J+ebtUh+vy0uvSf9ubHsQ3u7O16XAd
jycXm5sO18tK05s/ZsRu0Z21wfwT1h+YxtOE60tK31OXrTQdruN4KYem51HB
dXy54u8otFvt4n06R6TnQ8P1Lg3N+Uj3BZJ/pXso9ud5psP1CSV/+GWulLPC
33++NR2uH15b+jDOit28uzOe4Jwq+efcexeUNjBMNN3ikcb5j5X02WT88KtR
UTi/NcktiwOvXCl2M5nWyT7Nwehw3f6wML3FS5H84fpDKY/FD5fyw7XWF66f
kPaB67elPeH6DGl/izMs/QXX2r9wrf4QxEtp5D/BuFkjf4Prq8Q/4Vr9Ga7V
/+H6Q+EFrovCF1wPER7hGn4z4c+U5JLqcF0aVfn5GourloHrw+L1ABa3LQPX
N5Teu/6yeFYZ288Vzz9qHD0/brZZGg8XrpP5o5Wmw3W8Xnrv9Dw5uD4kHl/9
23S4/l9pWHRger47XCfXBZJ/pRtV+m7abp7pcJ18/86Vcla4b0s3oCe+NR2u
j4/fV7Nil3GOqZJ/zj9/J5oO1+vHD56xkj7r6mN+R5lOP9/34haT6u66Uuyu
+wPXYyU9XHc4LMwfrreT8sD1c1J+X99I6wvXp0j7wPX30p42zyXtD9fPSn8l
P6wzW6D+EKk/wPXh4j9w/YT4G1zvL/6Z/Phxs0b+bPu5xP/h+mbhBa6PEL7g
uovw6H/8710sHqXX7XmNDtf7+vuDvbd5rlf6+wk6XH/g7z/ocF3j71eh3aI7
x9/fQrvp8xpdn9eh3fR5HdpNn9eh3fR5HeafPq/R9XkdljN9XqPr8zq0m3cj
/PMrzD99XqPD9Vj/fAzTp89rm4f2XPO8lv7NHOif1+hcOxwWptfnNbo+r8P0
uegzKb+vb6T11ec1uj6vbbzec32GtL8+r6V/I+1ffV6H5Umf1+j6vA7LmT6v
xZ8j9We4Vv/X53Voty6qFb7geqjwCNchv3a/tO9rdP2+Rtfva3T9vkbX7+vQ
bvp9HdpNv6/R9fs6tJt+X4d20+/r0G76fR3mn35fo+v3dVjO9PsaXb+vQ7vp
93WYf85N8d+n6Pp9HabP+vvPI6Zb3EL/vSz967ne1nTzI0mv39f8bvHDpTz6
fS31jbS++n2NDteV0p76fY2u39fSv5H2r35fh+VJv6/R9fs6LGchmiD+Cdfq
z/p9HdpNv69Du+n3dWg3/b6W/rXv62CffKPxcHS4nu/H39B1PBwdrhkPR4fr
OL76/s3EbtH9x48fhnbT8XB0uGY8PLSbjoeHdtPx8NBulXvNj5eG+afj4bYv
0XO9kR+PDctZ4a7w47focD3Ej/eGdvPuJj8+HOafS/Z9X/ee6XB9jB9/DtNn
HetJ0OH6/vh6rdjNZB724+HocP2qpMdfHpL8uZ4n5YHru6T8cK31hetDpH3g
+t/SnnC9lbQ/XO8h/QXX2r86Hh6WJx0PR4frG8XfdDxc/DlSf4Zr9X+4vl94
gev9hS+4rhAe4Rp+6Q+4Zv4LHa5r/HwZus5foyd8pfPX6Dp/HdpN569Du+n8
NTpc7+PnE0O76fx1aLfaXePnK0O7Ve4eP78Z5l/p3vPzoehw/aj/PSxnRXK+
WOfUv+F6Ez8/G9rNu2P9fG6Yf87N8/O/ts7Dc93CzxeH6RlnfcJ0G7fz89HS
v/55fb7pcB1Jerh+VfLHj3pLebgulfLDtdYXrvtK+8D1KGlPuFZ7On8t/Rtp
/8K1+gNcjxH/get9xd90/lr8OVJ/1vnr0G46fx3aTeevQ7vp/LX0r81f0+5w
Hf+brjczrmW9WdTEejPjWtabGdey3sa4ji/p+pw0Pk24nse4lvVmxrWsNzOu
ZX2RcZ20RoXkv856M+Na1psZ17LeLGpivZmsS/pU8l9nvZlxLevNjGtZb2Zc
y3ozGdex9Wbp96ukt/dfyb+J9WbpfUjKH17T+jax3ixqYr1Z1MR6s6iJ9WbG
tfZvE+vNoibWm0VNrDeLmlhvZlwnzVwvdtdZbxY1sd4samK9WdTEejPjOv63
gV/a1+tTjvHrS9HhmvXh6HruHjpc3+/Xu6Lr+vDQbtF96dfThnYL7hO//hYd
rpPuXBGFdtP14aHdavesXw8c2q1yBb9+OMy/0u3p1xujw/W//frksJz+HJ+r
vjcdrof59c+h3bzb1a+XDvPPudF+fTU6XNf59eFh+qw/p3u06XDN+7n0b+ZO
vz4cHa7/K+nh+jbJH67bxLm9I+lz0QQpP36n9eV6uLQPXK+S9oTrW6X94TqS
/oJr7V+4Vn/Q9eHBvpQGrmeJv8H1dPFPuFZ/1vXhod3Vyfq6RrxYHCThy85J
Ex7hGn5pR7hmPwg6XMf1Le9sOly/6feboCd8rXZv+/0p6LqfK7Sb7ucK7RaS
99u30vNT4Zr9XKHddD9XaLfan1+5NArtpvu5wvwr/TnyqZ/pfq6wnBXJuN/w
uaYH+0gO/Vbs5t3ufn9TmH8uiU+4dorpcP2E3z8Vps+6bn6/FTpcP+T3Z0n/
Zg72+7nQ4foxSQ/XvSV/uH5ZygPXCe9Ttb6R1hd//Ebah+v+0p5w/ae0P1x/
LP0F19q/cK3+oPu50C1eivgbXD8q/gnX6s+6nyu0uzqaILzA9XjhS/dzSf/a
fi7aC67Zv4me+G26/xodrtkfig7Xd/r9pBaXynN9k99/Gtotur/9ftXQLnFG
11i/wvVnfj9saLfGsX82tOvjx4yoikK7Ve4Yvz83zL/Sx3H6w3S4buP3/4bl
rHDd/X5hdLi+w+8vDu3m3VK/HznMP+f3p39qOlz38vudw/RZ18nvj7ZzbjzX
ybrQN8VuJjPQ778Ov1cnRWMkPVx3k/zheispD1zfKeWHa60vXI+U9sFPe0t7
cu0o7Q/XW0p/wbX2L1yrP8D1BPEfuJ4u/gbXe4l/wrX6M1yr/8P1SOEFruuF
r+BcgEY8wjX80i5wzfli6HAd+fgM6HCdnHfQ0XS4Tqy0NR2ub/XxIkK7RTfc
x5cI7Rbc8z4eBTpc3+HjV4R2axzxLkK71a6bj48R2q1ys308jTD/Sne4j7+B
DtdxscbMj8JyVjjie6DDNfFAQrt5t9jHDwnzz7khPt4IOlx/6OOThOmz7gAf
z8TOn/Nc1/j4J9K/mfd8vBR0uF4u6eH6YMkfrqdJeeD6cCk/XGt94bqbtA9c
7y3tif9eKO3P9RjpL7jW/oVr9Qe4Hin+A9d3i7/B9VjxT7hWf4Zr9X+4bi68
wPVs4Quu9xUe4To8H7DKuI7/TeObpfNcYTylqIn4Zsa1xDczriW+UzhulsaD
Mq4lvplxLfHNjGuJb5bGpQvjWYXjZo3iYMG1xDczriW+mXEt8c2Ma4lvFo6b
pfG+jGuJb5buLwnjiRnXEt8sXd8axiuTcbNUh2uJb2ZcS3wz41rimxnXEt8s
HE9qVN8m4psZ1xLfzLiW+GbGk8Q3a/LaRHwz41rimxnXEt/MuJb4ZuG4WSN/
biK+mXEt8c2Ma4lvZlxLfLNw3OwWzg1h/G+deKTGtcQjjZqIR2pcSzxS41ri
MRrXEr/RuJZ4pMa1xCM1riWepHEt8SeNa4lXmX5fh/EtjWuJR2pcSzxS41ri
kRrXEp/TuJZ4pLJvbJakXyceqXEt8UiNa4lHalxLPFLjWuKRGtcSj9S4lnik
xrXWt4l4pMa1xCM1riUeqXEt8UiNP+1fruoPTcQjTb+vxd+aiEdqXKs/w7X6
fxPxSI1riUdqXEs8UuMafqkPXFf6+MPocE28YnS4buHjG6PDNfHD0eG63MdP
Du0W3Vc+3nJot+B5aW46XF/p4zmHdmtcGx//ObSbxg8P7Va5s3x86TD/NH64
zX94rh/x8avDclY44l2jwzXxsUO7eTfMx9MO888l5Ww0nwrXj/l43WH6rHvH
x/dGh+uxPh649K8fD59lOlxrerjW/O2cXCkPXL8g5YdrrS9cfyjtA9dbSnva
d7a0P1zfLP0F19q/cKD+wLW9+I/GDw/LmcYPF3+O1J/hWv0frlsKLxo/PLRb
H10pPMI1/FJuuD7QnxeADtcv+/MF0OGa8wjQE75WO84vQA+4PqyD2C26O/z5
CKFdf/5Jv5amw/UCf/5CaLcm+W7deG0U2q12LeL3k9ootFvlvvfnQYT5VzrO
j0CH64/9eRNhOSvcLf58CnS4PtqfZxHazbtW/vyLMP+cn3dI503h+gN/vkaY
Puue9+dxoMP1Vf78DunfzEH+vA90uNb0tj5U8rd4pFIeuG4p5YdrrS9cHyft
A9e3S3vC9efS/nB9i/QXXGv/wrX6A3xUiv9w/VP8Da6fFf+Ea/XngOtG/m/j
ZsILXFcLX3A9VniEa/ilfHC9xp/vgw7XnAeEbud9xH/W3XS4/sSfN4QO1x38
+USh3aJ72p9nFNotuFX+/CN0uB7hz0sK7da4Y/z5SqHdarerP48ptFvlzvfn
N4X5V7qL/XlP6HA92p8PFZazwsVxPHJ/mw7X1f78qdBu3nXx51WF+efc2f58
K3S4TniZL+mz7hV/fhY6XJ/pz9uS/vXzXL+aDteaHq5fk/yD+GaNygPX/5Ly
w7XWF65XSPvA9UvSnnD9qrQ/XF8h/QXX2r/2nST+ANfqP3DzH/E3rmvEP+Fa
/Rmu1f/h+jPhBa5bCF9wfY/wCNfwSzngOv43PU/TuJbzNKMmztM0ruU8TeNa
zhMMx83S8weNazlP07iW8zSNazlP07iW8xPDcbP0vEXjWs7TNK7lPE3jWs7T
NK7lPM1w3Cw9X9K4lvM0jWs5T9O4lvMu0/1c4fmY4bhZep6mcS3naRrXmn8T
52ka13KeZjhu1qi+cC3naRrXcp6mcS3naabzIdJfvn8j7V+4Vn+AazlP07iW
8zSNazlPM7TfyJ/hWv0fruU8TeNaztM0ruU8zXDcrIFf7Hldz782ruX8a+Na
zr82ruPf0/N8jWs5/9e4lvOCjWs5/9q4lvOvjWs5/9q4lvOOjWs5H9m4lvOv
jWupTzhulp7XbFzL+dfGtZwHncbZCs+PNq7l/GvjWs6nNq7l/GvjWs6/Nq7l
/GvjWvNv4vxr41rOvzautb5wLedfh+NmjdqzifOvjWs5/9q41v6Fa/UHuJbz
r41rOf/auJbzr41r9Weu6v9wLedfG9dy/rVxLedfG9fwS75wfZc/7x4druPX
kxM2Mh2ur23IftKQDUyH676ldcLX9zQdrsPxt9XG9XnvLrpi4sSuYtefFzq8
s+lwHZX2uUxuL3ZrXKmVD7ytjdj161LGtBS7VW7g13sf/m2f5pJ/pRsXj7tm
TIfrdqV1Gu3qo7CcFcl7y6e1psP176UBuGbpfRmubxvmbtz4gxVRmH/Oxeel
zk/HU+B6YulAteuXSfoGrkv3+RvTcVW4ju8zFVViN5P5de6tVwydkOpwfb6k
N64lf7h+X8oD159J+eFa6wvXC6R9bB2WtCdcd5b2h+u3pb/gWvs3GFdu5A82
Lij+A9f7ib/B9WzxT3uuij/Dn/o/162EF7i+QfiC68nCI1zDL38P18k8fh/T
4Tq+f47bxHS43rZz+4ljrt3Q9ISv1W5o6bPmwV6mw3U8jlfVQ+wW3ful2/aD
64ndQnIfuLSr6XD9emn/XZfOYrfG/fBrvv3Dr7YXu9Vu/XiZcxuxW+XmPDi8
fv/alpJ/pesZp29uOlyPigPhNZNyVriTTn7bVX68Nn1/8lzP8r+HdvPu79IE
2PDaKMw/55Lx1fQ9DK4PP3HEHj/8UZD0Wbfq4NJ/rDAdruP69l8hdjOZt+N1
Kem4DFz3lvRwrfnD9ZFSHri+QMoP11pfuJ4t7QPXp0h7wvVj0v5wvYH0F1xr
/8K1+gNczxX/getx4m/2Hi7+Cdfqz3Ct/g+Xw4QXrtsLX3B9ofAI1/BLOrh+
/vU3fzz1us1Nh+tVpfe00ZuZDtfbN7y1rKja2HS4juNMLuxtOly3+LWs7d1b
9xK7RXfqL0ObX/N6D7FbcB81fDZNvHg90+E6rs+FXcVuTbLua//OYrfard3r
0pkju3UQu1XuhNIwT3lbyb/SHVJafvh5K9PhOo7f/lwLKWeFi8dVPiszHa53
j9fnNxO7efdkKV7BV2ujMP+cO6oUtmTCGtPhOh533aBO0mddPK+6stZ0uJ5U
8quDUh2uB5UOeu+S6nA9WdLDteYP1y9IeeD6aCk/XGt94XqAtA9ca3vC9Shp
f7g+XPoLrrV/4Vr9IZjHa+Q/wbh7I3+Dayf+Cdfqz3Ct/g/Xhwgv8Lqj8MV1
tfAI1/DL73CdXPqanvhtvSstfxvZM00P150+3vmJbU/YzHS4jqcBG97z0eH6
k/VLC4t7i10/btaml+lwHW8vGNfDdLjeOlgvl55LXBoO3O/NrqbDdemuvWR1
Z7HLerOOpsP1PfH4STvT4Tpe/tOzjZSzwi2MRs/7eJNWpsN1j2FH1PW6ooXY
9eNmXZpL/jm3pldpw0Az0+G6NB16b89mkj7rKkvDyddb/1kcuz/i8qR6Jvwx
Ha41PVxr/nCt5YFrLb+vb6T1hete0j5wre0J1x9J+9v6Wemv5MJ4XNq/cK3+
YOsyxH/gup/4G1z/Jf6ZXPw4ViN/hmv1f7j+RniB687CFxyvER7Dq/E7Jbwe
bDpct33mven/d+IBpsP1rCmn7PzYrfuaDtfndnv3nJtf38d0uJ7x8Y97fn/F
QLGbcF22/W5it+COPmCLs984bifT4frJA7qcucNz/cRujTs4v3LxlsW0XnDd
YdkfM8bv0kfseq6HbST5V7pdHztlm38MX990W0f682n3b3W+9e8UuN728zsP
OOAAi/c4Ba63L/Y94NmHLb6ct5tw3eW91pJ/zt19/8b33fup+fkUi0f+5bI/
d3+6TNJn3YZ1AzuVb2EcTYHrf7d7fEjhQL1f24/pcK3p4Vrzt3gwUh641vL7
+kZaX7jeXdoHrrU94fpBaX+43lP6K7l4rhv1L1yrP8D14eI/Nj8v/gbXJ4t/
JpeE68b+DNfq//bdLLzY+nDhC647CY/+6n8/2J7H/H+f/S96bu1xQ03n2j/a
+qizBuxnOlyftuuxO9/z4iDT4Xrf9U7/pKbLHqbDddnDX9btcPtuYrfoosFn
vTDsiZ3EbsFVTy3ePe7+fqbDdZeG76MPX+srdmvifY7N39tM7Fa7Y+fuMGRt
+w3FbpU7ZXnH3U5c0kPyr3Qtvuw28/s5XU2H6/ndN86u2KKjlLPCxdtqa1ub
bud0XTz6kIeXNhe7ebfrP+a+MvWrjOSfcyM3/6j9Nj+n4xrB+QBnp/MTcF0K
N/hNu5Wmw/XAk/b46KA3V0Sh3Uzmi3/UXf/RXqkO13tLerjW/OF6gJQHrv8r
5ff1jbS+cL2btA9cvyHtafFIpf3huo30F1xr/8K1+gNcl/ZftGjkP3C9vvgb
XNeKf8K1+jNcq//DtfIC1+cKX3A9QHiEa/iFT7jufPAOM1cO2990/u7Ehtf8
6XtEpnN97av/bjhr9z1Nh+v7z87uPv3w/uXBOvIGrheUljEetbPYLbou1z64
7fSdthW7heS8vIb7JzpczzpvjxFTPt1M7Na4vTetvmjZ9N5it9p98G3m17vP
7iF2q9ycf866Y5NeXSX/Stdq0FPHvnVSe9Ph+t42J2/1Yk1LKWeFu37pDtdV
T2hmupxPGIV28263r3d9+Lf3VkZh/ul4ODpcf16VL5/Ru1rSZ92PJ016+NTL
lpreeP76rP0rxW4D17P3Of7zexabDte1kh6uNX+4niHl0fFwqW+k9dVxM3S4
vkna076vpf3hurP0F1xr/8K1+gNc7yf+A9ffi7/B9Qvin3Ct/gzX6v9w/ZDw
AtdvCF9wfabwCNfwC4dw/fAGh288cXK56XA9/ogLnnzsr71MJ7/fd35+5zcf
2t10rlP23Gfh3oN3MR2uX2k3dMtVN2wndotunx3+N3CXn7YUuwVX2p270zF9
TIfrikOu2evjCzYUuzWubYenVn06pofYrY7/7tCuXcVulTt7xvyHH8+3k/wb
vq9LYX62bmk6XI8pbNH3nFczUs4K989Of3zQ9YhaGzeE65dHH16+2+/Lw/2r
DVxPPebQNtM/Sve/wXW2tF3ggMWmw/V6J+x674HZCkmfdYPeeHeXPtPSODVw
3bu07LpsvtjNZPp8c9oGN1z6m+lwvZmkh2vNH643kPLA9QwpP1xrfRuvS2nc
PnB9hrQnXL8p7Q/Xo6S/4Fr7t/H+nsb+ANftxH/geqn4G1wfK/4J1+rPcK3+
D9fThBe4Xih8wfV7wiNcwy+8wfWSJwfdt3TPQabD9XNz2tddfsJA0+E6jvP2
yK6mNy7vwJt2MJ3ra5/0fqLj0VuL3aJb88CP5y86Y3OxW3BPvbrvzYP/2Mh0
uP7+s4v6j3yxp9hNx81Cu9Xuyqn7XR/d1V7sVrnZS7s/1fe0lpJ/pWuzc+2Q
e+9Lx/uaWJdiXJfmi0d8nu5vges9v+72zXOPLY1Cu3m3/d4db1/75cIozD/n
Lt5u/TGfvzffdLj+ov6d6y/v86ukT9eHo8P1Rk8d/sQHZ/8gdjOZ6J6d5993
7femw/Wmkl7Xh6PD9bdSHtunKeWHa60vXA+S9oHrC6Q94Xq0tD9cd5T+gmvt
X7hWf7B9JOI/cP2z+Js9r8U/4Vr9Gb9R/4frvYQXuH5V+ILrl4VHuIZfuILr
0j/T3trTdLge2uP2+2vP6m86XB89alzHFX12Nh2uN/5g6M8vXdTPdOx3OGy3
Eweu3ELsJtdb9tlU7BbcSV1nj5lwvK2XM66Xzjm735Q/uondGte/++rlN+7Z
UexWu4oe0w7a5NZWYjcZN+uybzPJv9Jldiq7ofdxtTYPB9dXvvlDZY9m6X4V
uJ6Q+evyidFS0+F66fCDt/jiyzTeE1zHl76/Sf4597/RHzWf8GcapxWuXztp
yyf3+PM7SZ91G535+vJXPvnGdLiu6njVkgO2mCF2/c8Ladx2uF4l6eF6E8kf
rt+V8sD1NCm/r2+k9YXrGmkfuP5Q2hOub5D2h+t20l++fyPtX7hWf4DrAeI/
cL1c/A2uTxX/9NfYbmN/hmv1f7jeXHiB62OFL7g+VHj0PRv/XuIXfrw+Zdtr
tjiuZvIA0+H6rQsP+t8uy3cxHa4Hx/vOtjcdrud93OnplZtsZTpcb3nJ7tM6
7tdH7BbdddNbP3DBt73FbsHle//2xyzX3XS47vHInLbXrOwsdmvcrn69UGi3
2u269sI5f75dJnar3OObTD3kmpPTdTBwffHweYu+PmWF6XA9ye8nCstZ4dYr
jauMX2g6XB8x7sLC5Wf/FoV2865yx4cufucfOck/5/5+5Y5/dTlstulwHQdS
f3i6pM+6Ch/3AB2uP/l55sLLmk8Ru5nMPw7Zb+92d3yUxqPxXH8q6eH6T8kf
rj+X8sD1Sik/XGt94foYaR+47iXtCdefSvvD9b+lv+Ba+xeu1R90vRk6XG8s
/gbXC8U/4Vr9Ga7V/+H6d+EFrvcXvuD6XeERruEXTuD6s1Y333jTsP6mJ39X
72aWwrrM28l0uH5neN19faq2MR2uL9tz6I7/uHgL0+G6x6whPxa32kTsFt0L
D4y5fN9D1he7hficmmMWdTWd69V37DTiyIvai90ad/XG0X3fz28hdquTeAjP
r41Cuw3v4RssHLn2i5VhnNMGrjcvrWeenMZxgOt53+31S/ddF5melLPCfd7i
mvmje6fxUuH6nbq7lp986c9iN+9e+WPiW/ef8J3kn3MDSv348XTT4br3XiM/
f2X3aZI+646u6936nEx6vhFcP/fR1PW3uuIdsZvJrHbdH7r7iPGmw/Xzkh6u
T5D84XpzKQ9cD5Hyw7XW1/ZfS/vA9XRpT7iulPaH622kv+Ba+xeu1R/g+hrx
H7i+SfwNrr8V/4Rr9We4Vv+H66uFF7h+X/iC65+ER7iGX3iA6x3b7XTzvYN2
NR2uL5vbbdln/9nedLj+c+P+v9TttZXpcH3skxMfOHlwH9N1XUpot+E9Lj/6
9IXXdxe7BZctmRne2XTqUVa267ixC1qL3Ro3cfw+t9X2LhO71fG6uB4HpOvI
4bp8/9ZXn3pGun87yb/S9e895eTTdllqOlzfcGmPwnW90vincD349FsfnfHD
vPTcEc91Ox+/K7Sbd10eHdrq8V9nSv6c9/Gp6XB91gNHvt9zow8lfdbtsv/x
+d22G2+6vYfv+8053y8eLXYzmZnVjw1svtsLplt8M0kP1wMkf7i+UsoD13dI
+eFa6wvXnaV94HqItCdc3yntD9eDpb/gWvsXrtUf4PoD8R+4bif+Btc/iH/C
tfqzrksJ7a6OjhNebP+18AXXVwuPcA2/+D1cjzzv3tHf3b2z6XDd/4XO76/9
sp/pjcfpV5b1NT2xs9rNyvxa9p+lm5gO19+2+N+woTPXF7tFt/fbfb+6enA3
sVtwta1eu2Tw3Pamw3WL0j7Wvi3Fbo3r1Hebm96oXhuFdqvdUcuW3XvI6pVR
aLfKHX583wWv/18aLwmu3zhtxD3nnbzIdLiuv/jWFi13TuOSw3W/0nq/hueO
vfcnfuvmb1i24x99vxO7eXfA5FUDHpqZlfxz7oh+x2615cNTTIfr+P5W+a6k
z7rbSvslNxxjOlzv2XHtiF9mPiZ2M5l+2//4e9etHjQdrveV9HB9t+QP1z9I
eeD6ZCk/XGt94bpC2geud5T2hOtWl4TtD9fvSX/BtfYvXKs/wHVn8R+47ij+
BtctWof+Cdfqz3Ct/g/XPwgvcL2n8GXreYVHuIZf/Buu43+H7Gg6XO958uSd
/u/2rU2H62dn/ryqdpfNTYfrvo+fseLC9huZDte/HX1927oRPUyH69K/I6/q
InYLrtuz7R7LdWlrOlxf0PXpLWZlmovdGnfKgX23mP56uq+Dere+t+NTVTev
iEK768QtNK4fv/us2u0eXmg6XN+1wyVztuvzm+lwfdw5+1039vwfTYfrs+a9
8+iQpbPErh83e/BzyT/nqs8f/N5Np0w2Ha7/3vjDV3ZqeH8O02dd/uM/Nio7
73nT4frQebtVP7THPWKXn1tMh+vhkt6+ryV/uK6V8sB1iwvC8vv6RlpfuD5P
2geuh0t7wvX90v4WD1X6S/pV/SFSf4Dr08R/4Poy8Te43kD8M7km42aN/Rmu
1f/hup/wAtcvCF9wXS48+o5Nfm/gFz/2+pTt27S65z9LtzMdrr99oNvAj1/e
0vTG61O6vLeZ6XBdOm9uxwkbmA7XnSoerdnsnfXEbtG9POrk2+9Zr5PYLbhx
P1z716W/tTIdrr8sLVA+rpnYbXhv/d/WnbfrVxuFdqvdJQ+c8fvFz6fxy2iP
ZSvueWv/fZZEYf6V7t2nu34+474/TIfrvqVjKE6cZzpc31faj3D8D3Ju3++u
fN7lO3VeOlPs5t2ISZfvfN1tn0r+Odf7tImH3HRdel4vXA8pHXdz+xuSPpuc
7znxSdON6/svPnPg8NvEbibzUbwu5QLT4foESQ/Xt0j+cD1cygPX20n54Vrr
C9fDpH3g+mFpT4unLu0P15Olv+BZ+xeu1R/gelfxH4tLJP4G1++Lf8K1+jNc
q//D9cHCS+P9ao35gusfhEe4hl/8Fa5f33H4DvObbWs6XFed+dUp32zc13S4
nn70oAHHNtvUdLj+574D75r4zfrlMu9rcRVCu0XXf9CRY0d8217s+nHffi1N
T+qx3N3del7f19tnxG6NG/RRnzFj90njm8B1fCzDgGVRaLfK/TSubL8OOy+O
wvwb+mG3Fyf8u9cC0+3v+pxxffdD/i+MJ97A9bFHXffnbovnmA7XA/35U6Hd
vKvtMH/+9gM+kfxz7hd/bh06XBf+2rrXy3u9JumzbpOBp/2+z6jHTIfrzUp/
dvT1YjeT2SGevz7WdFtHKunhenvJH647LArLA9eVUn641vrC9WBpH7g+SdrT
9l9L+8P1C9JfcK39C9fqD3C9r/gPXN8v/gbXxDcTf47Un+Fa/R+uzxBebL+m
8AXXBeERruEXv4Tru7Z/fIMBF29jOlyXPnfO+3Vz0+F69NLVm/TusLHpcH3U
TZm/qw7qaTpc33HF0FH1HbuK3aI7ZdeLbm/epp3YLbifJ95xQ35Wc9Phuv8h
dx1X3jPdJwnXO/V/5LBln6Rxx+B6aukYh63SuMBwPWT3Fzbb4o303A643vHQ
Me2Gtk3P36L9xo29dOgBc3+OwnJWuJvq9ttwWnV6bi5cn1H69f0ZYjfvti0+
2nqLs6dJ/n7cbPJ7psP19PM77fJT7SuSvuE9/NDaXmvbPJqe6+m53nm90oEZ
/xa7zHMNMh2uD5H0cL1E8ofreVIeuL5Lyg/XWl+4/pe0D1zfLu0J1x9K+1t8
fekvuNb+hWv1B3tei//A9WDxN7ieL/4J1+rPcK3+D9fHCy9w/YrwBddnCI9w
Db/4H1yfMXzJHuO32tr05O/q3b5H//bIf37pUy7rnl0/v+8bHa7fHHX2yMXd
epgO1+Mu7XhW3826iN2iO+/icTsNf76N2C24Sbe//98TPy0zHa4vHNRu7id3
p/EL4PpOf15DaLfa7bneg/8ac2Iarx+uyxau/KTq3j/D87QauB710txvBx8w
33S4vsCf5xiWs8J9eczUV/oemJ57zfXVM/Ov9shPF7t5d+CNX1Ws+G2q5J9z
c2+YddmgLd4zHa7LStOYh78i6bPuQX/uPDpcD5j77OR9rr9K7GYyn8fj4X1M
h+sjJD1cPyf5w/X6Uh64rpDyw7XWF67HS/vA9dfSnnqeZhi3ojJ6SvoLrrV/
4Vr9Aa5Hiv/A9VXib7b/WvwTrtWf4Vr9H67fEV40rkJotz46QHiEa/jFz+C6
9E+LPluZDtdffzVs1Hmd+5gO1888n3t/vb17m57wtdrNuLXnqm6bdDcdrl8c
9fUBfb7qZDpcx5f/tBa7BffRX7O+vH5FM9Pheupdv+2zdngaVwiu93l3+7cn
NornC9ed/3v5H5/c9ncU2k3GG8onL4zC/Ctd9wnPn3HGB3buqnHdc/3XT+y3
gZ3Talzvff9t99XMnm26+eOVwy/89ajpYtdfH5gq+efcLb/1HrtXdqLpcF35
2sG7/l/1WEmfdZ3PvOW3P5ePMh2un21d/uSk3JVi135Mh+v3JT1cbyT5w3Wz
18PywPV9Un5/jbS+cP2itA9cR9KecN1H2h+ue0t/+f6NtH/hWv0BriPxH7ie
Lv4G11PFP5Or33/dyJ/hWv3f4jkJLxaHRviC69nCo+/X+PcSv/iT16cc9a+n
Dut47Jamw/Vud8w7ZeNLNzNd45uhw3Xp9xdOX890uHY19ZuUv9VR7BbdyD0u
2Pa6Ca3EbsEdv2zoZoNObGY6XJ8x8sxT6q6rjUK76bl7od1q1zV73AcvvLQ0
Cu1WubXNnl77Xd+FUZh/pStv89fL1x7zm+lw/Yj337CcFa64S8W4l++YbTpc
33DXL4u3WZkVu3l3xYftex12ylTJP+fOP2m/F7o9MtF0uP7slEO+bD11rKTP
xut2vvpqlOlwHZ01uuLTF64Uu3xffz8Y3cbNJD1cz5X84Ton5YHra6X8cK31
hevbpH3guk7aU8/3Q4frA6W/4Fr7F67VH+B6gvgPXJ8v/gbXp4h/wrX6M1yr
/zeO39aYF41vFtqtj/YUHuEafvEbuO66yZBnbp/ctzw8P6bebVc6nnTZpqbD
9dzm2wx+895epsP1NY+8+cs2P3QzHa5LceqO/78OYrfohnZduOH4Xq3EbiE+
X/7MhWncELhelJ/z2VVz03idcP10ZuBBG05Kz8mA6/j8o5ZLo9Bulfv8nI5r
X/4wPY8WrheVNpJ1/s10uD71u4WFY/bPyfk6Fe7+0x6s637kbNPhevrI2b/m
J2fFbt4V1x4x4anBUyX/nPvwqEf73PfviaZbHKT5u2T/GjtW0mfddgcs6lv8
cJTpcH1LHJj1SrGbyUxK1qUMRofrJyU9XO8h+dv6cCkPvH0p5YdrrS9cfyvt
Y+Ph0p5wfb60P1xXSX/BtfYvXKs/wPXz4j9wXS3+BteXiH/CtfozXKv/w/UN
wgtc/yR8wfXuwiNcwy/+AdfvH3/kQR8flepwXQpzderhm5oO11fPrBx6eude
pid8rXYPb/bWQQOv7mY6XHPeQWi36Ob84/Jz/jGupdhNz91Dh+tl6y1sv/S8
NN4uXC+6efa7X1+QnnMD15N/unvNy08tiUK7Ve6fH/e8dMyV6XnScH32OaVj
G/Om2/j0p69+tGWHXBSWs8Itat7+hNzOs02H60c9H6HdvFv13fQ3f91+quSf
c+9dUApwP9F0+m3Q1DbV7z41VtJn3WvDVw959N1RpsN1vrQt6T9Xil0bDx+M
bvs+JD1cfyD5W9xCKY/tv5byw7XWF66flvaB6yXSnnC9l7Q/XF8g/QXX2r9w
rf5g532I/8B1rfgbXHcW/4Rr9We4Vv+H68eEF7i+TviC69eFR7iGX/wArk+4
d3FmZPdUh+tdTz5t+3lLNjG98bkAJ3y2vulw3X+fj47qObib6XC90xnvH33F
qvZit+h22fTv3JmXthS7Bddy/luvbHRRGrcLruNz9/ql8bLhuvTv0VF6TpWt
/3p+j7oDTl0ShXar3NJOL3/9+6HpefBwPX3Frqefk82bDtd7/Zl747olP0Zh
OStc59K5q5vONh2uu48attWsEVmxm3dXb3dlzRdbTJX8c27gqw9dVTh1oulw
vVXpuLxHx0r6rNuqNFExfpTpXJee9ue25SOvFLuZTN1/4/fwQehw3fr0MD1c
7yb5w/VeUh64PkDKD9daX7jeUNoHrteT9oTrIdL+dl6u9Bdca//avg/xB9vP
Jf5j+zTF3+C6nfgnXKs/w7X6v8VvFl4sXqnwBdd7CY9wDb+Z8GdKckl1uC5U
vv1zh5mbmG7n2q/uNbHmDYsrlYHr2y6avPkz23UzHa5P2iJqP/f/LJ5VBq5L
/3YZ3lLsFtw1HfvfdPY/07h7cH3Bv3+dt0X3NN49XM9oMWPbb3ZOz5mD624n
fvbY84csMR2uk9aoMB2uK0cM6bDv1LzpcL3v9mvfHPP7j6bD9ZDfXm/xygaz
TYfrq1v+MnvpLVmx68c5+kyV/HNu391/32fiKRNNh+vLzjjq6DWjxkr6rLtl
6GNzho8fZTr9XDfm2js7jrxS7K77A9c9xobp4fpeyR+u75TywPU/pPy+vpHW
F65vkPaB62HSnnB9qLQ/XC+T/kp+/DqzRv0L1+oPcD1T/AeurxR/g+sbxT+T
n2TcrLE/w7X6P1yPEF4sfnBdyBdc1wuP/sf/3tfiUXrdntfocN3f3x/QLd6P
v5+gw/UAf/+x7zfP9S7+fhXaLbrd/P0ttJs+r9H1eR3aTZ/Xod30eR3aTZ/X
Yf7p8xpdn9dhOdPnNbo+r0O76fM6zD99XqPr8zpMnz6v0fV5Lf2bOTsZNxtk
+7j8led1qKfPa3R9Xofpc9FQKb+vb6T11ec1uj6v0fV5ja7Pa+nfSPtXn9dh
edLnNbo+r8Nyps9r8edI/Rmu/7+u84DP8Xr7+FNbrERtau8Zoma5RWwqtKia
QVVRs7ZatVp7BFVqV+zV2n8O1dInqhSlsRorVkoiPB6rXvGc33Vyfp/38fm8
vd/8/se5zn3O9XXnrOti/+fvtW33hVOD+ALXdYlHcG3zK/9eyvwaOs+vofP8
WvyA5tfQeX5t2zXza9uumV9D5/m1bdfMr227Zn5t2zXza7t+M7+GzvNru51m
fg2d59e2XTO/tus382voPL+2y5v5NXSeX9P4aq7b1l1htcvMr23dzK9lHY3m
13Z5M7+m93X4fXl+DR1c36f+5Pk1dJ5f0/g6PL48v7bbY+bX0Hl+bbfT4wSS
f4Jr9meeX9t2zfzatmvm17ZdM7+m8ZX5NcYJXGM9DTq4rqTX36Dzejh0cI31
cOjgOk6vB9p2vaqJXj+07Zr1cOi8Hm7bNevhtl2zHm7bNevhdv1mPRw6r4fb
7TTr4RKHV3ON9XDbrlkPt+s36+HQwfVyvf5slzfr4dB5PZzG15Wo18Oh83q4
rZv1cOi8Hm6XN+vh9L4Ovy+vh0MH15HUn7weDh1cJ9J4gWseX14Pt9tj1sOh
g+uH5G+8Hk7+7LA/g2v2f3A9hngB15eIL3BdnXgE1+AX4wGusf8FXX4P1/tl
0Hn/GrqPL7N/DZ33r227Zv/atmv2r6GDa+xf23bN/rVt9/X8Wu9X2nZfz69T
+fY37frjVajeD7X3S83+td1Os38Nnfevbbtm/5r3Y7F/DZ33r+3yZv8aOu9f
0/ji9/C60MF1eyoPrs9T/bx/bZc3+9f0vg6/L+9fQ+f9a+i8f40n71/T+Do8
vjK/Jn/g/Wvo4Ppz8jfevyZ/dtifef/atmv2r227Zv/atmv2r2l8Zf8a/Q6u
k/+T4ryZcE3nzRw/582EazpvJlzTeRvh+s3DnM8Rrum8mXBN582EazpvJlzT
+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
cM3jC67ZH8B1IPmP3OcifwPX7ck/wTX7s3BN/o/nUeIFXN8lvsD1buIRXINf
icuguX67WYU/njQJEx1cd5v98+PoGo7o4HrT79Pzn3q3pug+vp6reT3d70a3
rCo6uL517Nv9Cz8IJrtelX3k3LLRlcqSXY9aHrLqp+re4qKD67Of1Zhy6JfC
ZDdJ1S+U2O9hdD6ym6j2/+m6Mq1nTrKboM51OTWpYJ4gqj9eZaqzpO3WDplE
B9dzM3QsuSopLbUzTo29X2FU4k9viQ6uT+ufbbuxqtaJKvOv7nri2PXHqN+S
563XzHqonCNNiK13PF8ilXer2A5753cddF90cP1s1odDPgmLJ7su18k351Lu
mXsFmutUs+3y4JrrB9cnqT3gOpraD675fcH1OeofcD2B+hNcL6b+B9dv03iB
ax5fcM3+IOfNyH/A9XnyN3C9hvwTXLM/g2v2f3C5gHjBcyvxBa57EY/gGvyi
HLguGdZv+at2jUQH19WcUh98Uq2+6OC6V5W2wTNW1REdXDd4u9uRpMAaooPr
dPN/e1FhYgjZ9arGdT9Z2WRxJbLrUd7D3mlbZpcRHVznSl5X2VCc7Cap1K9r
S7OrMNlNVB3OV2jwKlN+spugej7KEvLxvzmp/niV7rfsf/x1Nkh0cH07xzvu
x8WyUDvj1PaPoqv88iy96HKOtP+a5vPvpya7sapG+Pl1h393Uf0xKrLogUyl
L5rxA9dv8uz0NL+Hgeu2k7KEnwx4Irrc0+xQ40DTzY8dGl/XyfAXow/UMjq4
bkjlwTXXD65DqT3geiG1H1zz+4Lr2tQ/4Jr7U9bDqf/BdSYaL3DN4wuu2R/A
dVryH3BdgPwNXL8k/wTX7M/gmv0fXDciXsBrX+ILz1rEI7gGv/gZXPsezUT3
+e1/KuP3u6Ivf9xQdHB96lDn4EUTQkUH172y//jpuI3viQ6ujx/8u+ZfX1Qn
u751s1TlQ8ju69/DGxbrualdJdHB9XcNA3tUWF5GdHDdLPbJvRJeic8meUQz
P7x5fFvlIqKD6zePJgWo/nhVZVHn0uGdJK6U5EGacTFidsk+b1M741TZo5Mb
NmwYKDq4Lu8t3nDZfIlnpZ++dbPAXemp/hg1bfY7s2b+kkZ0iVv828Pb7y5N
ReXdKv+L6lnrFXtLdHA9PODbBp7GMq54uuhniaPD5cE11y9xI6g94Jrbr9/X
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
dj0qTf+v1l3fkVF0cD2sQsy+PZXfIrtJqk/mmGvvbH7i2HYTVeWnnV1f7TH5
rsD1aufa0MHZbzt2/fFqaZcymdJ+dVV0cB01sfn11sNjHLudceqnsDEHc75/
WnRwveHwu7s3rXCT3ViV48T/XnYtc5jqj1G/jip9sXm3naLj2S/HjafFFkZR
ebdq3S93lcWvuYMOrgu9KvIy12tOaXxdtx+8+T28DnRwXYPKg+suVD+4nkDt
kXua1H5wze8LrrdR/4DrPdSf4HoH9b/k06TxAtc8vuCa/QFcDyT/kfPh5G/g
Ojv5J7hmfwbX7P/geiXxAq6DiC9wfZx4BNfgF/4Brtfdm7ts6qlmooPrwqHz
GrerXk90cN3nwboVf+4MEd3H13P1pFPD2PcqlxYdXCPfgW3Xq9KX2rlrTPDb
ZNfk3YMOrmMj53Z5N8ZFdpNUVrWu7KyWTxzbbqLaNf57T/upJl8duJ55PFdA
+qu3HLv+5H2qL/rW6HNVdHC9Nef18iu7xTh2O+PU70Nz17sRdlp0cL1Q82Hb
ff297tp94MuSh6n+GFV9/byhnq47Rce4LTh9asf8BVFU3q3+mjfMM1i+p27h
+sHBb7dlk++vm7/X70EH1xmUXR5cX6P6wfV6ag+4bkTtl+81va/ES6H+Aden
qD/B9T7qf5Pn0x4vcM3jC67ZH+RcCvmPnEshfwPXBck/wTX7M7hm/5d4op1t
XsD1QOILXJcmHsE1+JXzSZrra3XOdOgfYnRwvXXPvRKvdjiig+vjwfOTSjUO
ER1cxy6aWnnUtlKig+vGXywaHTb/HbLrVVkfV4vOcjk72fWo1XnH/lDupwyi
g+vxrZtu3rvWRXaT1LnVc/76I88Tx7b7+nv9bUj+qX1NvklwHbU/8mWNX285
dv3xqv3DjVMfdLoqOriOG1LnalTbGMduZ5wqVf2r/TfrnjZ55TXXZdttzRWz
wE12Y1VCuWWzfi1xmOqPUZci1OgPXnMBHVz//fG8/m1fc2SXd6t1J//q0vM1
d9DxbLIm7aUsrzml8XXl8nFdGzq47kblwfVOqh9cx1N7wPVdaj+45vcF18HU
P+C6HPUnuH5I/Q+uu9B4gWseX/lekz+A60vkP+B6CvkbuN5C/gmu2Z/BNfs/
uL5DvEi8VeILXCviEVyDX5f955DvYXRwPXBlRKclQx3RwXWHRh16vywq8dlc
4Pp02/SjB0wpJTq4TvP1uQI5e7xDdpPXzTJcunxY4l+5wPV3A24VT7Uwg+gy
v46etbf1QhOPD1wXjoyt0DX9E8e2m6gGZlp1f3J3zhfrO6dT73+3RAfXa6dk
X7Wh/VXRwXUnz5MNZ1vHiA6uB/63NbZVndOig+tLIyal3RzpJrtv1jlCPy1x
mOqPUY9fhrUo2nWn6OD6x+MdxjVYEEXl3SrDbycad98WKTrG+UBs+iVZZB3M
/x9wfZ7Ky/411Q+uj1J7wHXq/+z26/d1+H3B9TXqH3A9hPoTXPei/gfXm2m8
fH98451yfGX/mvwBXJcg/wHXmcjfwPUP5J++P8nrZrY/g2v2f3B9kXgB1xHE
F7geRzzqP/rnZhKPUuvyvYYOrn/U/z5Al3Mp+t8T6OD6hv73Bzq4bq7/vbLt
elWQ/vfNtmu+19D5e23bNd9r2675Xtt2zffart98r6Hz99pup/leQ+fvtW3X
fK/t+s33Gjp/r+3y5nsNnb/XNL6u4Gm+7zV0/l7buvleyzycvtd2efO9pvd1
+H35ey3rd/S9hs7fa8krRt9rGl+Hx5e/13Z7zPcaOn+v7Xaa7zX5s8P+DK7Z
//l7bdt94ZwjvsD1UeIRXNv8yr+XMr+WeBk0v4bO82tZP6X5NXSeX9t2zfza
tmvm19B5fm3bNfNr266ZX9t2zfzart/Mr6Hz/Npup5lfQ+f5tW3XzK/t+s38
GjrPr+3yZn4NnefXNL7g+r0VVrvM/NrWzfwaP/P82i5v5tf0vg6/L8+vofP8
GjrPr6Hz/JrG1+Hx5fm13R4zv4bO82u7nR6nMPknuGZ/5vm1bdfMr227Zn5t
2zXzaxpfmV9jnMA11tOgg+tf9fqbnA+m9XDo4Brr4dDBdVu9Hmjb9aoeev3Q
tmvWw6Hzerht16yH23bNerht16yH2/Wb9XDovB5ut9Osh0t8bc011sNtu2Y9
3K7frIdD5/Vwu7xZD4fO6+E0vq5uvnMpdaDzeritm/Vw6Lwebpc36+H0vg6/
L6+HQ+f1cOi8Hg4dXK+h8QLXPL68Hm63x6yHQwfXY8nfeD2c/NlhfwbX7P/g
eg3xAq5zEF+Sl4N4BNfgF+MBrrH/BR1c39P7ZdB5/1rOJfjaKfvX0Hn/2rZr
9q9tu2b/GrrMr/V+om3X7F/bdhPVfr1fadtNUJ30/qZdv9m/tvdLzf613U6z
fw2d969tu2b/mvdjsX8Nnfev7fJm/xo671/T+OJ7XQe6/H5H5eX3IKqf96/t
8mb/mt7X4ffl/WvovH8Nnfev8eT9axpfh8cXXLM/8P41dJlfk7/x/jX5s8P+
zPvXtl2zf23bNfvXtl2zf03jK/vX6HdwTefNhGs6b+b4OW8mXNN5M+GaztsI
1y77fI5wTefNhGs6b2bu39vnhcy9Xvt8kXBN55GEazpvJlzTeTPhms6bOX7O
m1nnoVKcvxKu6byZ2Ue1z3cJ13TeTLim82a8fobzZsI1nTcTrum8mXBN582E
AzpvZj1Tvq+f82aOn/Nmjp/zZo6f82bCNY+vn/Nmjp/zZo6f82aOn/NmwrWL
/NnPeTPHz3kzx895M8fPeTPhGvyif7V+qKQ+XwodXON8OHTOuwcdXG/R512h
8/lw2645H27bNefDoYPrG/q8rm3XnA+37SaqCfo8sG3XnA+36zfnw6Hz+XC7
neZ8OHQ+H27bNefD7frN+XBZV9Jc43y4Xd6cD5d7j5prnA+n8XUV1efDoYPr
FlQeXO+h+vl8uF3enA+n93X4ffl8uMQn1VwXo/4E10Wp//l8OI2vw+MLrtkf
+Hw4dD4fbrfz9fea/BNcsz/z+XDb7nPnIPECrncRX+B6APEIrsEv+hFc4z4I
dHCdU98fgQ6uc+n7JhL32ddO1UjfT4HO97lsu+Y+l23Xoxro+zLQwTXuc9l2
zX0u2665z2XbNfe57PrNfS7ofJ/Lbqe5zwWd73PZds19Lrt+c58LOt/nssub
+1zQ+T4Xja8ra2vffS4Tz9fH9UQqD65HUv18n8sub+5z0fs6/L58nws63+fC
z+D6D+p/cN2Cxgtc8/jyfS67PeY+F3TJp0n+Bq5bkn+Ca/Znvs9l233utCRe
wHUR4ovvc9H4yn0u9Be4xv1N6D6/Nfev5b6c5vqMvh8KHVyn0/dJoYPrHfr+
qW3Xq4L1fVXbri8+aPL9Vujg+qm+f23bTVJN9f1Z226iGqzv29p2E9RCfT/X
rj9eLdT3eaGD68H6/q/dTnP/Gjrfv7btxqrs+j6yXb+5fw0dXA/R953t8ub+
NXS+f03j67qr71/b81Vz/9rWzf1r6Hz/mue9I6n94Jrfl+9fQ+f719D5/jV+
BtfLaLzANY8vuGZ/ANetyH/AdZpOtr+B6/Pkn+Ca/Rlcs/+D66zEC7i+THyB
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
Jx6t52t+/w9bdDRR
    "]]},
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  PlotRange->{{-2., 2.}, {-2., 2.}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}}]], "Output",
 CellChangeTimes->{3.603163096288743*^9}]
}, Open  ]],

Cell["\<\
Here is slightly different version (but it doesn\[CloseCurlyQuote]t show the \
x and y axes).\
\>", "Text",
 CellChangeTimes->{{3.603163032950135*^9, 3.603163075846642*^9}, {
  3.60316527412921*^9, 3.60316529421244*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "x", ",", "y"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"x_", ",", "y_", ",", "0"}], "]"}], "=", "x"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"x_", ",", "y_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"x", ",", "y", ",", "n"}], "]"}], "=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"x", ",", "y", ",", 
          RowBox[{"n", "-", "1"}]}], "]"}], "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"x", ",", "y", ",", "n"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2", ",", ".1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "2"}], ",", "2", ",", ".1"}], "}"}]}], "]"}], "//", 
  "ListPointPlot3D"}]}], "Input",
 CellChangeTimes->{{3.603162908124905*^9, 3.603162977777174*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {Hue[0.67, 0.6, 0.6], Point3DBox[CompressedData["
1:eJx1nVvMbElVx/t858ycnotjR1vSDx1sO51O27advt8v1ZcE9Q14MRExkOAl
MQEvD4qg3wNg4oOCEG+AITJCUKJjogGMCSMXUcJlRHS4JQzDISPMAB9zYeac
mQH37G/967N+p+q87PTvW2fv2lVr7apatWrVj738lS96xUmhUHjTrYXC5YL+
nW3Da8mFvwvuVevb73/nq+4CL7rvtl7yRx964k7H/5/B7C93gJfd5rnbrG8H
r9jv28CrLpe+/yp4zeW3/9Ct4HXjt4A37D5XwJv2m7zl8tddXwZv23udgHes
Hi6Bd63eyHv2m7zv7s7/QwF84F6SP5h86H48/wP5yJ1XM/nYfpNPEvLTxP1n
ifLME+VfJN536X4tWj+rRH2u3Ruj9b8xvWJ7be0329fF9eHUuQ9H9WdnHPp2
unOfi+rn3n5Dn0/3Cf0/2HvBXk4P7smofR3dr8fs8fRov2W/F+0Q2m/BX7/y
6vLfveArd4IX3S/m/+4A131vBy+77CbZnYrgFdP/q+BVl4u/4FbwmhsMn/t3
C3jd5Xh4Bbzhfiq/z2Xwpj33BLxl5bwE3rYrecfqoQDete/M97ch71l9fg+8
7/JmbJEP3J/n/54FH9r7ko9c/tgnngEf23PJJ2ZH5NPE/WfuL6Llmdt3gOVf
JN53maiflfulaH2u7cr637i/j7bXNtG+Lq4PmV2PovqzMw59y+z6p6P6uY/r
c2bXcf0/2BX2ktn1L0ft6+gejNljZteh/eo5Z9uw/714fmi/RX995IXvf/7r
H74NvORe//BzfyiCl61+roJXTK9uAa+6T37iuX9XwGvuuae+8P2XwevGT8Ab
dp9L4E17bgG8ZfpM3rZ+TXoo3rHv/7PgXXvuM+A9q7enwftWP+QD6wdvgA/t
+08+siv52J57HXziLkXlp4n7z9xfR8szT5R/kXjfpftUtH5W1g+yPtfuzmj9
b+y5bK9ton1dXB8yu/5AVH92xqFvmV1/Kqqf+7g+Z3Yd1/+De0PMXjK7/mbU
vo6wd8kfMX6+GHeH42f257eDF2G/JX/Nq+H5V8HLVp+3gFdsfHsFvGrfk8vg
NZe/7gtPwOvuRTm/BN5AfyretHJKT8Rb7s+C/ki87Va5nj8D3nG35fr2NHjX
fT//dx28Z88l71s5nwIfuP/J9fxJ8KF9n8lHNp4hH9tzySf2HSOfJu4/s+8Y
+TxR/kXifZd2vQG+su8n63Nt3xnW/wbjB/Fton1dXB8yu47rz874CeR3Nq6g
fu7j+pzZdVz/D+5HY/ZySnuX/NG+w7DHzK5D+y3b9Wwbjv/FCxg/iBfx/REv
ofxlf33Nc8OHV18Br2B+JF51P5I/+AS8ZtdL4HVf3pA3XDsYH4o3rTzPgLfs
u3cDvG36cx28Y+37FHjX/Xxe0U+C9+y53wXvu4+cD6DBB1bP5EPrLx4HH9l8
jXxszyWfuDdF5aeJ+8/cOFqeeaL8i8T7Lt1Lo/Wzsv6I9bl2b4vW/8Y9FW2v
baJ9XVwfMru+ZAKh/M449C2z6+dF9XMf1+fMruP6f7B6hr1kdj2O2tfR3ROz
x8yuQ/uV30rz8tvAC5gviBcx3hAv4XslXsb7VnA9wW/5zQrgNfe6/Dum77B4
3cYPz4I37Lv0NLj8ZjfAWy6fvrz6KfA2+jvxjssf+/AT4F2bVz4OLr8Zed/m
fY+BD2x+8Sj40PoR8pHLi18ml9+MfGLfT/Jp4v4zG5eSzxPll9+M77u0eSL5
ysbtrM+1q0Xrf2P2wvaS34zt6+L6kNn1G6L6szMOffN+M+rn3q4nIT+lvUte
fjPYi/eb0b7kN4M9er+Z7Ldq17Nt6H8WL8B/JV7E/Fe8hPGzeBn9r3gF9lv1
15/LPxCqT3H5zZ4Frxt/Grxh/tvr4E1r3yfBW+a/+i54230i6L/EO+bXegy8
6/4wb69HwXv23O+A983fdQY+sPokH9o4/9vgI/vukY+tPsknCflp4v6zRHnm
9p0nXyTed2nff9bPysZFrM+16Rvrf2P9L9trm2hfF9cH7zej/shvBn3L7Pql
Uf3cx/U5s+u4/h8wnpf8AfN3yR/hr5P8EetHGteebcP1I/EC/M/iRfivxEuY
/4prHHEJvIL+V7wK+635/1cM5l/idZvnXgdvYL4p3rTnPgHect/L9fkx8Lb7
q3zg8ih4x70y/35+B7zrXhHov3jPyv9t8L7701yfvwk+cL+V90ePgA/de3O9
fRh85Pr5+5KP7bnkk4T8NHH/mfvtaHnm9n1j+ReJ913i+yC+svEh63Nt/kPW
/8auj4NvE+3r4vqQ2fXtUf3ZYb4vedq75Pdxfc7s+vw39f+A+bvkD/DXSf4I
/7zkj1j/rdtVdn0LeAHrR+JF+J/FS/A/iF/M10NewfhZvIr+V7wG+xWvW/0/
Cd7A/FS8ac99DLxl10fB2y7/HL7zDLxj4+1vgXetf38EvGflfBi8b3bxdfCB
zQv+F3xo/dFD4CNrL/KxPZd8kpCfJu4/c78TLc/cvTVa/kXifZfW/7J+VjY+
Z32uzQ/P+t/Y/JfttU20r4vrQ2bXd0T1Z2d+eOhbZteTqH7u4/rs7Zr6f4jb
S2bX/xy1ryPW4yR/RPxGw64ah18BL2C9T7yI9QLxEvyN4mX4K8QrmO+IVzFe
Eq/heyteR3uJN8x/9Rh4E+ND8Zatw56Bt9EfiXfsuQ+Dd83P+XXwnpXnIfC+
zSu/Bj6wer4GPjR9Jh/ZfPCr4GN7LvkkIT9N3H9m40PyuftWtPyLxPsubb7M
+lmZv4j1Kb8Z63/jfiLaXttE+7q4PpzS3iW/s/JA3zK7/oWofu7j+pzZdVz/
D1ivl7zG4bQvjcNhj34cLvuV/0j1Ql7A+r54EeuD4iWsL4iX4Z8Ulz/gBngV
8yPxGsZX4nV8n8UbaF9xvrd+t2ye+wi41rm+Aa7164fAFZfyNXD5za6B922+
+SD4wOr/K+BDG5c+AD6y7xK5/Gbkk4T8NHH/mcWJsTxz86uz/PKb8X2XFsfF
+tH6NetzbQNl1r/84Wwv+c3Yvi6uD95vRv2R3wz6ltn1PVH93NsV+uz94dT/
g33fYC/eb0b7kt/sJOTebyb71bjzbBvGT4oXEH8lXkT8hngJ67/iZawfiVfg
fxavwn8lXsP8V7xu10fBG+h/xZuwX/GW+0be73wdvG3z0IfAOzbevgbede/L
P3APgvfsuQ+A920e+mXwgft4fv8vgQ9t3PJF8JF9f74APrb3+jz4JCE/Tdx/
ZuMHlmdu41iWf5F436XN41g/K4xPxNfWn7L+NzZOYHttE+3r4vqQ2fX5b+qP
1rkeh/zOxgnUz31cn0/3Cf0/YP1d8gfE20j+iPg6yR8R/6z4SMWlnIDrvpfA
i4i/Ei8hfkO8jPVf8QrWj8Sr8D+L1+C/Eq9j/ivewPhZvIn+V7wF+xVvm//q
GnjH/XD+4XsQvOueyb8/Xwbv2X2+BN53f5KX8/PgA/ezecPcDz509+aK+9/g
I/sOfBZ8bM8lnyTkp4n7z8yvzvLIb8byLxLvu7TvM+tnZet0rM+19Xes/w3s
XXybaF8X14fMru+O6s8O/jrJ77C+L/l9XJ8zu47r/wHxNpI/IL5O8opLgT36
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
Ufvifi7Jcz/X2q5n2/D8I3HuvxYvYn+oeAn7ScXLyP8sXsH6nXgV+SfFa9gP
K15H/ivxBuJ7xZvIvyHewn5e8Tb2/4p3sH9QvIv9R+I9jCfF+4h/Fh8gflJ8
iPgr8RHWg8THWP8VnyTkp/A/i8/gvxKfY/4rvki87xL9r/gK9iuucTjrX/Fm
bK9ton1dXB8yu35XVH92xqFvmV3fF9XPfVyfM7uO67/83rCXzK7vitrX0eoN
9pjZdWi/yueocwEugxeQn0G8iHwO4iX4z8XLyN8uXkH+Z/Eq8seKKy/j4+B1
5K8TbyD/lXgT+XPEW8i/Id6GvYt3sP9XvIv9g+I9zAfF+9i/ID5A/LP4EPGT
4iOs54qPEb8hPknIT7F+JD6D/1l8Dv+V+CLxvkuMn8VX6H/F17BfccWlsL22
ifZ1cX3I7PrcXqg/Ws+CvmV2/ZNR/dzH9Tmz67j+HxDvLXmta9O+dC4A7NGf
CyD7ZR6oK+DMbybO/GbizG8mzvxm4sxvJs78ZuLMbybO/GbizG8mzvxm4sxv
Js78ZuLMbybO/GbizG8mzvxm4sxvJs78ZuLMbybO/GbizG8mzvxm4sxvJs78
ZuLMbybO/GbizG8mzvxm4sxvJk691m/mNzN+U34zyTO/meSZ30zye7tCn2/K
byZ55jeTPPObSZ75zSTP/GbK68R8pOLMRyrOfKTizEcqznyk4sxHKs58pOLM
RyrOfKTizEcqznyk4sxHKs58pOLMRyrOfKTizEcqznyk4sxHKs58pOLMRyrO
fKTizEcqznyk4sxHKs58pOLMRyrOfKTizEcqznyk4sxHKs58pOLMR2r8pnyk
kmc+UskzH6nkmY9U8sxHKnnmI5U885FKnvlIJY98pD5f29k2OP/X80KYr9jz
Ynj+oOfIH+55OTz/yPNKeH6K59VwfdzzWpi/3fN6mP/Zc+QP97wZfp89R/5w
z9th/ivPO2H+HM+7Yf4Nz3vheorn/XD93fNBuH/Q82EYH+X5KIyH9Hwcxj97
PknITxP3n4XxG57Pw/VfzxeJ912G/mfPV6H/yvN1OP/1fBOOnz3fJtrXxfXB
r3NRf5A/3Msjf7iX38f1ObPruP4f3Itj9sL84V7+aO0Fe8zsOjy/e2dX2fWt
4AWcLyBexHkE4iWcXyAuu74EXsH5R+Ky62fBa/C3i9eRv128ge+teBPjK/EW
8k+Kt+GvE+8g/5V4F/lzxHtYDxXvoz8SH2D/r/gQ8Y3iI8Qzi4+xf0F8kpCf
Ju4/Q/yV+BzxG+KLxPsusX4kvoL/WXwN/5X4BvNf8W2ifV1cH7xdU3+0fg19
y+x6GtXPfVyfvV1T/2XXJyH3dk37kl3DHr1d3+rLd/73s+35vOYqeCE8D8jz
Ynh+kOel8Lwhz8vh+YOeV8LzyzyvhucfeV4L7d3zOr6fF3YdjJc8b4bzI89b
Yf5Yz9thfK/nnTB/nefdMP+V570wnsHzfph/w/NBGK/o+TDc/+v5KNyP4Pk4
3H/k+SQhPw3jnz2fJcozD+OvPF8k3ncZrv96vgrXjzxfh/5nzzeh/8rzbaJ9
XVwfMruO6w/s18trPxf1cx/X58yu4/qveDPYi89vRvs6up+J2WNm14H9+nk+
z9MU53ma4jxPU5znaYrzPE1xnqcpzvM0xXmepjjP0xTneZriPE9TnOdpivM8
TXGepynO8zTFeZ6mOM/TFOd5muI8T1Oc52mK8zxNcZ6nKc7zNMV5nqY4z9MU
53ma4jxPU5znaYrzPE1xnqcpzvM0xXmepvFTnqcpeZ6nKXmep7nH9ST8fcrz
NCXH8zQlz/M0Jc/zNCWP8zRPJY/zrz3H+dee4/xrz3H+tec4/9pznH/tOc6/
9rxm10vgdV/ekOP8a89x/rXnOP/ac5x/7TnOv/Yc5197jvOvPcf5157j/GvP
cf615zj/2nOcf+05zr/2fJq4P86/9nyeKP8i8b44/9pznH/tOc6/9hznX3u+
TbSvi+vDKc6/9vI4/9rL4/xrL7+P6/PpPqH/OP/ay+P8ay+P86+9PM+/PthV
cSl3gOt7RPmifceK4CXzA18FL+P8bvEKvlfiVZwfKl7D/F28jvPLxBvwN4o3
sb4g3sL6u3gb8TbiHeR/Fu9if7p4D/HA4n3EI4kPkP9KfIj9feIj5N8QH6O/
E59gvik+Tdx/hv1H4vNE+ReJ91VcCutnhfgr8TXiN8Q3WP8V3yba18X1IbPr
F0f1Z4f5r+R34fjZy+/j+ny6T+i/1rlgL5ld/37UvhSXAnv0cSl3+P9//vez
7Xm/fyd4wcpP+aL7Zj5eug28FNq752V8fy7sOhhveF7F/P3CrgN/ned1+A8v
7DpYL/C8Ga4Pet4K4208b4fxdZ53wvztnnfD/M+e98J4fs/7mN9d2HWQv87z
Ybg/1/NRaC+ej8P8G55Pwv37nk8T95+F+wc9nyfKv0i87zKMf/Z8FcZPer4O
468834TxG55vE+3r4vqQ2XVcf3ah/8rL7zD/vbDrqD6f7hP6D/v18tr3Qfs6
mn8D9pjZdWC/BY3Lz7bn3+e7wAs2D6J8MbR3z0vWT90OXg7HD55XMF8Qr+L8
bvEa/PPi9XA9zvMG1vvEm1jfF28hvk68DX+meAfxuuJd5G8X72E/jngf++/E
B+iPxIfYXy8+Qv4r8THy54hPkH9DfJq4/wz7f8XnifIvEu+7xP4F8VWiPrXv
g/W/QfyV+DbRvi6uDz5fCvVnB/+z5Heh/8rL7+P6nNl1XP8P6H8lfwjt18tr
Pxfs8VTz7rv87/O/y29WApffjPLym90JLr/ZHeDlcPzvufxmt4HLb3YVvBae
3+15PTz/1/MG1usv7Pr8St4Kzy/zvB2ef+R5J4y397wbnr/gufxm5P1w/6zn
g3C/vOfDMD+G56MwH47nF/nqQj5JyE8T958lyjNPlF9+M77vMtx/5PkqUZ/r
MP7Z8w3msxd2fX5l+7q4PmR2/eGo/uywfnRh15+L6ufertBn7zej/h8wfr6w
6yej9pWw3/9nf/8HAeOgGQ==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], Point3DBox[CompressedData["
1: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
OPs1XxBvwg0tcxZkc58Tb8a8RLlu7aq1xJM4ve+s4Jh31hBPob76Q8O8Bb+3
FpRnf0o8jcstv9qPeSsee2v6lqOyzDM+7bM+98/59KcNk9X+t/s8bwduVO3T
iS9Ue+bxJ9X+BYxQx6voM77Q/cHoWvefLvSv/nvyN6PrlOqfJd2fja51/y/b
z8V6MbreQdVXBT9qejS69urXWT9y41mGEA/gwAN+cvPF7j6CcPO+vsK60wDi
IbS+2LHvK2P7EQ9j7dUPDD757gBxZ55fL/YRXodjqhtpG4nX49WfHjV61eRv
iUdxZHVj+xviDfY+xTNfEefnlr9jThzd58Tj2O8XN3Q3LllDPIEfjvruw8Pf
/4R4E6xh3HLUauLOuhk+Jp7EJVusG31EPIU7rO+xpz4k3mLPEw9knkby+njk
6jBziTdjnvFpn/W5fw53qv1pw6Vq/9t9nrcD36r26fSxZx4HqfYvOHFZPF7O
ulnN+EL3B6PrP6r+04XXNX8zuj5W9c+SfWV/NrrW/b+MrKYXo+vXVH1VcIim
RzfeTPQbc5//0ur3wyDiAVTN+a+BxIOobjvM7Uc8hLut9ZYvAsTD+OHb096b
nZTnFR5B02M/GbZd60bidTh22403H/Pf9cTrMdn6H2/6mngUVhjU+7N6iDfA
ik4YNe5z4o1YaqY1U0JriMcwvhq/sZp4HHXVfc+PiCfs/eJHPiDehNyu48/+
64mriDfjz5ZcTn2feBIPHXHum/lF7xFPOet1zFuQtPCD7xJPY+a3A82MlrmZ
X1vrWj9lnvFpn/W5f86nP214WO1/u8/zdqBNtU+nvZ9eY8+8s+/M9i9gX3W8
ij7jC90fjK51/+my993Y34yuJ6r+WdL92eha9/8y5mt6Mboepeqrgr00PRpd
e/Ubd649xWp4zqgg8YAdP3BTf+JBzKy+SPoQD2GgedwHB8m6hHAnLuX6jcQj
2DjhhKU/vLqeeJ0dL3rr18TrsWjo7JY5674kHsWV1s/hJWuJNzi/M6uJN+LS
A62Vkg+Jx/DH6nfRKuJxDKju/75HPIGVP5tx84b73yHehNOrP3wriTfjeGv9
+ZW3iCdxddU+bxJPYYz1IfLEG8RbcMrJY4a89zPmaRxiDdjKFcRb8b/Zw//x
+D+ZZ3zaZ33un0Od2p82XKP2v93neTtwhmqfTh975hFU7V9w5n08XkWf8YXu
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
n+ftoN8H4Z2O7tieecxR7V/AN+p4FX3GF7o/GF3PU/2nC6dp/mZ0faTqnyXd
n42udf8v2+vkrBeJN6vRVwWLND0aXXv1K+spW/OZeXkA1rL9iSG5j/Ag5m+y
NurWEQ/h7RVTJ+2xgPNqhdFshRNm1hCXc5ofEq9D4Twrk807xOvRVV3fWE48
imrza14m3oAzreWZ458lLvE7TxGP4c7qcy0gHsdu1f7fSTzh9PNG4k04p9qf
GcRl/aObeNK5/7HEU5hcvc9+xFuc9nHiaWxj27ng5e54Brx/Z7Cn2j7rcL5/
Dleq/Wlz2nP/Zd2Mn7cDF6j26cR41Z55ZFX7F/CwOl4Sb8bjC90fjK4vUP2n
C7/Q/M3oerzqnyX7yv5sdK37fxnvaHoxur5f1VcFeU2PbryZ6DfjXPl9nXHb
Pez5fRAepN8T4SH6/REexmbP75XwCNZ7ft+E8/taOL+vhfP7WngDjvf8Pgtv
xDGe33PhMXzq+f0XHsdVnveF8IS9b+u+X4Q30ftIeDNme95fwpPIeN53wlPO
e+pM4i140fM+FZ7Gdvv0fv8Kb8U8z/taeAaD1fZZvKTeP4c71P60oaj2v93n
eTtwiWqfTlyr2jOP21T7F7BOHa+iz/hC94ea97W05/e1tOf3tbQv6f5sdK37
v7M+xnoxut5R1VcFizU91ryvs86V59fCeX4tnOfXwnl+LZzn18J5fi2c59fC
63GtZ74jPIp7PfMj4Q24yjOfEt6INZ75l/CYk3dlMfE4gp75nfAEwp75oPAm
J7/HXOJG1575pvAk5nrmp8JTmOHxf+EtuMkz/xWexgrPfFl4q6Nf5hmf9lmf
++cwU+1Pm6N37n+7z/N24DzVPp3YUbVnHiNU+xcwXh2vos/4QveHmvm1tOf5
tbTvwp2qf/L8Wtrz/Fra8/xa2vP8Wtrz/Fra8/w651x5PVx4wF7/d9ffhAdp
vU54CAs863vCw9jHsx4oPIK/etYPhTvnxd31RuH1eNCzPik8ius865nCG+y8
ju76p/BGHO9ZLxUew2LP+qrwOOo867HCE5jjWb8V3oSB1esDxJsx9Ire68PC
k9jBs54sPIVjPOvPwlsw27NeLTyNRz3r28Jb8VPPerjwjE/7LG5Q75/Dn9T+
tGFHtf/tPs/bgaBqn078Q7VnHo2q/QtYoo5X0Wd8ofuDtc+l+k8XFmv+ZnRd
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
Lnym+RvnD3fbl3R/NrrW/b+MnKYXo+sVqr4q9jyI9Wh07dGv6bd97Sl664ML
D1B9AeFB3O2pRyA8ZNdRdesXCHd07dY7EB7BOE99BOF19jq8W09BeD0+8tRf
EB7F6Z56DcIb7Lg7t76D8EZM8NSDEB6z/cStHyE8juc89SaEJ/C2pz6F8CZ7
v8atZyG8GYM89S+EJ+36bm69DOEpTPHU1xDegjpPPQ7haWefiHkrrvfU+xCe
8Wmf9bl/Dn9R+9OGLrX/7T7P22Hvk9bYpxMrVXvm8bxq/wKmq+NV9Blf6P5g
9KH7Txc+0fzN6Ppi1T9Luj+Lrmv8v4ySphej6/mqviq23ViPRtce/XZv1fWn
vev7uDyAJ3rXA3J5EJN61w9yecipRzyMeBi39a5P5PIITu1dz8jlddjUu/6R
y+vt/S+pl+TyqJNfoh/xBuzYux6TyxsxpHf9JpfHMLd3vSeXx531qy3EE/b6
pNSTcnkTnutdf8rlzcj1rlfl8iRm965v5fIUvu9dD8vlLfa6rtTPcnkap/Wu
t+XyVmf/iHnGp30WC9T753z60+bT/3af5+3A86p9OnGNas882lX7FzBPHa+i
z/hC9weja91/uuw4RvY3c92i+mdJ92eja93/nX1q1ovU06zRVwVPano0uvbo
142P4XqawrmepnCupymc62kK53qawrmepnCupymc62kK53qawrmepnCupymc
62kK53qawrmepnCupymc62kK53qawrmepnCupymc62kK53qawrmepnCupymc
62kK53qawrmepnCupymc62kK53qawrmepnCupymc62k6vJvraUp7rqcp7bme
Zsl7ZX/u5nqa0p7raUp7rqcp7bmeprSneprd0p7qX7uc6l+7nOpfu5zqX7uc
6l+7nOpfu5zqX7uc6l+7nOpfu5zqX7uc6l+7nOpfu5zqX7uc6l+7nOpfu5zq
X7uc6l+7nOpfu5zqX7uc6l+7nOpfu5zqX7s863N/qn/t8jaf/rf7PG+Hj306
fexJ9a9dTvWvXV70GV/o/mB0DdV/qP61257qX7vtS7o/d5d8/J/qX7vtqf61
257qX7vtuf512bn2FP/jqXcvPIBx1ufYam4fxB7WMv8VEeIhNFhx/mePIh62
v59vCROP4D7rnNqWEcTr7Hxu04cTr7f3KSoh4lH0XTxgRPiXQ4k3YGx133Mw
8UY8e3nyjJ/dP4h4zDlXsi3xOKZNefnB3wwIEk/gQcubNw8k3mTnb9+FeTNe
sRJ5HDeAeNJex1jZn3gKl8U+H/LEScxb8FTz9fHIbszTdjzkhn7EW3GuFTf1
KfOMT/usz/1zuFztT5tP/9t9nrfDjq+rsU8nFqj2zOMi1f4F9LMuNeNV9Blf
6P5gdD1A9Z8uXKT5m9H1UtU/S7o/G/3p/l9Go6YXo+txqr4qdhwv69Ho2qPf
7q26HvaEGchD6okHkDDTqfU93D6IuPnMv+3MMcRDOGv2nF0XVUYTD9vz/b13
IB5Byoqju3Qk8TpnvTRMvB491jbjLSOIRzFw2+m7HDlxOPEG256Hh4g3Ylm1
QMJQ4jG7nxOGEI9j87BPF97bbzDxBObf88Zhp787iHiTs1+zLfFmTLSOBe/K
POnEPweJp+x1lcHMWzD+lI2mR9sQT9vxqxcwb8V+1fgN5hlsUttnfe6fQ1nt
T5tP/9t9nrcDPap9OnGfas88flDtX3DmpzxeRZ/xhe4PRte6/3ThK83fup39
rxr/LOn+bHSt+38ZUzS9mGtC1VcFTZoeja49+g3IfnZPcYu1LzYqSjyAjVae
h7ncPmivM8zfmXgIj1m//4fUEQ/jRut8eteOxCOImGnEv4+MEK/DdGse99go
4vX2fkp5JPGo93vG5Q3YZ03/9PDlI4g34iMr7c0bw4nHUC10sTlEPG6/18A8
4ZzjG0a8yYnPH0q8GU9a7vbrIcST2GDl2Zg3mHgKH1nnAsYyb7HX8Z7ejnja
zrt7CfNWhKyC65OZZ7CH2j7rc/8cPlb70+bT/3af5+1ATrVPp48987Zf1di/
gC51vIo+4wvdH4yuT1X9p8vOo8L+ZnR9qeqfJd2fja51/y/b8YqsF6PX41V9
VfC9pkfrnGZv/bpxKlR/tFe+pBvvMj+gZ3H7oBOXNZZ4CNNyy5eesHgX4mHM
nWkdkNuJuPP8F40hXgfLPE8vGU28HntY85fmCPEo1lTz4Ywi3oDqsuvMkcTl
nGaYeAwxz37BVl2PqnZoBPEETG9i54SZN+GAAbfObJ86nLizbhZknrTjcOaF
iKfw1pgph6cOZd6CI6xC1LszT2NiunshBjHfmn/OyzM+7bM+98/59KfNp//t
Ps/bgYNU+3T62DPvY/8C7e9s1bX9N48vdH8wuv5M9Z8u7Kn5m7Uervpnyb6y
Pxtd6/5fxoWaXqzzXKq+KrhZ02Mvf/9/RJeW2g==
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], Point3DBox[CompressedData["
1:eJx1nXuczNX/x8d9cx2MLJZ21zSNMcbcdu6X11xIKRWRskpESkl9S6WSIlRu
5RoqhMq1i0uEQsQSQiRyLRS2db+0v/w+u/bM7nnv+/jn89hn5/HpnPd5vWbm
cz7nvN9ZPZ/p2LuiTqd7r6pOV0kn/hVE5eudkP/WISvx9MfXu7QlPA117my1
7XK7BOF6jG/UoenSVSDcgDNTw2Py/WHC04v/XrfYT3gGLC8173J+lYfwTGyo
+vprg9u5Cc+GrXrr10eHnYQbMbLv6Nm73rETbrrxd9JGuBnWtKqj3s5vSbgF
8225rY5WsBBuxQjrlEae/mbCbeiZe8b3hek2wm/0o3KWiXAHOj4x7e5anW8l
3Im6zZIfDl1lJNyF5Q/cd8eajpS70XX0Kd1IA+U5EPGQuUfR3qu4v0/RH7+i
/wHFeIPow8YnpIhnWBH/CFqz8xW98Xe5+QWvhyGAg9VPDBs5vQ2JoRWrz3jx
3+X0PCSu0H8CEzi/DEmgPuuvJEycH4ckS/4W/tWl/vtNHy7L+/3BNoTr4I7e
1vExT5zwNDw4dt3FPF+UcD2+uLff1Ml/BQg34OPdNQqf6+olPB1tGwwde+0x
N+EZWPzUHd86LjgIz8S2VccM3Q+1Jjwbz+6td27D21bCjXDPrLP8+qYWhJvg
77aq9e9DbyPcjJ/H1fOumXMr4RYU9NrafXtTI+FW5Gpx6Hswm3AbYp2OTHz7
QBbhdvy0td2EvnUod8A17FD3pgMyCXei5bgZV748dwvhLnwyIFz9kQ6Uu+Hs
1sN66EwzwnNw6fSX+2tuo9wDN9veq7i/D63Z/vjhZvsfUIw3qIhPCA+z8Qwr
4h/BLna+oor5Ba8HzdcDWf3EsIfTm+brr1l9xnk9a77m9Z/g/aL5+lHWX0l4
OD9qvpb9m1ZyLYju+L67ffIbMcJ16OHsbB81K0x4GuZtfbfJjhw/4Xocs8+w
L3w/h3AD5mo62TvRSXg6Ok1YVOtilp3wDESq79WkZSU8E1/lFo7JKjATno2T
Td0HCgMmwjVfu1yuyxWNhJvw0bb9V685sgk3azrculW/LJNwC/I6hT2dK9xC
uBWz8/9t1rhmU8JtaFGnxtK5Lzch3I4PZ+xbXj/YmHAHXp4+q/mKZCPCndhb
yRxZODqdcBcGbjvd9tE6lLvhsHxev+uGhoTnoPDf9KXnF1DugZNt71Xc36fo
j1/R/4BivEFY2PiEMJeNZxg/sfGPYDs7X1HF/ILXg+br06x+YljG6U3zdZzV
Z5zXs+ZrXv8J/Mn5RfP1AtZfSTzO+VHztexffcm1IPp4va/7vD4/RLgOsfqP
rj+v9xGehrG9N+fkdXATrsf3/tCJYMRBuKE4nt7BrQhPR9Nv2u7/5OkWhGfg
0Jra0y83MxGeiWf9bW339G9OeDY6T106rlski3AjdugOVnw7vxnhJhin9Lz4
VI0Mws1IHhlksC1pRLgFD8e8I5Zub0i4FR0H6/4puONmwm1YOKH3yFP1GhBu
x5Y3br5ar5mBcAemfPDBBzMfrU+4Ey9NXHjAvKce4S6Mz1x8h3cg5W64Q6s7
3hyhPAdvPr0q+8OWlHvgYdt7Fff3KfrjV/Q/oBhvEIvY+IRwPxvPMHqw8Y+g
HTtfUcX8gteD5mtePzEM5PSm+foIq884r2fN17z+E1jH+UXz9fusv5JIcn7U
fC37V8S7ILplza/+X/7nJVyHiuM3FbYa6iI8DX/8OOXbSR3thOvxWfW2t159
tSXhBsxb3/iDWp1uIzwdNe92Pei93JzwDNz6TM66WvEswjPRYEfy1yumZoRn
Y31DU6cqnzQm3IifK3/bru22hoSbcKTTKzcVDm9AuBm1j086n/lVfcItWD73
5R9bBOoRbsWw/7Wd8F+tuoTbsGhArceMmXrC7Zg14ac2WVtrE+7Ad+f/a4bF
tQh34o9BhkUP/F6TcBdQ9H1xN+VutO65vNP/rtYgPAcPNY/W2Ps75R442PZe
xf19OM72x6/of0Ax3qAiPiFFPMNYycY/opivqGJ+wetB8/VGVj8xpHN603x9
G6vPOK9nzde8/hOYx/lF8/UJ1l9JVOX8qPla9q/4PXXj+bui1UW4DtHIYzPb
fdCa8DToX37PktfaQrgeoVbfeh2/3Uq4Af837tcn/+6ZTfiN65DQLYRnYFBe
tXH9fm5MeCZmjpv7XKx9Q8KzMePw7EdPvGIg3Ijgl8atA1PfR4Lf+Jwd+YKe
cDPmTOg2dFT92oRb4A7f9+nwn2sQbkV359NDK6VVJ9yGvv0Xtc6dkUZ4yTy9
XY1wB0b6+lkGLalKuBNt655o8kU65S7svue5PvcsqkK49jv8ln/29RpA+Y3f
efpcyj1wse29ivv70I7tj1/R/4BivEFFfEKKeIbhZeMfwTx2vm48l5afX/B6
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
BztfUcX8gteD5utrrH5iWMDpTfP1DlafcV7Pmq95/Sdg4vyi+briWM5fSbTh
/Fju+1rkV6DP16X51eTna8Hp87Xg9Pm6NP+K/HxRmtehmfQ8IngGTkrPL4Jn
oqv0vCN4Nnk+EtyId6TnKcFNOCk9fwluxhDpeU1wC6zS853gVpyRngcFt+Fj
6flRcLv2/FX2eVNwB/ZKz6eCO+GTnmcFd+Eb6flXcDdc0vOy4DkYLT1fC+5R
tPcq7u9T9Mev6H9AMd6gIj4h5LPxDKM1G/8I3mLnK6qYX/B60HztZ/WjfS9z
eitaD2f1Gef1XO75WrSnz9eiPX2+Fu3p87VoT5+vRZ4kuh4uuA4eaf1N8DRs
kdbrSvMtNZLW9wQ34GdpPVDwdHwtrR8KnoGN0nqj4JlkfVLwbDwvrWcKbsQe
af1TcBOuSeulgpuRK62vCm5Bzb/LrscKbsUhaf1WcBsaSuu9gttRYX7Z9WHB
HdgnrScL7sTX0vqz4C7cJ61XC+5GQFrfFjwHb0nr4YJ7FO29ivv7FP3xK/of
UIw3qIhPSBHPMGqz8de+r9n5iirmF7weNF+/xOonBgunN83Xu1l9xnk9a77m
9a89X3N+KfodzvoriRjnx3Lr4aV5juX3X4Lr8K70vqw0P+IG6f2a4Hpskd7H
CW7Ac9L7O8HTsU563yd4Bi5L7wcFz0RSep8oeDaGSe8fBTeim/S+UnATKvcr
+35TcDNaSu9DBbfgtPT+VHArRkjvWwW34bj0flZwO8ZI73MFd+Bl6f2v4E5s
kt4XC+7CBun9suButJHeRwueg3uk99eCe9CWbe9V3N+n6I9f0f+AYrxBRXxC
iniGkc/GPwIbO19RxfyC14Pm6+GsfmK4i9Ob5uvrrD7jvJ41X/P6T2AX55ei
91ysv5KYxPmx3Ptrsa5B95uV5jOW95sJTvebCU73mwlO95sJTvebCU73mwlO
95sJTvebCU73mwlO95sJTvebCU73mwlO95sJTvebCU73mwlO95sJTvebCU73
mwlO95sJTvebCU73mwlO95sJTvebCU73mwlO95sJTvebCU73mwlO95sJTveb
CU73mwlO95uV8HL7zUR7ut9MtKf7zUT7+I0r1XO5/WaiPd1vJtrT/WaiPd1v
JtrT/WbBkmtBNEfaXyq4Di5pP6rgaWT/quB6zJP2uwpuQFjaHyt4Os5L+2kF
z8D90v5bwTOxUtqvK3g26kj7ewU34ri0H1hwE/pK+4cFN6OdtN9YcAsi0v5k
wa14QtrPLLgNX0j7nwW3Y5a0X1pwB96U9lcL7sTP0n5swV2YLu3fFtyNJtJ+
b8Fz8Kq0P1xwj6K9V3F/n6I/fkX/A4rxBhXxCSniGUaUjX8E7dn5iirmF7we
NF/rWf3E8D2nN83XD7H6jPN61nzN6z+BRZxfis5fs/5KIsj5UfO17F+Rb5ie
5xJchwXS+RHB08h5k9K84z2l8yml+Yz7SedZBE/HSun8i+AZSJfOywieiTzp
fI3g2UhK53EEN8Imnd8R3IRc6byP4GaMl84HCW7BQ9J5IsGtGCqdPxLchp+k
80qC2xGVzjcJ7kChdB5KcCfGS+enBHfhjHTeSnA36kvnswTPQTvpPJfgHkV7
L/LZ+/swge2PX9H/gGK8QUV8Qop4hpHLxj+Ciex8RRXzC14Pmq/bsvqJYTun
N83Xt7D6jPN61nzN6z+BJzi/aL5+g/UXPc8l2tPzXOGSa0H0Pen8puA6HJfO
ewqehgnS+VDB9VgonScV3IDZ0vlTwdPxqnReVfAM/CCdbxU8E6el87CCZ+Mt
6fys4EZUfabseVvBTRgrnc8V3Ay7dJ5XcAvqSOd/BbdipXReWHAbBkrniwW3
I0s6jyy4AzOk88uCO/GkdN5ZcBcC0vlowd1ISuepBc/BXdL5a8E9ivZexf19
iv74Ff0PKMYbxItsfEL4lo1nGHo2/hG42fmKKuYXvB40X49g9RNDAae3on2k
rD7jvJ41X/P6T+ALzi+arz9g/ZVEAedHzdeyfyMl14KoX8q3ILgOaVJ+BsHT
UEfK5yC4HhOk/A+CG1BLyhcheDqqS/klBM/Ai1I+CsEzYZbyVwiejYiU70Jw
I5ZJ+TEEN2GGlE9DcDNWSfk3BLdgppSvQ3Ar3FJ+D8FtmCblAxHcjsZS/hDB
HbhdyjciuBMFUn4SwV3Fn/+l+UwEd2OHlP9E8Byck/KlCO5RtPcq7u/DWbY/
fkX/A4rxBhXxCcHDxjOMT9j4R7CGna+oYn7B66EoDxKrnxhacXoryh/O6jPO
61nzNa//BKZwfimqu8f6K4kanB81X8v+JXmgUvmRSut9yfnNBKf5zQSn+c0E
p/nNBKf5zQSn+c0Ep/nNBKf5zQSn+c0Ep/nNBKf5zQSn+c0Ep/nNBKf5zQSn
+c0Ep/nNBKf5zQSn+c0Ep/nNBKf5zQSn+c0Ep/nNBKf5zQSn+c0Ep/nNBKf5
zQSn+c0Ep/nNBKf5zQSn+c3E3zS/WQkvl99MtKf5zUR7mt9MtI8XX8vpuVx+
M9Ge5jcT7Wl+M9Ge5jcT7Wl+M6TGL+czFJzmIxWc5iMVnOYjFZzmIxWc5iMV
nOYjFZzmIxWc5iMVnOYjFZzmIxWc5iMVnOYjFZzmIxWc5iMVnOYjFZzmIxWc
5iMVnOYjFZzmIxWc5iMVnOYjFZzmIxWc5iMVnOYjFZzmIxWc5iMVnOYjFZzm
IxWc5iMVnOYjFZzmIy3h5fKRivY0H6loT/ORivY0H6loT/ORivY0H6loT/OR
ivY0H6loT/KRDin1dYey+YdTXCfnK07xNDm/cYrrUb1sPuQUN2BH2fzJKZ4O
T9l8yymeAV/Z/MwpnomXyuZzTvFsfFM2/3OKG1GnbL7oFDehR9n80iluhrNs
PuoUtyBWNn91ilvhLJvvOsVtGFk2P3aK2xEtm087xR1YUjb/doo7MaNsvu4U
d+F02fzeKe4u3keUygee4jnYVjZ/eIp7FO29ivv7FP3xK/ofUIw3qIhPSBHP
MJJs/LXna3a+oor5Ba8H7bqC1U8Mr3B6o/nDU+3jvJ41X/P6T0DP+UXzdZL1
VxJVdIwfNV9L/tWJupoF0RlSvQDBdWgo1RcoraP7i1SPoLQ+Z75Uv0BwA/ZL
9Q4ET8cFqT6C4BloKtVTEDwTg6X6C4Jno7pUr0FwI2pJ9R0EN+FZqR6E4Obi
c+6l9SMEt2CsVG9CcCsiUn0KwW14QapnIbgdeVL9C8EdeFKqlyG4E2el+hqC
u3BNqschuBv7pfodgufgeaneh+AeRXuv4v4+nGP748dTbP8DivEGMZCNTwhg
4xnGe2z8I9jBzldUMb/g9aD5g9dPDMM4vWm+zmb1Gef1rPma138C5zi/aL7e
y/oriQzOj5qvJf8OKfV1t7L1fVJch2tl6wGleFrxOlKqflCK69G5bL2hFDdg
Ztn6RCmejkfK1jNK8QycKFv/KMUz8XPZekkpnn3jfZ+or5TiRlSuVqYeU4qb
0Khs/aYUN2N52XpPKW7BR2XrQ6W4FUfL1pNKcRu+K1t/KsXtWFu2XlWKO9C9
bH2rFHfimbL1sFLchTpl62eluBvVy9bbSvEcvFa2PleKexTtvdCz9/cp+uNX
9D+gGG8Qa9n4hPAHG88wZrLxj2AlO19RxfyC18MQKPQTwy5Ob9r1FKvPOK9n
zde8/hPoyvlF8/Vs1l9J/B/nR83Xkn/F/phy9TQFp/U0Baf1NAWn9TQFp/U0
Baf1NAWn9TQFp/U0Baf1NAWn9TQFp/U0Baf1NAWn9TQFp/U0Baf1NAWn9TQF
p/U0Baf1NAWn9TQFp/U0Baf1NAWn9TQFp/U0Baf1NAWn9TQFp/U0Baf1NAWn
9TQFp/U0Baf1NAWn9TQFp/U0S/gQWk9TtKf1NEV7Wk8zLl3L6XkIracp2tN6
mqI9racp2tN6mqI9qac5RLQn9a9TnNS/TnFS/zrFSf3rFCf1r1Oc1L9OcVL/
OsVJ/esUJ/WvU5zUv05xUv86xUn96xQn9a9TnNS/TnFS/zrFSf3rFCf1r1Oc
1L9OcVL/OsVJ/esUJ/WvU5zUv05xr+L+pP51ivsV/Q8oxhtUxCekiCepf53i
EcV8RRXzC14PQ0j961R7Uv861Z7Uv061j/N6HhJX6J/Uv061J/WvU+1J/etU
e1r/OlFyLYj2lerdC65DrP6j68/rfYSn4f3em3PyOrgJ12OdP3QiGHEQbkDA
5XJ5B7ciPB3Z37Td/8nTLQjPwLE1tadfbmYiPBMD/W1t9/RvTng2ukxdOq5b
JItwI/boDlZ8O78Z4Sa0mNLz4lM1Mgg3484jgwy2JY0It6BnzDti6faGhFvx
wGDdPwV33Ey4DV9N6D3yVL0GhNux442br9ZrZiDcUbxvc+aj9Ql34tWJCw+Y
99Qj3IXJmYvv8A6k3A1faHXHmyOU52D406uyP2xJuUfR3qu4vw+vsf3xK/of
UIw3iCVsfEJ4kI1nGL3Z+EdwNztfUcX8gteD5uuHWP3EMIjTm+brP1l9xnk9
a/7j9Z/ARs4vmq8nsv5Koi3nR83Xkn+HlPp65/fd7ZPfiBGuw+POzvZRs8KE
p2HB1neb7MjxE67HCfsM+8L3cwg34PMB4ep7JzoJT0fnCYtqXcyyE56BRNH3
RdhKeCaW5xaOySowE56Ns03dBwoDJsKN8GvxvFzRSLgJM7ftv3rNkU24GTu0
5yl9ar2x1NfbOoU9nSvcQrgVn+X/26xxzaaE22CtU2Pp3JebEG7HjBn7ltcP
NibcgVenz2q+ItmIcCd+q2SOLBydTrgLg7adbvtoHcrdcFs+r991Q0PCtfko
TF96fgHlmq/Z9l7F/X04wPbHr+h/QDHeIOxsfEJYwMYzjJ1s/CPF5xTKz1dU
Mb/g9aD5mtdPDCs4vWm+bsfqM87rWfM1r/8E/ub8ol0Xs/5Koh/nR83Xkn91
In9KQbT2h8vyfn+wDeE6eKK3dXzMEyc8Db3GrruY54sSrseye/tNnfxXgHAD
5uyuUfhcVy/h6birwdCx1x5zE56Br5+641vHBQfhmfht1TFD90OtCc/GwL31
zm1420q4Eb6ZdZZf39SCcBPQbVXr34feRrgZe8bV866ZcyvhFlzqtbX79qZG
wq3oqcWh78Fswm1o0+nIxLcPZBFu13TYbkLfOpQ74B92qHvTAZmEO5EzbsaV
L8/dQrgL8zWdPNKBcjcC3XpYD51pRngO/jv95f6a2yj3IMK29yru74OX7Y9f
0f+AYrxB3M7GJ6SIZxhX2PhH8Cs7X1HF/ILXg+brV1n9xHCA05vm62WsPuO8
njVf8/pPYDnnF82vj7P+SiLA+VHzteTfVF4ksT/gTsJ1yEo8/fH1Lm0JT0Od
O1ttu9wuQbge4xt1aLp0FQg34MzU8Jh8f5jwG5/76xb7Cc+A5aXmXc6v8hCe
iQ1VX39tcDs34dmwVW/9+uiwk3AjRvYdPXvXO3bCSz6XkzbCzbCmVR31dn5L
wi2Yb8ttdbSChXArRlinNPL0NxNuQ8/cM74vTLcRfqMflbNIHUTN1x2fmHZ3
rc63Eu5E3WbJD4euMhLuwvIH7rtjTUfK3eg6+pRupIHy0nxvMvco2nsV9/cp
+uNX9D+gGG8Qfdj4hBTxDCviH0Frdr5K/FBufsHrQfO1g9VPDBs5vWm+bsXq
M158Ladnzde8/hOYwPmlaB8p668kTJwfU//9Tvw/W7BKsw==
     "]]}, 
   {Hue[0.37820393249936846`, 0.6, 0.6], Point3DBox[CompressedData["
1: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
wQpOb5qv01l9Rnk9a77m9R9Ddc4vmq9fY/0Vx9OcHzVfy/4V7/3yw6MfeeDU
JqeFcB2yO5a+VfyrhwhPwZsT1x9+9wk94Xpsco//o97PxQlPxZvzCv6Jzz3B
0/DAuz32/HfRH4Qb8OORrJOpzsuEG/HTzh6fN7lxnnATJs22Tmp56gzhZtyu
XKVFg9s/Ep6Omd1LZUdX/EC4BS36Vv92iOUk4drv8N5vzqvU4HvCM7B7R2yK
4dXvCLehStV3nqpXjXI7utxsVapm3gnCHZh9Lz6UO7FybPNzrYdT7sKGyucy
Fnej3I2LQ4JnVrajPBOdbvy15mhryj2K9l5F/z7FePyK8Wcp5htQxCdbEU/t
dzgb/5BivcKK9QWvB83Xk1n9RHCF05vm6/OsPqO8njVf8/qPYTvnF83Xi1h/
xdGE86Pma9m/4jl9fthWa0LlumVqEa7DrJF3+qX8WYnwFIyODL8VmVaScD0e
OfJ1rM80MX7BC3z9wVOp5nzC03Dno56fFq99kXADdpxrO/vm/NOEG3G1Z8Xh
Byt/T7gJLxTf/+rEeccJN+OZame/rfnaN4Sn46W8v9Kfe+Io4RbM2D/miydn
HSHcimENPOfj1SjPwKT6D36w5MuvCbehxtMbf+owm3I7Kj3wx9JPB1Gu/Q73
LJ70S0fKnXg/Nmpn5Ucpd+HA0Ko4H6Pcjbrel3dcCFGu3V//34bTjwUp9yja
exX9+xTj8SvGn6WYb0ARn2xFPIOK+Icwk12vsGJ9wetB8/UIVj8R3OT0pvl6
N6vPKK/ne77m9B+Di/OL5uvxrL/iWMr5UfO17F/xHC4/PPW1zn9X/l8a4To0
qVH6wboNyxKegryCF4oHxO+Nwv2AV/w//zBrbD7hqXj6k6s9DN3PE56GS5Mv
NTLs/J5wA65fHzrKeuso4Ua81Xi1+dKzXxFuAn4c1KDCbwcJN6PdxDtfZH16
gPB0bHmz575j4/YTbsGr5+52vbh3H+FWLBjS6blTbSjPwJcHDjw/oCzlNsRe
1d8Zf/JLwu3QN7swsP4uyh2YN3fTg4PWUu7Emt2ZW9cuotyFOfc+/yl3w/rE
hionZlOeiZMvjCu5bhblHkV7r6J/n2I8fsX4sxTzDSjik62IZ1AR/xAmsesV
VqwveD1ovo6y+olgEac3zde3WX1GeT1rvub1H8OfnF80Xx9j/RXHk5wfNV/L
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
diV/nwruRjfp+1fwTByXvq8F9yjaexX9+xTj8SvGn6WYb0ARn2xFPIOK+IcU
6xVWrC94PRSc+2D1E8ElTm+ar0+x+ozyetZ8zes/hp84v2i+rs/6K44anB+L
fF+L/eP0/lpwen9dmKdqqPT7X3A92kj3C4X5J56V7i8Kz6Mfk+5HBDfgonT/
IrgRfaX7ncLzLlHp/qhwX/z30v2U4OkoYU++/xLcgh+l+zXBragi3d8JnoER
0v2g4DZsk+4fBbcjW7rfFNwBl3R/KrgTXaT7WcFdOCvd/wruxmbpflnwTFSR
7q8F9yjaexX9+xTj8SvGn6WYb0ARn2xFPIOK+IcU6xVWrC94PRSc02T1E8EA
Tm+ar39n9Rnl9az5mtd/DN04vxS5vxbt6f21aE/vr8W5T/o8XHDN19LzN8FT
8LL0vE5wPYZLz/cET8UP0vNAwdPQQnp+KLgBK6TnjYXnUw3S80nBTWgmPc8U
3AyT9PxT8HRMkZ6XCm5BnvR8VXArXpGexwqegZQbyc9vBbfhhPS8V3A7zkrP
hwV3oIP0PFlwJ16Snj8L7sJq6Xm14G78Ij3fFjwTe6Xn4YJ7FO29iv59ivH4
FePPUsw3oIhPtiKeQUX8Q4r1CivWF7weNF83Z/UTQS1Ob5qv17L6jPJ61nzN
6z+GXM4vmq8nsf6KYyLnxyLPw8X5D/r+WnAdzkjvywrzRx6R3q8Jrgek93GC
p6KF9P5O8DTkS+/7BDfgkvR+UHAjFkvvEwU34Tfp/aPgZqyV3lcWnlf7Tnq/
WXgOZpX0PlRwK0ZI708Fz8Aa6X2r4DaMlN7PCm6HS3qfK7gD1aT3v4I7cUR6
Xyy4C42k98uCu3FZeh8teCaK/1/y+2vBPYr2XkX/PsV4/IrxZynmG1DEJ1sR
z6Ai/iHFeoUV6wteD5qvef1EsIzTm+brq6w+o7yeNV/z+o/hUc4vmq9/ZP0V
x3XOj0XeX4vnGnS/WeJ5B9lvJjjdb1aY91HebyY43W8mON1vJjjdbyY43W8m
ON1vJjjdbyY43W8mON1vJjjdbyY43W8mON1vJjjdbyY43W8mON1vJjjdbyY4
3W8mON1vJjjdbyY43W8mON1vJjjdbyY43W8mON1vJjjdbyY43W8mON1vJjjd
byY43W92nxfZbyba0/1moj3dbybaRwuuRfVcZL+ZaE/3m4n2dL+ZaE/3m4n2
dL+ZyLeUH14g7S8VXIcW0n7UwrzO8v5VwfW4Ku13FTwVvaT9sYKnaZ97yftp
C/M/yftvBTdiqbRfV3ATmkr7ewU3o5O0H1jwdHwo7R8W3ILXpP3GgluxRNqf
LHgGDkn7mQW3oZm0/1lwO6pI+6UFd+BtaX+14E5slPZjC+7CAmn/tuBu2KX9
3oJn4qy0P1xwj6K9V9G/TzEev2L8WYr5BhTxyVbEM6iIfwgz2PUKK9YXvB40
Xzdj9RPBCk5vmq+L3eD0GeX1rPma138MNzm/aL4+xforjhzOj5qvZf9m37/m
hxtI50EE12G+dH5E8BRy3kRwPTmfIngqFknnWQRPQ4mdyedfBDeQ8zKCG/G3
dL5GcBNGS+dxBDejj3R+R/B0TJDO+whuwRzpfJDgVrwonScSPAPTpfNHgttQ
WzqvJLgdVaXzTYI70FU6DyW4E9uk81OCu3BYOm8luBuPSOezBM/EEOk8l+Ae
RXuvon+fYjx+xfizFPMNKOKTrYhnUBH/EOay6xVWrC94PWi+HsPqJ4K7nN40
X+9l9Rnl9az5mtd/DCHOL5qvJ7P+oue5RPs4ZP8G71/zw5Ol85uC6xCXznsK
noJl0vlQwfXYLZ0nFTwVa6Xzp4KnIU06ryq4Ab9J51sFN+K6dB5WcBNel87P
Cm7GA1WSz9sKno4l0vlcwS1oL53nFdyK0dL5X8EzkCedFxbchlrS+WLB7egj
nUcW3KGte/L5ZcGd2CSddxbche3S+WjB3bgqnacWPBM9pfPXgnsU7b2K/n2K
8fgV489SzDcAExufbBxk4xlUxD+EDux6hRXrC14Pmq9ns/qJ4CanN83XN1h9
Rnk9a77m9R/D55xfNF+/w/orjic4P2q+lv0bun/NDz8m5VsQXIdeUn4GwVMw
V8rnILge6VL+B8FToZfyRQiehvJpyfklBDcgQ8pHIbgR70j5KwTXvq+lfBeC
m/GGlB9D8HTskfJpCG7BaSn/huBWvCXl6xA8A82k/B6C25Al5QMR3I4npPwh
gjvwkJRvRHAnlkr5SQR3wSflMxHcjS5S/hPBM7FOypciuEfR3qvo34dl7Hj8
ivFnKeYbUMQnGy3YeAaxkI1/CGfZ9Qor1he8HjRfv8zqJ4KNnN40X7tZfUZ5
PWu+5vUfg4Pzi+brhay/4ujP+VHztexfOQ9UYX6kwjpscn6zwvpIcn6zwroo
cn4zwWl+s+S86cn5oASn+c0Ep/nNBKf5zQSn+c0Ep/nNBKf5zQSn+c0Ep/nN
BKf5zQSn+c0Ep/nNBKf5zQSn+c0Ep/nNBKf5zQSn+c0Ep/nNBKf5zQSn+c0E
p/nNBKf5zQSn+c0Ep/nNBKf5zQSn+c3E3zS/2X1eJL+ZaE/zm4n2NL+ZaB8F
q+ci+c1Ee5rfTLSn+c1Ee5rfTLSn+c2QmL+cz1Bwmo9UcJqPVHCaj1Rwmo9U
cJqPVHCaj1Rwmo9UcJqPVHCaj1Rwmo9UcJqPVHCaj1Rwmo9UcJqPVHCaj1Rw
mo9UcJqPVHCaj1Rwmo9UcJqPVHCaj1Rwmo9UcJqPVHCaj1Rwmo9UcJqPVHCa
j1Rwmo9UcJqPVHCaj1Rwmo/0Pi+Sj1S0p/lIRXuaj1S0p/lIRXuaj1S0p/lI
RXuaj1S0p/lIRXuSjzS30NeB5PzDCa6T8xUneIqc3zjB9fg6OR9ygqeiXXL+
5ARPgy8533KCG6BPzs+c4Ea0T87nnOAmrE3O/5zgZlRKzhed4Om4nZxfOsEt
MCfno05wK1ok569O8AycT853neA2uJPzYye4HYuT82knuAPx5PzbCe7EgOR8
3QnuQqXk/N4J7sbJ5HzgCZ6JOsn5wxPco2jvVfTvU4zHrxh/lmK+AUV8shXx
DOIxNv4hpLPrFVasL3g9aNf1rH4i6MTpjeYPT7SP8nrWfM3rP4aznF80X5dl
/RXHs5wfNV9L/tWJ/OL54dtSvYDCOsa/S/UFBE/BTqkegbjqUVmqXyB4KlxS
vQPB0zBKqo8guAFLpXoKhXUPNkr1Fwrzo7eQ6jUIbsYlqb6D4OloL9WDENyC
o1L9CMGt0HVKrjcheAa+kepTCG7DL1I9C8HteEiqfyG4A2WlehmCOzFKqq8h
uAuXpHocgrsxQarfIXgmykn1PgT3KNp7Ff37MJodjx/l2PFnKeYbUMQnG8fZ
eAZRgo1/CCfY9Qor1he8HjR/8PqJYAenN83Xq1h9Rnk9a77m9R+DgfOL5utP
WH/FcZvzo+Zryb+5hb6enlzfJ8F1sCTXA0rwFDydXD8owfW4nFxvKMFT4U+u
T5Tgafg5uZ5RghvQObn+UYIbEUyul5TgJnRMrq+U4GZsT67HlODp+C65flOC
WzAmud5TgltxJLk+VIJnoEVyPakEt2FMcv2pBLfj1+R6VQnuwLjk+lYJ7kSl
5HpYCe5CjeT6WQnuxvrkelsJnonlyfW5EtyjaO+Fke3fpxiPXzH+LMV8AxjH
xicbLdl4BnGcjX8I49j1CivWF7weNF/z+okgwulNu/Zi9Rnl9az5mtd/DH9w
ftF83Zf1Vxz1OT9qvpb8++/+GF3RepqC03qagtN6moLTepqC03qagtN6moLT
epqC03qagtN6moLTepqC03qagtN6moLTepqC03qagtN6moLTepqC03qagtN6
moLTepqC03qagtN6moLTepqC03qagtN6moLTepqC03qagtN6moLTepqC03qa
gtN6moLTepqC03qa93kuracp2tN6mqI9racZTb4W1XMuracp2tN6mqI9racp
2tN6mqI9qaeZK9qT+tcJTupfJzipf53gpP51gpP61wlO6l8nOKl/neCk/nWC
k/rXCU7qXyc4qX+d4KT+dYKT+tcJTupfJzipf53gpP51gpP61wlO6l8nOKl/
neCk/nWCk/rXCU7qXye4V9E/qX+d4H7F+LMU8w0o4pOtiCepf53gIcV6hRXr
C14PuaT+daI9qX+daE/qXyfaR3k950YV+if1rxPtSf3rRHtS/zrRnta/FvU5
88OlpXr3guswNK9n+9n2QYSnoGerpde2X+tNuB75VnNevz3dCU/FoIvpu+2T
OxKehsdKD54endGWcAMWpvjf7tCyFeFGvBfb3uZy6yaEm7B9787OfVvGCDfj
Ixx9uUb7MOHpqHLjYqPfSmYRbsE7Iz4v16eqh3AryjQss/HTei7CM9DsdNVV
kZt2wm34wLN3w9zlNsLteKSpUxdukEG4Q/udf3hW2S5Wwp1YPCaQe0Ffj3Bt
HJ0bns52WAh34+e5Ex0jN9YlPBPftyv9Yv8JlHsU7b2K/n1Yxo7Hrxh/lmK+
Aexk46P9DmfjGcSDbPxD2MCuV1ixvuD1oPl6D6ufCD7k9Kb5ehmrzyivZ81/
vP5j+JvzS8HzcNZfcYzi/Kj5WvJvbqGvLTWPLxvgHku4DqNWv9Jsz+QXCU/B
s3l5to43BhOux/yUX5rWaPY84alY++rGWsP29SA8DbnZBm+ZF3IINyDYzm5d
/fhThBvh6Dmi++VjjxNuwt1Nne8+t6kV4WZ8f2Dd5r3HmhKejhrjd/3zXG5D
wi3Ich3NnR2LEm7FN0t9Ix5dHSY8A9U3fxxceztAuA0bDkx+6HCmn3A7qsT6
P1+nppdwBy7bF9nXzcwk3ImK7vEDNwx1E+7CgN9XLfpqs4twNw7bX/+zbmPK
M5HTqEPvOybKPTjGtvcq+vchlR2PXzH+LMV8A9jCxicbtdh4BvEDG/8QQux6
hRXrC14Pmq95/UTg5vSm+bohq88or2fN17z+Y1jK+aXg/pr1VxzjOT9qvpb8
qxP5U/LDlfS95raaMoVwHa5eaBmf/OU4wlPQfkRWq1avjyZcj1X9aucZdw0j
PBWHXi71wD/mgYSnYcK0EZFNvj6EG5BWfI810PUZwo3YtOPLJvZqOYRrvh5T
dlP+xacIN+PIoAzH2Kx2hKfj/N5GQ5w7WhNuwZr5pUZ+bW9JuBXHG9R2fuFo
RngGan6+vcykuo0Jt6FPQ0uvacfjhNux4pcWrY5XjRHuwPX9E2c9sS9CuBP7
29a+tfMECHfBEpnZ+Akv5W7s2nalzt1NYcIzMWZxTqf5Qyn3YC/b3qvo34c8
djx+xfizFPMNoD8bn2xFPIM4ycY/hI3seoUV6wteD5qvy+Ry+ongfU5vmq9r
sPqM8nrWfM3rP4Y1nF80v+aw/orjH86Pmq8l/ybyIt3fZ2CZTbgOhnCbYmmR
6YSnYHbNn1vOazmRcD0+LHno7EMzXyI8FTP3LYj2/mok4WnQGV8Y9szOIYQb
YGz+YxNrkwGEGzGzRIWN4270JtyEOn/eqNe3XA/CzShz7vSxjh26EX7v+Wau
3tiZcAtOYkH2yDPtCbdierTqigpL2xGegcEbNmw/kP444TbU+j497UC4NeEF
vy9fMlaY34pwB5rPfahM6YGPEu6E8922phs/NifchVVXZiyceLgZ4W6cDR7p
0M9FuciPRblH0d6r6N+nGI9fMf4sxXwDSGfjk62IZ1AR/xDOsOt173OKWV/w
etB8ncHqJ4LZnN40X9dh9Rnl9az5mtd/DDs5v2i+fpv1VxxWzo/iqvn3/wH3
GIQd
     "]]}},
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  PlotRange->{{1., 41.}, {1., 41.}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}}]], "Output",
 CellChangeTimes->{3.603163090002328*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 6.", "Subtitle",
 CellChangeTimes->{{3.603142959192581*^9, 3.6031429622810373`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "/", "2"}], ",", 
      RowBox[{"1", "/", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ",", 
      RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"MatrixPower", "[", 
     RowBox[{"A", ",", "n"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "6"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.603142957387933*^9, 3.603142957390444*^9}, {
  3.6031430053040323`*^9, 3.6031430084774427`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6031429648878927`*^9, {3.603143008779284*^9, 3.6031430125328503`*^9}, 
   3.603143993908379*^9, 3.603144554499723*^9, 3.603161573848337*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["3", "2"], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "1"},
       {
        RowBox[{"-", "1"}], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["5", "2"], 
        FractionBox["3", "2"]},
       {
        RowBox[{"-", 
         FractionBox["3", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "2"},
       {
        RowBox[{"-", "2"}], 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["7", "2"], 
        FractionBox["5", "2"]},
       {
        RowBox[{"-", 
         FractionBox["5", "2"]}], 
        RowBox[{"-", 
         FractionBox["3", "2"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "3"},
       {
        RowBox[{"-", "3"}], 
        RowBox[{"-", "2"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6031429648878927`*^9, {3.603143008779284*^9, 3.6031430125328503`*^9}, 
   3.603143993908379*^9, 3.603144554499723*^9, 3.60316157385172*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"n", "/", "2"}], "+", "1"}], ",", 
        RowBox[{"n", "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "n"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "n"}], "/", "2"}], "+", "1"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "6"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.603142994350706*^9, 3.603143030654043*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["3", "2"], 
        FractionBox["1", "2"]},
       {
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "1"},
       {
        RowBox[{"-", "1"}], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["5", "2"], 
        FractionBox["3", "2"]},
       {
        RowBox[{"-", 
         FractionBox["3", "2"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "2"},
       {
        RowBox[{"-", "2"}], 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["7", "2"], 
        FractionBox["5", "2"]},
       {
        RowBox[{"-", 
         FractionBox["5", "2"]}], 
        RowBox[{"-", 
         FractionBox["3", "2"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "3"},
       {
        RowBox[{"-", "3"}], 
        RowBox[{"-", "2"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.603142996403192*^9, {3.603143027877421*^9, 3.603143030968048*^9}, 
   3.603143993965308*^9, 3.603144554553838*^9, 3.6031615739012814`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 7.", "Subtitle",
 CellChangeTimes->{{3.603143052589478*^9, 3.603143054035231*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"(", GridBox[{
      {"2", 
       RowBox[{"-", "1"}], "0"},
      {
       RowBox[{"-", "1"}], "2", 
       RowBox[{"-", "1"}]},
      {"0", 
       RowBox[{"-", "1"}], 
       RowBox[{"-", "2"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellChangeTimes->{{3.601776077215974*^9, 3.6017761337799673`*^9}, {
   3.6017776752944736`*^9, 3.6017776833363943`*^9}, 3.603163125488748*^9, {
   3.603163217209282*^9, 3.603163251218254*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", 
      RowBox[{"-", "1"}], "0"},
     {
      RowBox[{"-", "1"}], "2", 
      RowBox[{"-", "1"}]},
     {"0", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.603163218961629*^9, 3.6031632516775427`*^9}, 
   3.603165460043338*^9}]
}, Open  ]],

Cell["\<\
Define a matrix of unknowns B. Any undefined symbol will work as an unknown, \
here I am using some fancy formatting.\
\>", "Text",
 CellChangeTimes->{{3.6031631305561733`*^9, 3.603163151317545*^9}, {
  3.603163214539747*^9, 3.603163222863036*^9}, {3.603163256528304*^9, 
  3.6031633109547653`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["b", "##"], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "B", "]"}]}], "Input",
 CellChangeTimes->{{3.601776077215974*^9, 3.6017761337799673`*^9}, {
   3.6017776752944736`*^9, 3.6017776833363943`*^9}, 3.603163125488748*^9, {
   3.603163217209282*^9, 3.6031632486478567`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["b", 
       RowBox[{"1", ",", "1"}]], 
      SubscriptBox["b", 
       RowBox[{"1", ",", "2"}]], 
      SubscriptBox["b", 
       RowBox[{"1", ",", "3"}]]},
     {
      SubscriptBox["b", 
       RowBox[{"2", ",", "1"}]], 
      SubscriptBox["b", 
       RowBox[{"2", ",", "2"}]], 
      SubscriptBox["b", 
       RowBox[{"2", ",", "3"}]]},
     {
      SubscriptBox["b", 
       RowBox[{"3", ",", "1"}]], 
      SubscriptBox["b", 
       RowBox[{"3", ",", "2"}]], 
      SubscriptBox["b", 
       RowBox[{"3", ",", "3"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6031631269589033`*^9, {3.603163234543339*^9, 3.603163249074635*^9}, 
   3.603163313186514*^9, 3.6031654620670547`*^9}]
}, Open  ]],

Cell["\<\
I want to show that for each B that commutes with A I can find \[Alpha], \
\[Beta] and \[Gamma] such that B == \[Alpha] A.A + \[Beta] A + \[Gamma] \
IdentityMatrix[3]\
\>", "Text",
 CellChangeTimes->{{3.6031653162959948`*^9, 3.6031653889590807`*^9}}],

Cell["\<\
Use the commutation relation to reduce the number of unknowns in B\
\>", "Text",
 CellChangeTimes->{{3.603165508885106*^9, 3.603165537015605*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"B", "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"A", ".", "B"}], "-", 
      RowBox[{"B", ".", "A"}]}], "\[Equal]", "0"}], "]"}]}], "//", 
  "First"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.603165452218359*^9, 3.603165488940361*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SubscriptBox["b", 
        RowBox[{"3", ",", "2"}]]}], "+", 
      SubscriptBox["b", 
       RowBox[{"3", ",", "3"}]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SubscriptBox["b", 
        RowBox[{"3", ",", "1"}]]}], "+", 
      SubscriptBox["b", 
       RowBox[{"3", ",", "2"}]]}], ",", 
     SubscriptBox["b", 
      RowBox[{"3", ",", "1"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SubscriptBox["b", 
        RowBox[{"3", ",", "1"}]]}], "+", 
      SubscriptBox["b", 
       RowBox[{"3", ",", "2"}]]}], ",", 
     RowBox[{
      SubscriptBox["b", 
       RowBox[{"3", ",", "1"}]], "-", 
      RowBox[{"4", " ", 
       SubscriptBox["b", 
        RowBox[{"3", ",", "2"}]]}], "+", 
      SubscriptBox["b", 
       RowBox[{"3", ",", "3"}]]}], ",", 
     SubscriptBox["b", 
      RowBox[{"3", ",", "2"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["b", 
      RowBox[{"3", ",", "1"}]], ",", 
     SubscriptBox["b", 
      RowBox[{"3", ",", "2"}]], ",", 
     SubscriptBox["b", 
      RowBox[{"3", ",", "3"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6031654551533737`*^9, 3.6031655003232403`*^9}, 
   3.6031655380475388`*^9, {3.6031655837923727`*^9, 3.603165595598496*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SubscriptBox["b", 
         RowBox[{"3", ",", "2"}]]}], "+", 
       SubscriptBox["b", 
        RowBox[{"3", ",", "3"}]]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SubscriptBox["b", 
         RowBox[{"3", ",", "1"}]]}], "+", 
       SubscriptBox["b", 
        RowBox[{"3", ",", "2"}]]}], 
      SubscriptBox["b", 
       RowBox[{"3", ",", "1"}]]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SubscriptBox["b", 
         RowBox[{"3", ",", "1"}]]}], "+", 
       SubscriptBox["b", 
        RowBox[{"3", ",", "2"}]]}], 
      RowBox[{
       SubscriptBox["b", 
        RowBox[{"3", ",", "1"}]], "-", 
       RowBox[{"4", " ", 
        SubscriptBox["b", 
         RowBox[{"3", ",", "2"}]]}], "+", 
       SubscriptBox["b", 
        RowBox[{"3", ",", "3"}]]}], 
      SubscriptBox["b", 
       RowBox[{"3", ",", "2"}]]},
     {
      SubscriptBox["b", 
       RowBox[{"3", ",", "1"}]], 
      SubscriptBox["b", 
       RowBox[{"3", ",", "2"}]], 
      SubscriptBox["b", 
       RowBox[{"3", ",", "3"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6031654551533737`*^9, 3.6031655003232403`*^9}, 
   3.6031655380475388`*^9, {3.6031655837923727`*^9, 3.6031655956027737`*^9}}]
}, Open  ]],

Cell["Find \[Alpha], \[Beta] and \[Gamma]", "Text",
 CellChangeTimes->{{3.603165565625585*^9, 3.6031655849013853`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"%", "==", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"A", ".", "A"}]}], "+", 
      RowBox[{"\[Beta]", " ", "A"}], "+", 
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "}"}]}], "]"}], "//",
   "First"}]], "Input",
 CellChangeTimes->{{3.603143315998904*^9, 3.603143348039463*^9}, 
   3.603165450142845*^9, {3.60316558949752*^9, 3.6031655919602203`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Alpha]", "\[Rule]", 
    SubscriptBox["b", 
     RowBox[{"3", ",", "1"}]]}], ",", 
   RowBox[{"\[Beta]", "\[Rule]", 
    RowBox[{"-", 
     SubscriptBox["b", 
      RowBox[{"3", ",", "2"}]]}]}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "5"}], " ", 
      SubscriptBox["b", 
       RowBox[{"3", ",", "1"}]]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["b", 
       RowBox[{"3", ",", "2"}]]}], "+", 
     SubscriptBox["b", 
      RowBox[{"3", ",", "3"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.603143316350013*^9, 3.603143348814225*^9}, 
   3.603143994081729*^9, 3.60314455467015*^9, 3.603161574033092*^9, {
   3.60316549454351*^9, 3.603165500986677*^9}, 3.603165551514037*^9, {
   3.603165586167005*^9, 3.603165597506915*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 8.", "Subtitle",
 CellChangeTimes->{{3.6031434378216743`*^9, 3.603143442654736*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "[", "n_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Fibonacci", "[", 
      RowBox[{"n", "-", "k"}], "]"}], 
     SuperscriptBox["10", "k"]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6031434453289623`*^9, 3.603143504998269*^9}, 
   3.603143544433992*^9, {3.603143888263571*^9, 3.603143888383338*^9}, {
   3.603143999426062*^9, 3.6031440028100433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"A", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6031434840645323`*^9, 3.603143509498993*^9}, {
  3.603143548064973*^9, 3.603143548344977*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "11", ",", "112", ",", "1123", ",", "11235", ",", "112358", ",", 
   "1123593", ",", "11235951", ",", "112359544", ",", "1123595495"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.603143485385148*^9, 3.6031435097622147`*^9}, {
   3.6031435453955936`*^9, 3.603143548631629*^9}, 3.6031438901002913`*^9, {
   3.603143994215116*^9, 3.603144014915906*^9}, 3.603144554747704*^9, 
   3.603161574143921*^9, 3.6031656037841387`*^9}]
}, Open  ]],

Cell["We can find a closed formula using Binet' s formula", "Text",
 CellChangeTimes->{{3.60316561739347*^9, 3.603165622778295*^9}, {
  3.603165771803084*^9, 3.6031657814530287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]", "=", 
   FractionBox[
    RowBox[{"1", "+", 
     SqrtBox["5"]}], "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Phi]", 
        RowBox[{"n", "-", "k"}]], "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "\[Phi]"}], ")"}], 
        RowBox[{
         RowBox[{"-", "n"}], "+", "k"}]]}], 
      SqrtBox["5"]], 
     SuperscriptBox["10", "k"]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.603144057715851*^9, 3.6031441242855473`*^9}, {
  3.6031658073835497`*^9, 3.603165807845448*^9}, {3.603165879074263*^9, 
  3.6031659357704163`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SqrtBox["5"]}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "-", "n"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SqrtBox["5"]}], ")"}], "n"], " ", 
      RowBox[{"(", 
       RowBox[{"31", "+", 
        RowBox[{"11", " ", 
         SqrtBox["5"]}]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["2", "n"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "19"}], "+", 
        SqrtBox["5"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["5", 
          RowBox[{"1", "+", "n"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            SqrtBox["5"]}], ")"}], "n"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "+", 
           SqrtBox["5"]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"89", " ", 
   SqrtBox["5"]}]]], "Output",
 CellChangeTimes->{{3.6031440898920097`*^9, 3.603144125372868*^9}, 
   3.603144558610344*^9, 3.603161578169847*^9, 3.603165827795649*^9, {
   3.603165881944521*^9, 3.603165889910469*^9}, {3.603165926868248*^9, 
   3.603165938631604*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "11", ",", "112", ",", "1123", ",", "11235", ",", "112358", ",", 
   "1123593", ",", "11235951", ",", "112359544", ",", "1123595495"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6031440898920097`*^9, 3.603144125372868*^9}, 
   3.603144558610344*^9, 3.603161578169847*^9, 3.603165827795649*^9, {
   3.603165881944521*^9, 3.603165889910469*^9}, {3.603165926868248*^9, 
   3.6031659386351624`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 9.", "Subtitle",
 CellChangeTimes->{{3.603143978808962*^9, 3.603143982500607*^9}}],

Cell["If you understand this you are a Mathematica wizard", "Text",
 CellChangeTimes->{{3.6031659874839478`*^9, 3.603166005579524*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "t", ",", "\[ScriptCapitalI]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{
    RowBox[{"a", ">", "0"}], "&&", 
    RowBox[{"t", ">", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalI]", "[", 
   RowBox[{"a_", ",", "t_"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "t"}], "\[Infinity]"], 
     RowBox[{
      FractionBox[
       SuperscriptBox["a", "x"], 
       RowBox[{"Gamma", "[", 
        RowBox[{"x", "+", "1"}], "]"}]], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["E", 
         RowBox[{
          RowBox[{"-", "a"}], " ", "x"}]], 
        SuperscriptBox["x", 
         RowBox[{"t", "-", "1"}]]}], 
       RowBox[{
        SuperscriptBox["\[Pi]", "2"], "+", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", " ", "t"}], "]"}], "-", 
        RowBox[{
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Pi]", " ", "t"}], "]"}], "\[Pi]"], 
         RowBox[{"Log", "[", "x", "]"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], "//", "Hold"}]}]}], "Input",
 CellChangeTimes->{{3.601842005717989*^9, 3.601842241280408*^9}, {
  3.601842443093459*^9, 3.601842455890623*^9}, {3.601843034437684*^9, 
  3.601843053644033*^9}, {3.601843184619521*^9, 3.601843187146452*^9}, {
  3.601843249842391*^9, 3.601843262007092*^9}, {3.601843298895026*^9, 
  3.601843299815996*^9}, {3.601843541257419*^9, 3.601843622636879*^9}, {
  3.601843656147135*^9, 3.601843677155212*^9}, {3.6018438428289213`*^9, 
  3.601843843474914*^9}, {3.601843921633274*^9, 3.6018439377845917`*^9}, {
  3.601843989685354*^9, 3.6018440104794407`*^9}, {3.601844122451785*^9, 
  3.6018441285569344`*^9}, {3.601846459159409*^9, 3.6018465321335278`*^9}, {
  3.603144228066537*^9, 3.603144237369815*^9}, {3.603165952283098*^9, 
  3.6031659536000433`*^9}}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "t"}], "\[Infinity]"], 
    RowBox[{
     FractionBox[
      SuperscriptBox["a", "x"], 
      RowBox[{"Gamma", "[", 
       RowBox[{"x", "+", "1"}], "]"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "a"}], " ", "x"}]], " ", 
         SuperscriptBox["x", 
          RowBox[{"t", "-", "1"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Pi]", " ", "t"}], "]"}], "-", 
         FractionBox[
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Pi]", " ", "t"}], "]"}], " ", 
           RowBox[{"Log", "[", "x", "]"}]}], "\[Pi]"]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.601844116037999*^9, 3.601844129039978*^9}, 
   3.6018441697952747`*^9, {3.6018443843025513`*^9, 3.601844385903213*^9}, 
   3.601845997912794*^9, {3.601846461104679*^9, 3.601846497059165*^9}, {
   3.601846527986328*^9, 3.6018465338088427`*^9}, 3.601846695663041*^9, 
   3.6018540933940897`*^9, 3.603143997050811*^9, {3.6031442291322517`*^9, 
   3.6031442481182117`*^9}, 3.6031444265662527`*^9, 3.6031445590172167`*^9, 
   3.603161578597814*^9, 3.603165955662891*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "Integrate", "}"}], ",", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[ScriptCapitalI]", "[", 
       RowBox[{"a", ",", "t"}], "]"}], ",", "t"}], "]"}], "//", 
    "ReleaseHold"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.601858208879999*^9, 3.6018582244652033`*^9}, {
  3.603144240236264*^9, 3.603144245778461*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["a", 
    RowBox[{"-", "t"}]], 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", "t"}], "]"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", 
     RowBox[{"-", "t"}]], " ", 
    RowBox[{"Gamma", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "t"}], "]"}]}], "\[Pi]"]}]], "Output",
 CellChangeTimes->{{3.601858211392673*^9, 3.601858226960725*^9}, 
   3.60314399992239*^9, 3.6031442513649597`*^9, {3.603144403370555*^9, 
   3.603144430475689*^9}, 3.603144461898623*^9, 3.603144561147616*^9, 
   3.603161580894412*^9, 3.603165959712821*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{
  3.601844362124351*^9, {3.601844396256668*^9, 3.6018444588698874`*^9}, {
   3.601844530974347*^9, 3.601844570052084*^9}, {3.6018454161856422`*^9, 
   3.601845440217663*^9}, {3.601845964517128*^9, 3.601845991066381*^9}, {
   3.601846025789228*^9, 3.6018460281118383`*^9}, {3.601846209887083*^9, 
   3.601846304718543*^9}, {3.601846598878293*^9, 3.601846604066235*^9}, {
   3.601858514345278*^9, 3.601858521520533*^9}, {3.603144400249234*^9, 
   3.603144459089999*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.603144421066313*^9, 3.603144462849813*^9}, 
   3.603144561451498*^9, 3.603161581140389*^9, 3.603165962004465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "Integrate", "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[ScriptCapitalI]", "[", 
       RowBox[{"a", ",", "0"}], "]"}], "//", "ReleaseHold"}], "//", 
     "Evaluate"}], "//", "Hold"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.601845474906228*^9, 3.601845490362575*^9}, {
  3.6018455207072372`*^9, 3.601845655457076*^9}, {3.601845718735948*^9, 
  3.601845724128415*^9}, {3.6018457650387163`*^9, 3.601845765564578*^9}, {
  3.601845833739139*^9, 3.601845866263054*^9}, {3.601847998935848*^9, 
  3.601848009980111*^9}, {3.601848049915392*^9, 3.601848050227264*^9}, {
  3.6018480858426743`*^9, 3.6018481105140343`*^9}, {3.601852376725792*^9, 
  3.601852379824839*^9}, {3.601852511795422*^9, 3.601852567632225*^9}, {
  3.601852782387455*^9, 3.601852788923278*^9}, {3.60314447316092*^9, 
  3.603144489337009*^9}}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      SuperscriptBox["a", "x"], 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "x"}], "]"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "a"}], " ", "x"}]], 
      RowBox[{"x", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Pi]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"Log", "[", "x", "]"}], "2"]}], ")"}]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.603144474844606*^9, 3.603144494977154*^9}, 
   3.603144561510448*^9, 3.6031615811888943`*^9, 3.6031659655558357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "Integrate", "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"%", ",", "a"}], "]"}], "//", "ReleaseHold"}], "//", 
     "Evaluate"}], "//", "Hold"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.601845474906228*^9, 3.601845490362575*^9}, {
  3.6018455207072372`*^9, 3.601845655457076*^9}, {3.601845718735948*^9, 
  3.601845724128415*^9}, {3.6018457650387163`*^9, 3.601845765564578*^9}, {
  3.601845833739139*^9, 3.601845866263054*^9}, {3.601847998935848*^9, 
  3.601848009980111*^9}, {3.601848049915392*^9, 3.601848050227264*^9}, {
  3.6018480858426743`*^9, 3.6018481105140343`*^9}, {3.601852376725792*^9, 
  3.601852379824839*^9}, {3.601852511795422*^9, 3.601852567632225*^9}, {
  3.601852782387455*^9, 3.601852788923278*^9}, {3.60314447316092*^9, 
  3.603144473712722*^9}}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["a", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}]], " ", "x"}], 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "x"}], "]"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "a"}], " ", "x"}]], 
       RowBox[{
        SuperscriptBox["\[Pi]", "2"], "+", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.603144496698604*^9, 3.603144561560276*^9, 
  3.6031615812390137`*^9, 3.6031659684298964`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"%", "//", "N"}], "//", "ReleaseHold"}], ",", 
     RowBox[{"Exp", "[", "a", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.601845474906228*^9, 3.601845490362575*^9}, {
  3.6018455207072372`*^9, 3.601845655457076*^9}, {3.601845718735948*^9, 
  3.601845724128415*^9}, {3.6018457650387163`*^9, 3.601845765564578*^9}, {
  3.601845833739139*^9, 3.601845866263054*^9}, {3.601847998935848*^9, 
  3.601848009980111*^9}, {3.601848049915392*^9, 3.601848050227264*^9}, {
  3.6018480858426743`*^9, 3.6018481105140343`*^9}, {3.601852376725792*^9, 
  3.601852379824839*^9}, {3.601852511795422*^9, 3.601852567632225*^9}, {
  3.601852782387455*^9, 3.601852788923278*^9}, {3.60314447316092*^9, 
  3.603144473712722*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0fk/1HkcwPFxLZlcQzRjvmqUzdUqRYfl/WlZ10zHoEd6hNAoTcpRu6UN
OxZbKmmzRSG5tnaqKUxlm0mPzEPbQQeFwkjWOoYZmoOR+Wz7w+vx/ANejPjk
sAR9Eom08Uv/G5ow/OrhSIIfidRQr8ZyMPSnpUipAZDSm3GWp6+AVZeLS+up
EWC5Py/1KyMFMFs768qoHFhbZ+FpYaqAbRyN+DfqIQh4//s/TjYK6PX41f80
NQdKD/DSEpwVULFgc14+tQiua70yV7IVwDOpX3aCWg2Z58RqXZUCIrdfESgm
GyBpnMn2jp4EMuZFBTk0wdu61iGu1RQ4sSeGm09KIP0Zr2j5kyk43LYOipVP
oDhxu83j4k9g12DVp6f3AkJ89p4qiVfCnQH/5y++fQ11rHU2WYEqeMQts98u
6wDR24z0UQ81qL72tbixvxOYqg7GVYoG9Gf4lvZO7yBy8jFupkyDN469E36z
B3rzHzf2kWfgec7qthZXKQgLyuK65mlhUeHYzLWJfnC3u+bR6jwLYxpp35sV
A0AaEt8SwGeoHr3/1LzgI5iPaHoqj86BOfGHfHBwEPYk3s10Fevg1F7h7oql
Q5ASOPkuRo1BjfiDiVn/QtbZAqbddRI65ClpsG0eBmXBPoZ9pB6S3pScfMUY
hQfZnt0RNH00y+245HJ0DOJqY/nBH/SR2wZj3e77Mrhe/6m2qNIABVUy9ty2
m4BScYjZ0DFDdJjY6fghSg7hmn6HELYRcpdtJXduVEChqWBFt8tXyNpCYSLR
KsChtd4rx8EYGTZdEiwpnYRS37TZyPkmaN/q+93zmFNgxs6oGV04D/FD4ise
qKegUTJDaN1MkWqMZjl0/hMof8GPHNeQkTA8yKAo4MuHwA20Ec58lBWce7lh
SAluTsMdCflmiNEb2lWVq4LmltGqi0JztH5NThHVUw2bOQfInQaWKMrhxYxe
uxriuXuv0K5aItXT0wMpPA28Tc4NLY+zQsWGMYfClk6DwlCUtNiWgqz7hJX6
kmlIYo0vWN1GQUYZvIh1qTNQmb++alm5NSJdixEMULQQWwicrYk2KO2i4DTl
kRZeBrzJqmAtQGK34yZWB2bhCNXP90dvW2QVmuaebf4ZvJ52JV+m2qGe5S/b
00WfgV09YbKKthDdKoelgzFz0P+wtq3FmoqiBd5WhG4ONhXvy/aj0NDPuVd4
PX/qQPo9rbFppT26MUxcMmdh8H63ReoRQkfHy3Jj+zZhSN85LXHeREecsHGn
m2wMM8K4fMdwOqKLRLc2bsPQ7WknXBhNR/lndrScisew+IeoAotUOkr0Lpk0
TcegWyJNW1ZCR445NsHGtRiwEZ+qN0pHurXHzDqvYgiqCQ6wldNR9/jH17V8
DP6+FeHuSjoq3FYfHXgbQ6inA2OHjo6wa9jBXBGG2nuin5opBOp5dabcoB2D
prEzrMmHQPfyNLva32Dge829H0AEKvLZ6VLVhcGVtYtlHEggZs03Dd/1YXAZ
O/cxbAuB/jrS+oQ3gkEm08qVHAKdX+51hi3D8Myk5O4iLoFSB0ojGHIMf4vE
e5jJBHJmJUkfKjEoDvpl16QTyFCvo7pQgyGPJZO1ZxKoX+jDjdViICdKkEEO
gUTcKo8Vcxjcm+UZq04Q6MIisgpjDO1xF6o5BQT6Dx0yU4Q=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVyXk41HkcwPGZwbqvcc6YHzs25SqV6FA+3+Ip42gz9OAJoZFSUdazrUqW
pWJcT49HFJLRbJqt0Tra1liVWVs90YFQMiU7aVxDYwaT+W77x/t5/fFmJqSy
EykkEinka/8bmDj+4v6nRN9j7xQGJJIctP3oxyU0f7CISkv5hSIHz6sVVU20
cODUYm9dHTkEdQ/8Xk3jAJnIV5kayCGCo2q/SEuH7o+Wm1ZayuGtx3m/Ilou
tIpJfyc6y6HW6vtzBbQykB7wOrsuVA7Zek2r8mn1UF4iUmp4coiMuiaUzzZD
ETk41DtmFgxxdvQu+w64yeVLk83nwCl0eryTK4buB9llqx/PwcmezVCheAxP
EqIs/6n4DDbN5iNk8jOwSoksrExQQOuo39NnW1+CT8Bmy6yd8/AwudouarIP
+k/xM2QeSphfuc301rEBCNvxinmDqgLKosDMzuk1uOk/wp3UBfDGca1ht4eB
y+26N2K4CE9zN/R0uUrgnrw6flB/CRxKJxYbpt9BPavBo9tZDRMqyUj/2lFQ
n25vFMIXqJe1PTEp/gBSvnK47tQymBC/zoyNjcFdestZ13YNFB5uOVi7Qgpv
+6ZexyoxKJFg7FDWR2D5FAbZ/EZC6evFzdad4xDPPcK0iyQjyW0x9wVTBpZZ
64fC6RSkTu674nJqAlj8OEHAewpy266rOdg2CXPNn/lldVpoVx0z6Y7NNBxv
ZBlLz2ijk8R+x/fRM/DG/r09K1QHuU/uNRwIkcOEi3DtkMs3yMJUrideksNW
WZNXrr0u0u64IvyuahYqQtLUkUZ66MiGtiH9oDlw3Zt5XWarjwSshNq/lHNQ
92CRWHIzQPMTdDNp+WeoysQPHTcaopawXVpl/grwg+30TxwjlBWQd7VZqgCK
83hfYoExYr4NHOTlzcPFRzLe5RYTtGVjbhltvRLsklIMB7TMULT9s0VyrxIa
kg5fo98wQ/NPikaPZ6vgvFdeYE28OarQjk1nr1gAGUV09FtrKrIYaamjiBeg
JnDKakMPFelkZodvPrEI2vlbeKtqLBCpIVY4Sl2CsWLg7D1kidIuC4uoD5cg
3a8/qzbYCrW7XdAzT1HDGlvfbT96WyPzwDT3HJMvoHg0mHqVZoOGVz/vzRB9
ASPetJ4n3RY11sCKsdhlyO/g93RZ0FCM0Nuc0CxDf/mRHF8qHf2cdy17+KYG
XPzp9zrW2aFb48QVk2AMnoo9Eg8WA12ozosb2Y1BkLEgdt7NQBz2lNPtUAz7
n8cXOIYxEEMkagyJ+PpDbFpsYxiooGRfV2EChrbS6GLTEwx0yLty1iADg9F2
SdqqSgZyzLUM0OVj4DoJaGQZA2k2nTEeuIFBIQ7wt55hoKGpDy/5AgwWMbVh
7goGKo1oitl5B0M02565T8NA2JX9Q54Iw8Yh0elOKoGGX5TUaPViOPpmgN3h
Q6A/zqkO9PZj2Bqx/GYUEajMZ78LbxDDq2MHgnV3Eijo+prmHSMYdIzLPrD3
EOjPn7ofZ3/CsNJUPaPgEKh8tVdJ6CQGe7fKuw7JBDoxWhXOnMHgIWlPCkol
kHPwUcl9BYacct+c6xkE0ib31ZeqMLinTk72niXQuxaf5LglDOICMdLKJZAo
meexdhmD+t+ZTM98Al1yMJzHGENr7qV6TjGB/gPpLEu0
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.},
  Method->{},
  PlotRange->{{0, 2}, {0.999995566351572, 7.38905579733653}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6018455812138443`*^9, 3.601845656035294*^9}, {
   3.6018457194966593`*^9, 3.601845724468409*^9}, 3.601845765907505*^9, {
   3.60184582689913*^9, 3.601845866953929*^9}, 3.60184599812891*^9, {
   3.601846464807934*^9, 3.6018465008094273`*^9}, {3.601846531222682*^9, 
   3.601846535810774*^9}, 3.6018466984159184`*^9, {3.601847999495027*^9, 
   3.60184801085878*^9}, 3.6018480506764393`*^9, {3.601848086644259*^9, 
   3.601848110901093*^9}, 3.601852380741941*^9, {3.601852522146934*^9, 
   3.601852567954816*^9}, 3.601852789432706*^9, 3.601854096067185*^9, 
   3.603144002620275*^9, 3.603144506630007*^9, 3.6031445634249163`*^9, 
   3.603161583190536*^9, 3.603165971922696*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "Integrate", "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[ScriptCapitalI]", "[", 
          RowBox[{"a", ",", "0"}], "]"}], ",", "a"}], "]"}], "//", 
       "ReleaseHold"}], "//", "FullSimplify"}], "//", "Evaluate"}], "//", 
    "Hold"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "Integrate", "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[ScriptCapitalI]", "[", 
          RowBox[{"a", ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "2"}], "}"}]}], "]"}], "//", "ReleaseHold"}], "//",
       "FullSimplify"}], "//", "Evaluate"}], "//", "Hold"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "Integrate", "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[ScriptCapitalI]", "[", 
          RowBox[{"a", ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "3"}], "}"}]}], "]"}], "//", "ReleaseHold"}], "//",
       "FullSimplify"}], "//", "Evaluate"}], "//", "Hold"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.601853480242322*^9, 3.601853547255672*^9}, {
  3.6018535931978703`*^9, 3.601853595520228*^9}, {3.60314453826993*^9, 
  3.6031445452480288`*^9}}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      SuperscriptBox["a", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}]], 
      RowBox[{"Gamma", "[", "x", "]"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "a"}], " ", "x"}]], 
       RowBox[{
        SuperscriptBox["\[Pi]", "2"], "+", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.601853481096347*^9, 3.6018535477001667`*^9}, 
   3.601853595751708*^9, 3.601854098196588*^9, 3.60314400489572*^9, {
   3.603144530500184*^9, 3.603144563681673*^9}, 3.603161583449792*^9, 
   3.6031660222817297`*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      SuperscriptBox["a", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "x"}]], 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], "]"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "a"}], " ", "x"}]], " ", "x"}], 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.601853481096347*^9, 3.6018535477001667`*^9}, 
   3.601853595751708*^9, 3.601854098196588*^9, 3.60314400489572*^9, {
   3.603144530500184*^9, 3.603144563681673*^9}, 3.603161583449792*^9, 
   3.6031660224282*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      SuperscriptBox["a", 
       RowBox[{
        RowBox[{"-", "3"}], "+", "x"}]], 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "x"}], "]"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "a"}], " ", "x"}]], " ", 
        SuperscriptBox["x", "2"]}], 
       RowBox[{
        SuperscriptBox["\[Pi]", "2"], "+", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.601853481096347*^9, 3.6018535477001667`*^9}, 
   3.601853595751708*^9, 3.601854098196588*^9, 3.60314400489572*^9, {
   3.603144530500184*^9, 3.603144563681673*^9}, 3.603161583449792*^9, 
   3.603166022600636*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{977, 752},
WindowMargins->{{Automatic, 44}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3603201170-9909653"->{
  Cell[3211, 112, 118, 2, 40, "Print",
   CellTags->"Info3603201170-9909653"],
  Cell[3332, 116, 808, 23, 22, "Print",
   CellTags->"Info3603201170-9909653"],
  Cell[5938, 205, 120, 2, 40, "Print",
   CellTags->"Info3603201170-9909653"],
  Cell[6061, 209, 809, 23, 22, "Print",
   CellTags->"Info3603201170-9909653"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3603201170-9909653", 188833, 4155}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 125, 3, 92, "Title"],
Cell[707, 27, 145, 4, 81, "Subtitle"],
Cell[855, 33, 105, 1, 51, "Subtitle"],
Cell[963, 36, 118, 1, 29, "Subsubtitle"],
Cell[1084, 39, 157, 3, 28, "Input"],
Cell[1244, 44, 159, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[1428, 52, 443, 10, 28, "Input"],
Cell[1874, 64, 190, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2101, 72, 171, 3, 28, "Input"],
Cell[2275, 77, 148, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2460, 85, 456, 12, 46, "Input"],
Cell[2919, 99, 120, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3076, 106, 110, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[3211, 112, 118, 2, 40, "Print",
 CellTags->"Info3603201170-9909653"],
Cell[3332, 116, 808, 23, 22, "Print",
 CellTags->"Info3603201170-9909653"]
}, Open  ]]
}, Open  ]],
Cell[4167, 143, 91, 2, 28, "Input"],
Cell[4261, 147, 159, 4, 28, "Input"],
Cell[4423, 153, 372, 9, 28, "Input"],
Cell[CellGroupData[{
Cell[4820, 166, 171, 3, 28, "Input"],
Cell[4994, 171, 170, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5201, 179, 420, 11, 46, "Input"],
Cell[5624, 192, 142, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5803, 199, 110, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[5938, 205, 120, 2, 40, "Print",
 CellTags->"Info3603201170-9909653"],
Cell[6061, 209, 809, 23, 22, "Print",
 CellTags->"Info3603201170-9909653"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6919, 238, 178, 4, 29, "Subsubtitle"],
Cell[7100, 244, 124, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[7249, 250, 120, 2, 28, "Input"],
Cell[7372, 254, 121, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7530, 261, 118, 2, 28, "Input"],
Cell[7651, 265, 119, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7807, 272, 114, 2, 28, "Input"],
Cell[7924, 276, 119, 2, 28, "Output"]
}, Open  ]],
Cell[8058, 281, 86, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[8169, 286, 125, 2, 28, "Input"],
Cell[8297, 290, 120, 3, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8466, 299, 122, 1, 29, "Subsubtitle"],
Cell[CellGroupData[{
Cell[8613, 304, 174, 4, 28, "Input"],
Cell[8790, 310, 236, 6, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9075, 322, 117, 1, 29, "Subsubtitle"],
Cell[CellGroupData[{
Cell[9217, 327, 147, 3, 28, "Input"],
Cell[9367, 332, 211, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9615, 343, 196, 5, 28, "Input"],
Cell[9814, 350, 824, 27, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10687, 383, 99, 1, 51, "Subtitle"],
Cell[CellGroupData[{
Cell[10811, 388, 1403, 46, 148, "Input"],
Cell[12217, 436, 448, 8, 63, "Output"]
}, Open  ]],
Cell[12680, 447, 243, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[12948, 455, 326, 9, 28, "Input"],
Cell[13277, 466, 3168, 58, 199, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16482, 529, 331, 7, 46, "Input"],
Cell[16816, 538, 481, 7, 46, "Output"],
Cell[17300, 547, 479, 7, 46, "Output"]
}, Open  ]],
Cell[17794, 557, 187, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[18006, 565, 1328, 43, 148, "Input"],
Cell[19337, 610, 499, 9, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19885, 625, 99, 1, 51, "Subtitle"],
Cell[CellGroupData[{
Cell[20009, 630, 669, 18, 99, "Input"],
Cell[20681, 650, 461, 7, 46, "Output"],
Cell[21145, 659, 218, 3, 28, "Output"],
Cell[21366, 664, 459, 7, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21862, 676, 142, 3, 28, "Input"],
Cell[22007, 681, 311, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22367, 692, 97, 1, 51, "Subtitle"],
Cell[22467, 695, 277, 9, 46, "Input"],
Cell[CellGroupData[{
Cell[22769, 708, 325, 8, 28, "Input"],
Cell[23097, 718, 549, 10, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23683, 733, 470, 12, 28, "Input"],
Cell[24156, 747, 603, 11, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24796, 763, 303, 6, 28, "Input"],
Cell[25102, 771, 642, 17, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25793, 794, 97, 1, 51, "Subtitle"],
Cell[CellGroupData[{
Cell[25915, 799, 512, 15, 28, "Input"],
Cell[26430, 816, 5508, 95, 272, "Output"]
}, Open  ]],
Cell[31953, 914, 253, 3, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32243, 922, 97, 1, 51, "Subtitle"],
Cell[CellGroupData[{
Cell[32365, 927, 1453, 44, 80, "Input"],
Cell[33821, 973, 55526, 917, 311, "Output"]
}, Open  ]],
Cell[89362, 1893, 230, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[89617, 1902, 1233, 39, 80, "Input"],
Cell[90853, 1943, 53194, 882, 308, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144096, 2831, 99, 1, 51, "Subtitle"],
Cell[CellGroupData[{
Cell[144220, 2836, 666, 21, 46, "Input"],
Cell[144889, 2859, 454, 14, 47, "Output"],
Cell[145346, 2875, 4392, 129, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149775, 3009, 620, 20, 28, "Input"],
Cell[150398, 3031, 4391, 129, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154838, 3166, 97, 1, 51, "Subtitle"],
Cell[CellGroupData[{
Cell[154960, 3171, 548, 16, 85, "Input"],
Cell[155511, 3189, 821, 25, 74, "Output"]
}, Open  ]],
Cell[156347, 3217, 309, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[156681, 3227, 488, 12, 46, "Input"],
Cell[157172, 3241, 1246, 39, 80, "Output"]
}, Open  ]],
Cell[158433, 3283, 260, 5, 30, "Text"],
Cell[158696, 3290, 156, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[158877, 3297, 358, 10, 46, "Input"],
Cell[159238, 3309, 1451, 49, 35, "Output"],
Cell[160692, 3360, 1849, 59, 80, "Output"]
}, Open  ]],
Cell[162556, 3422, 119, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[162700, 3427, 570, 15, 28, "Input"],
Cell[163273, 3444, 840, 24, 35, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[164162, 3474, 99, 1, 51, "Subtitle"],
Cell[164264, 3477, 561, 14, 52, "Input"],
Cell[CellGroupData[{
Cell[164850, 3495, 277, 7, 28, "Input"],
Cell[165130, 3504, 474, 9, 28, "Output"]
}, Open  ]],
Cell[165619, 3516, 183, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[165827, 3522, 979, 32, 121, "Input"],
Cell[166809, 3556, 1314, 44, 59, "Output"],
Cell[168126, 3602, 448, 9, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168623, 3617, 97, 1, 51, "Subtitle"],
Cell[168723, 3620, 135, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[168883, 3625, 2217, 57, 89, "Input"],
Cell[171103, 3684, 1669, 44, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172809, 3733, 402, 11, 28, "Input"],
Cell[173214, 3746, 633, 17, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173884, 3768, 550, 9, 28, "Input"],
Cell[174437, 3779, 164, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174638, 3786, 896, 18, 28, "Input"],
Cell[175537, 3806, 901, 26, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176475, 3837, 880, 18, 28, "Input"],
Cell[177358, 3857, 924, 28, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178319, 3890, 889, 18, 28, "Input"],
Cell[179211, 3910, 4563, 81, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183811, 3996, 1508, 46, 63, "Input"],
Cell[185322, 4044, 988, 28, 53, "Output"],
Cell[186313, 4074, 1037, 30, 53, "Output"],
Cell[187353, 4106, 1099, 32, 53, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
